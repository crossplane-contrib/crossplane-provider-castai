//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadInitParameters) DeepCopyInto(out *AadInitParameters) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadInitParameters.
func (in *AadInitParameters) DeepCopy() *AadInitParameters {
	if in == nil {
		return nil
	}
	out := new(AadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadObservation) DeepCopyInto(out *AadObservation) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadObservation.
func (in *AadObservation) DeepCopy() *AadObservation {
	if in == nil {
		return nil
	}
	out := new(AadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadParameters) DeepCopyInto(out *AadParameters) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadParameters.
func (in *AadParameters) DeepCopy() *AadParameters {
	if in == nil {
		return nil
	}
	out := new(AadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityInitParameters) DeepCopyInto(out *AffinityInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityInitParameters.
func (in *AffinityInitParameters) DeepCopy() *AffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityObservation) DeepCopyInto(out *AffinityObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityObservation.
func (in *AffinityObservation) DeepCopy() *AffinityObservation {
	if in == nil {
		return nil
	}
	out := new(AffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityParameters) DeepCopyInto(out *AffinityParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityParameters.
func (in *AffinityParameters) DeepCopy() *AffinityParameters {
	if in == nil {
		return nil
	}
	out := new(AffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigInitParameters) DeepCopyInto(out *AggressiveModeConfigInitParameters) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigInitParameters.
func (in *AggressiveModeConfigInitParameters) DeepCopy() *AggressiveModeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigObservation) DeepCopyInto(out *AggressiveModeConfigObservation) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigObservation.
func (in *AggressiveModeConfigObservation) DeepCopy() *AggressiveModeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigParameters) DeepCopyInto(out *AggressiveModeConfigParameters) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigParameters.
func (in *AggressiveModeConfigParameters) DeepCopy() *AggressiveModeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksCluster) DeepCopyInto(out *AksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksCluster.
func (in *AksCluster) DeepCopy() *AksCluster {
	if in == nil {
		return nil
	}
	out := new(AksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterInitParameters) DeepCopyInto(out *AksClusterInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterInitParameters.
func (in *AksClusterInitParameters) DeepCopy() *AksClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterList) DeepCopyInto(out *AksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterList.
func (in *AksClusterList) DeepCopy() *AksClusterList {
	if in == nil {
		return nil
	}
	out := new(AksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterObservation) DeepCopyInto(out *AksClusterObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterObservation.
func (in *AksClusterObservation) DeepCopy() *AksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterParameters) DeepCopyInto(out *AksClusterParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterParameters.
func (in *AksClusterParameters) DeepCopy() *AksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterSpec) DeepCopyInto(out *AksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterSpec.
func (in *AksClusterSpec) DeepCopy() *AksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterStatus) DeepCopyInto(out *AksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterStatus.
func (in *AksClusterStatus) DeepCopy() *AksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksInitParameters) DeepCopyInto(out *AksInitParameters) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksInitParameters.
func (in *AksInitParameters) DeepCopy() *AksInitParameters {
	if in == nil {
		return nil
	}
	out := new(AksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksObservation) DeepCopyInto(out *AksObservation) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksObservation.
func (in *AksObservation) DeepCopy() *AksObservation {
	if in == nil {
		return nil
	}
	out := new(AksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksParameters) DeepCopyInto(out *AksParameters) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksParameters.
func (in *AksParameters) DeepCopy() *AksParameters {
	if in == nil {
		return nil
	}
	out := new(AksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScaler) DeepCopyInto(out *AutoScaler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScaler.
func (in *AutoScaler) DeepCopy() *AutoScaler {
	if in == nil {
		return nil
	}
	out := new(AutoScaler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoScaler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerInitParameters) DeepCopyInto(out *AutoScalerInitParameters) {
	*out = *in
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerInitParameters.
func (in *AutoScalerInitParameters) DeepCopy() *AutoScalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerList) DeepCopyInto(out *AutoScalerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoScaler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerList.
func (in *AutoScalerList) DeepCopy() *AutoScalerList {
	if in == nil {
		return nil
	}
	out := new(AutoScalerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoScalerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerObservation) DeepCopyInto(out *AutoScalerObservation) {
	*out = *in
	if in.AutoscalerPolicies != nil {
		in, out := &in.AutoscalerPolicies, &out.AutoscalerPolicies
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerObservation.
func (in *AutoScalerObservation) DeepCopy() *AutoScalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerParameters) DeepCopyInto(out *AutoScalerParameters) {
	*out = *in
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerParameters.
func (in *AutoScalerParameters) DeepCopy() *AutoScalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerSpec) DeepCopyInto(out *AutoScalerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerSpec.
func (in *AutoScalerSpec) DeepCopy() *AutoScalerSpec {
	if in == nil {
		return nil
	}
	out := new(AutoScalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerStatus) DeepCopyInto(out *AutoScalerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerStatus.
func (in *AutoScalerStatus) DeepCopy() *AutoScalerStatus {
	if in == nil {
		return nil
	}
	out := new(AutoScalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsInitParameters) DeepCopyInto(out *AutoscalerSettingsInitParameters) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsInitParameters.
func (in *AutoscalerSettingsInitParameters) DeepCopy() *AutoscalerSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsObservation) DeepCopyInto(out *AutoscalerSettingsObservation) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsObservation.
func (in *AutoscalerSettingsObservation) DeepCopy() *AutoscalerSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsParameters) DeepCopyInto(out *AutoscalerSettingsParameters) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsParameters.
func (in *AutoscalerSettingsParameters) DeepCopy() *AutoscalerSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUInitParameters) DeepCopyInto(out *CPUInitParameters) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUInitParameters.
func (in *CPUInitParameters) DeepCopy() *CPUInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUObservation) DeepCopyInto(out *CPUObservation) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUObservation.
func (in *CPUObservation) DeepCopy() *CPUObservation {
	if in == nil {
		return nil
	}
	out := new(CPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUParameters) DeepCopyInto(out *CPUParameters) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUParameters.
func (in *CPUParameters) DeepCopy() *CPUParameters {
	if in == nil {
		return nil
	}
	out := new(CPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsInitParameters) DeepCopyInto(out *ClusterLimitsInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsInitParameters.
func (in *ClusterLimitsInitParameters) DeepCopy() *ClusterLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsObservation) DeepCopyInto(out *ClusterLimitsObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsObservation.
func (in *ClusterLimitsObservation) DeepCopy() *ClusterLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsParameters) DeepCopyInto(out *ClusterLimitsParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsParameters.
func (in *ClusterLimitsParameters) DeepCopy() *ClusterLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsInitParameters) DeepCopyInto(out *ConstraintsInitParameters) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsInitParameters.
func (in *ConstraintsInitParameters) DeepCopy() *ConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsObservation) DeepCopyInto(out *ConstraintsObservation) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsObservation.
func (in *ConstraintsObservation) DeepCopy() *ConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(ConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsParameters) DeepCopyInto(out *ConstraintsParameters) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsParameters.
func (in *ConstraintsParameters) DeepCopy() *ConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(ConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityInitParameters) DeepCopyInto(out *CustomPriorityInitParameters) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityInitParameters.
func (in *CustomPriorityInitParameters) DeepCopy() *CustomPriorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityObservation) DeepCopyInto(out *CustomPriorityObservation) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityObservation.
func (in *CustomPriorityObservation) DeepCopy() *CustomPriorityObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityParameters) DeepCopyInto(out *CustomPriorityParameters) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityParameters.
func (in *CustomPriorityParameters) DeepCopy() *CustomPriorityParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsInitParameters) DeepCopyInto(out *CustomTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsInitParameters.
func (in *CustomTaintsInitParameters) DeepCopy() *CustomTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsObservation) DeepCopyInto(out *CustomTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsObservation.
func (in *CustomTaintsObservation) DeepCopy() *CustomTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsParameters) DeepCopyInto(out *CustomTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsParameters.
func (in *CustomTaintsParameters) DeepCopy() *CustomTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityInitParameters) DeepCopyInto(out *DedicatedNodeAffinityInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityInitParameters.
func (in *DedicatedNodeAffinityInitParameters) DeepCopy() *DedicatedNodeAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityObservation) DeepCopyInto(out *DedicatedNodeAffinityObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityObservation.
func (in *DedicatedNodeAffinityObservation) DeepCopy() *DedicatedNodeAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityParameters) DeepCopyInto(out *DedicatedNodeAffinityParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityParameters.
func (in *DedicatedNodeAffinityParameters) DeepCopy() *DedicatedNodeAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksCluster) DeepCopyInto(out *EksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksCluster.
func (in *EksCluster) DeepCopy() *EksCluster {
	if in == nil {
		return nil
	}
	out := new(EksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterId) DeepCopyInto(out *EksClusterId) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterId.
func (in *EksClusterId) DeepCopy() *EksClusterId {
	if in == nil {
		return nil
	}
	out := new(EksClusterId)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterId) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdInitParameters) DeepCopyInto(out *EksClusterIdInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdInitParameters.
func (in *EksClusterIdInitParameters) DeepCopy() *EksClusterIdInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdList) DeepCopyInto(out *EksClusterIdList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksClusterId, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdList.
func (in *EksClusterIdList) DeepCopy() *EksClusterIdList {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterIdList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdObservation) DeepCopyInto(out *EksClusterIdObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdObservation.
func (in *EksClusterIdObservation) DeepCopy() *EksClusterIdObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdParameters) DeepCopyInto(out *EksClusterIdParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdParameters.
func (in *EksClusterIdParameters) DeepCopy() *EksClusterIdParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdSpec) DeepCopyInto(out *EksClusterIdSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdSpec.
func (in *EksClusterIdSpec) DeepCopy() *EksClusterIdSpec {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdStatus) DeepCopyInto(out *EksClusterIdStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdStatus.
func (in *EksClusterIdStatus) DeepCopy() *EksClusterIdStatus {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterInitParameters) DeepCopyInto(out *EksClusterInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterInitParameters.
func (in *EksClusterInitParameters) DeepCopy() *EksClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterList) DeepCopyInto(out *EksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterList.
func (in *EksClusterList) DeepCopy() *EksClusterList {
	if in == nil {
		return nil
	}
	out := new(EksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterObservation) DeepCopyInto(out *EksClusterObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterObservation.
func (in *EksClusterObservation) DeepCopy() *EksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterParameters) DeepCopyInto(out *EksClusterParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterParameters.
func (in *EksClusterParameters) DeepCopy() *EksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterSpec) DeepCopyInto(out *EksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterSpec.
func (in *EksClusterSpec) DeepCopy() *EksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(EksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterStatus) DeepCopyInto(out *EksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterStatus.
func (in *EksClusterStatus) DeepCopy() *EksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(EksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksInitParameters) DeepCopyInto(out *EksInitParameters) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksInitParameters.
func (in *EksInitParameters) DeepCopy() *EksInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksObservation) DeepCopyInto(out *EksObservation) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksObservation.
func (in *EksObservation) DeepCopy() *EksObservation {
	if in == nil {
		return nil
	}
	out := new(EksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksParameters) DeepCopyInto(out *EksParameters) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksParameters.
func (in *EksParameters) DeepCopy() *EksParameters {
	if in == nil {
		return nil
	}
	out := new(EksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArn) DeepCopyInto(out *EksUserArn) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArn.
func (in *EksUserArn) DeepCopy() *EksUserArn {
	if in == nil {
		return nil
	}
	out := new(EksUserArn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksUserArn) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnInitParameters) DeepCopyInto(out *EksUserArnInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnInitParameters.
func (in *EksUserArnInitParameters) DeepCopy() *EksUserArnInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksUserArnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnList) DeepCopyInto(out *EksUserArnList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksUserArn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnList.
func (in *EksUserArnList) DeepCopy() *EksUserArnList {
	if in == nil {
		return nil
	}
	out := new(EksUserArnList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksUserArnList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnObservation) DeepCopyInto(out *EksUserArnObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnObservation.
func (in *EksUserArnObservation) DeepCopy() *EksUserArnObservation {
	if in == nil {
		return nil
	}
	out := new(EksUserArnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnParameters) DeepCopyInto(out *EksUserArnParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnParameters.
func (in *EksUserArnParameters) DeepCopy() *EksUserArnParameters {
	if in == nil {
		return nil
	}
	out := new(EksUserArnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnSpec) DeepCopyInto(out *EksUserArnSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnSpec.
func (in *EksUserArnSpec) DeepCopy() *EksUserArnSpec {
	if in == nil {
		return nil
	}
	out := new(EksUserArnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnStatus) DeepCopyInto(out *EksUserArnStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnStatus.
func (in *EksUserArnStatus) DeepCopy() *EksUserArnStatus {
	if in == nil {
		return nil
	}
	out := new(EksUserArnStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesInitParameters) DeepCopyInto(out *EmptyNodesInitParameters) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesInitParameters.
func (in *EmptyNodesInitParameters) DeepCopy() *EmptyNodesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesObservation) DeepCopyInto(out *EmptyNodesObservation) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesObservation.
func (in *EmptyNodesObservation) DeepCopy() *EmptyNodesObservation {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesParameters) DeepCopyInto(out *EmptyNodesParameters) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesParameters.
func (in *EmptyNodesParameters) DeepCopy() *EmptyNodesParameters {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskInitParameters) DeepCopyInto(out *EphemeralOsDiskInitParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskInitParameters.
func (in *EphemeralOsDiskInitParameters) DeepCopy() *EphemeralOsDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskObservation) DeepCopyInto(out *EphemeralOsDiskObservation) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskObservation.
func (in *EphemeralOsDiskObservation) DeepCopy() *EphemeralOsDiskObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskParameters) DeepCopyInto(out *EphemeralOsDiskParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskParameters.
func (in *EphemeralOsDiskParameters) DeepCopy() *EphemeralOsDiskParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfig) DeepCopyInto(out *EvictorAdvancedConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfig.
func (in *EvictorAdvancedConfig) DeepCopy() *EvictorAdvancedConfig {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EvictorAdvancedConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigInitParameters.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigObservation) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigObservation) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigObservation.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigObservation) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigParameters) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigParameters) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigParameters.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigParameters) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigInitParameters) DeepCopyInto(out *EvictorAdvancedConfigInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigInitParameters.
func (in *EvictorAdvancedConfigInitParameters) DeepCopy() *EvictorAdvancedConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigList) DeepCopyInto(out *EvictorAdvancedConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EvictorAdvancedConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigList.
func (in *EvictorAdvancedConfigList) DeepCopy() *EvictorAdvancedConfigList {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EvictorAdvancedConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigObservation) DeepCopyInto(out *EvictorAdvancedConfigObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigObservation.
func (in *EvictorAdvancedConfigObservation) DeepCopy() *EvictorAdvancedConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigParameters) DeepCopyInto(out *EvictorAdvancedConfigParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigParameters.
func (in *EvictorAdvancedConfigParameters) DeepCopy() *EvictorAdvancedConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigSpec) DeepCopyInto(out *EvictorAdvancedConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigSpec.
func (in *EvictorAdvancedConfigSpec) DeepCopy() *EvictorAdvancedConfigSpec {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigStatus) DeepCopyInto(out *EvictorAdvancedConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigStatus.
func (in *EvictorAdvancedConfigStatus) DeepCopy() *EvictorAdvancedConfigStatus {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorInitParameters) DeepCopyInto(out *EvictorInitParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorInitParameters.
func (in *EvictorInitParameters) DeepCopy() *EvictorInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorObservation) DeepCopyInto(out *EvictorObservation) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorObservation.
func (in *EvictorObservation) DeepCopy() *EvictorObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorParameters) DeepCopyInto(out *EvictorParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorParameters.
func (in *EvictorParameters) DeepCopy() *EvictorParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsInitParameters) DeepCopyInto(out *ExecutionConditionsInitParameters) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsInitParameters.
func (in *ExecutionConditionsInitParameters) DeepCopy() *ExecutionConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsObservation) DeepCopyInto(out *ExecutionConditionsObservation) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsObservation.
func (in *ExecutionConditionsObservation) DeepCopy() *ExecutionConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsParameters) DeepCopyInto(out *ExecutionConditionsParameters) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsParameters.
func (in *ExecutionConditionsParameters) DeepCopy() *ExecutionConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeCluster) DeepCopyInto(out *GkeCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeCluster.
func (in *GkeCluster) DeepCopy() *GkeCluster {
	if in == nil {
		return nil
	}
	out := new(GkeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterInitParameters) DeepCopyInto(out *GkeClusterInitParameters) {
	*out = *in
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterInitParameters.
func (in *GkeClusterInitParameters) DeepCopy() *GkeClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterList) DeepCopyInto(out *GkeClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GkeCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterList.
func (in *GkeClusterList) DeepCopy() *GkeClusterList {
	if in == nil {
		return nil
	}
	out := new(GkeClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterObservation) DeepCopyInto(out *GkeClusterObservation) {
	*out = *in
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterObservation.
func (in *GkeClusterObservation) DeepCopy() *GkeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterParameters) DeepCopyInto(out *GkeClusterParameters) {
	*out = *in
	if in.CredentialsJSONSecretRef != nil {
		in, out := &in.CredentialsJSONSecretRef, &out.CredentialsJSONSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterParameters.
func (in *GkeClusterParameters) DeepCopy() *GkeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterSpec) DeepCopyInto(out *GkeClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterSpec.
func (in *GkeClusterSpec) DeepCopy() *GkeClusterSpec {
	if in == nil {
		return nil
	}
	out := new(GkeClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterStatus) DeepCopyInto(out *GkeClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterStatus.
func (in *GkeClusterStatus) DeepCopy() *GkeClusterStatus {
	if in == nil {
		return nil
	}
	out := new(GkeClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeInitParameters) DeepCopyInto(out *GkeInitParameters) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeInitParameters.
func (in *GkeInitParameters) DeepCopy() *GkeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersInitParameters) DeepCopyInto(out *GkeLoadbalancersInitParameters) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersInitParameters.
func (in *GkeLoadbalancersInitParameters) DeepCopy() *GkeLoadbalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersObservation) DeepCopyInto(out *GkeLoadbalancersObservation) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersObservation.
func (in *GkeLoadbalancersObservation) DeepCopy() *GkeLoadbalancersObservation {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersParameters) DeepCopyInto(out *GkeLoadbalancersParameters) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersParameters.
func (in *GkeLoadbalancersParameters) DeepCopy() *GkeLoadbalancersParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeObservation) DeepCopyInto(out *GkeObservation) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeObservation.
func (in *GkeObservation) DeepCopy() *GkeObservation {
	if in == nil {
		return nil
	}
	out := new(GkeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeParameters) DeepCopyInto(out *GkeParameters) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeParameters.
func (in *GkeParameters) DeepCopy() *GkeParameters {
	if in == nil {
		return nil
	}
	out := new(GkeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuInitParameters) DeepCopyInto(out *GpuInitParameters) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuInitParameters.
func (in *GpuInitParameters) DeepCopy() *GpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(GpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuObservation) DeepCopyInto(out *GpuObservation) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuObservation.
func (in *GpuObservation) DeepCopy() *GpuObservation {
	if in == nil {
		return nil
	}
	out := new(GpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuParameters) DeepCopyInto(out *GpuParameters) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuParameters.
func (in *GpuParameters) DeepCopy() *GpuParameters {
	if in == nil {
		return nil
	}
	out := new(GpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigInitParameters) DeepCopyInto(out *HTTPProxyConfigInitParameters) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigInitParameters.
func (in *HTTPProxyConfigInitParameters) DeepCopy() *HTTPProxyConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigObservation) DeepCopyInto(out *HTTPProxyConfigObservation) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigObservation.
func (in *HTTPProxyConfigObservation) DeepCopy() *HTTPProxyConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigParameters) DeepCopyInto(out *HTTPProxyConfigParameters) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigParameters.
func (in *HTTPProxyConfigParameters) DeepCopy() *HTTPProxyConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomInitParameters) DeepCopyInto(out *HeadroomInitParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomInitParameters.
func (in *HeadroomInitParameters) DeepCopy() *HeadroomInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomObservation) DeepCopyInto(out *HeadroomObservation) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomObservation.
func (in *HeadroomObservation) DeepCopy() *HeadroomObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomParameters) DeepCopyInto(out *HeadroomParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomParameters.
func (in *HeadroomParameters) DeepCopy() *HeadroomParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotInitParameters) DeepCopyInto(out *HeadroomSpotInitParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotInitParameters.
func (in *HeadroomSpotInitParameters) DeepCopy() *HeadroomSpotInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotObservation) DeepCopyInto(out *HeadroomSpotObservation) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotObservation.
func (in *HeadroomSpotObservation) DeepCopy() *HeadroomSpotObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotParameters) DeepCopyInto(out *HeadroomSpotParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotParameters.
func (in *HeadroomSpotParameters) DeepCopy() *HeadroomSpotParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsInitParameters) DeepCopyInto(out *IPBasedBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsInitParameters.
func (in *IPBasedBackendPoolsInitParameters) DeepCopy() *IPBasedBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsObservation) DeepCopyInto(out *IPBasedBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsObservation.
func (in *IPBasedBackendPoolsObservation) DeepCopy() *IPBasedBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsParameters) DeepCopyInto(out *IPBasedBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsParameters.
func (in *IPBasedBackendPoolsParameters) DeepCopy() *IPBasedBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesInitParameters) DeepCopyInto(out *InstanceFamiliesInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesInitParameters.
func (in *InstanceFamiliesInitParameters) DeepCopy() *InstanceFamiliesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesObservation) DeepCopyInto(out *InstanceFamiliesObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesObservation.
func (in *InstanceFamiliesObservation) DeepCopy() *InstanceFamiliesObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesParameters) DeepCopyInto(out *InstanceFamiliesParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesParameters.
func (in *InstanceFamiliesParameters) DeepCopy() *InstanceFamiliesParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsInitParameters) DeepCopyInto(out *KopsInitParameters) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsInitParameters.
func (in *KopsInitParameters) DeepCopy() *KopsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KopsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsObservation) DeepCopyInto(out *KopsObservation) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsObservation.
func (in *KopsObservation) DeepCopy() *KopsObservation {
	if in == nil {
		return nil
	}
	out := new(KopsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsParameters) DeepCopyInto(out *KopsParameters) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsParameters.
func (in *KopsParameters) DeepCopy() *KopsParameters {
	if in == nil {
		return nil
	}
	out := new(KopsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationInitParameters) DeepCopyInto(out *LaunchConfigurationInitParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationInitParameters.
func (in *LaunchConfigurationInitParameters) DeepCopy() *LaunchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationObservation) DeepCopyInto(out *LaunchConfigurationObservation) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationObservation.
func (in *LaunchConfigurationObservation) DeepCopy() *LaunchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationParameters) DeepCopyInto(out *LaunchConfigurationParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationParameters.
func (in *LaunchConfigurationParameters) DeepCopy() *LaunchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersInitParameters) DeepCopyInto(out *LoadbalancersInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersInitParameters.
func (in *LoadbalancersInitParameters) DeepCopy() *LoadbalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersObservation) DeepCopyInto(out *LoadbalancersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersObservation.
func (in *LoadbalancersObservation) DeepCopy() *LoadbalancersObservation {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersParameters) DeepCopyInto(out *LoadbalancersParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersParameters.
func (in *LoadbalancersParameters) DeepCopy() *LoadbalancersParameters {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsInitParameters) DeepCopyInto(out *MatchExpressionsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsInitParameters.
func (in *MatchExpressionsInitParameters) DeepCopy() *MatchExpressionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsObservation) DeepCopyInto(out *MatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsObservation.
func (in *MatchExpressionsObservation) DeepCopy() *MatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsParameters) DeepCopyInto(out *MatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsParameters.
func (in *MatchExpressionsParameters) DeepCopy() *MatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsInitParameters) DeepCopyInto(out *NicBasedBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsInitParameters.
func (in *NicBasedBackendPoolsInitParameters) DeepCopy() *NicBasedBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsObservation) DeepCopyInto(out *NicBasedBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsObservation.
func (in *NicBasedBackendPoolsObservation) DeepCopy() *NicBasedBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsParameters) DeepCopyInto(out *NicBasedBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsParameters.
func (in *NicBasedBackendPoolsParameters) DeepCopy() *NicBasedBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfiguration) DeepCopyInto(out *NodeConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfiguration.
func (in *NodeConfiguration) DeepCopy() *NodeConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefault) DeepCopyInto(out *NodeConfigurationDefault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefault.
func (in *NodeConfigurationDefault) DeepCopy() *NodeConfigurationDefault {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationDefault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultInitParameters) DeepCopyInto(out *NodeConfigurationDefaultInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultInitParameters.
func (in *NodeConfigurationDefaultInitParameters) DeepCopy() *NodeConfigurationDefaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultList) DeepCopyInto(out *NodeConfigurationDefaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeConfigurationDefault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultList.
func (in *NodeConfigurationDefaultList) DeepCopy() *NodeConfigurationDefaultList {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationDefaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultObservation) DeepCopyInto(out *NodeConfigurationDefaultObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultObservation.
func (in *NodeConfigurationDefaultObservation) DeepCopy() *NodeConfigurationDefaultObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultParameters) DeepCopyInto(out *NodeConfigurationDefaultParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultParameters.
func (in *NodeConfigurationDefaultParameters) DeepCopy() *NodeConfigurationDefaultParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultSpec) DeepCopyInto(out *NodeConfigurationDefaultSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultSpec.
func (in *NodeConfigurationDefaultSpec) DeepCopy() *NodeConfigurationDefaultSpec {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultStatus) DeepCopyInto(out *NodeConfigurationDefaultStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultStatus.
func (in *NodeConfigurationDefaultStatus) DeepCopy() *NodeConfigurationDefaultStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationInitParameters) DeepCopyInto(out *NodeConfigurationInitParameters) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationInitParameters.
func (in *NodeConfigurationInitParameters) DeepCopy() *NodeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationList) DeepCopyInto(out *NodeConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationList.
func (in *NodeConfigurationList) DeepCopy() *NodeConfigurationList {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationObservation) DeepCopyInto(out *NodeConfigurationObservation) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationObservation.
func (in *NodeConfigurationObservation) DeepCopy() *NodeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationParameters) DeepCopyInto(out *NodeConfigurationParameters) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationParameters.
func (in *NodeConfigurationParameters) DeepCopy() *NodeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationSpec) DeepCopyInto(out *NodeConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationSpec.
func (in *NodeConfigurationSpec) DeepCopy() *NodeConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationStatus) DeepCopyInto(out *NodeConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationStatus.
func (in *NodeConfigurationStatus) DeepCopy() *NodeConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsInitParameters) DeepCopyInto(out *NodeConstraintsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsInitParameters.
func (in *NodeConstraintsInitParameters) DeepCopy() *NodeConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsObservation) DeepCopyInto(out *NodeConstraintsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsObservation.
func (in *NodeConstraintsObservation) DeepCopy() *NodeConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsParameters) DeepCopyInto(out *NodeConstraintsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsParameters.
func (in *NodeConstraintsParameters) DeepCopy() *NodeConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerInitParameters) DeepCopyInto(out *NodeDownscalerInitParameters) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerInitParameters.
func (in *NodeDownscalerInitParameters) DeepCopy() *NodeDownscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerObservation) DeepCopyInto(out *NodeDownscalerObservation) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerObservation.
func (in *NodeDownscalerObservation) DeepCopy() *NodeDownscalerObservation {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerParameters) DeepCopyInto(out *NodeDownscalerParameters) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerParameters.
func (in *NodeDownscalerParameters) DeepCopy() *NodeDownscalerParameters {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorInitParameters) DeepCopyInto(out *NodeSelectorInitParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorInitParameters.
func (in *NodeSelectorInitParameters) DeepCopy() *NodeSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorObservation) DeepCopyInto(out *NodeSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorObservation.
func (in *NodeSelectorObservation) DeepCopy() *NodeSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorParameters) DeepCopyInto(out *NodeSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorParameters.
func (in *NodeSelectorParameters) DeepCopy() *NodeSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplate) DeepCopyInto(out *NodeTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplate.
func (in *NodeTemplate) DeepCopy() *NodeTemplate {
	if in == nil {
		return nil
	}
	out := new(NodeTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateInitParameters) DeepCopyInto(out *NodeTemplateInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateInitParameters.
func (in *NodeTemplateInitParameters) DeepCopy() *NodeTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateList) DeepCopyInto(out *NodeTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateList.
func (in *NodeTemplateList) DeepCopy() *NodeTemplateList {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateObservation) DeepCopyInto(out *NodeTemplateObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateObservation.
func (in *NodeTemplateObservation) DeepCopy() *NodeTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateParameters) DeepCopyInto(out *NodeTemplateParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateParameters.
func (in *NodeTemplateParameters) DeepCopy() *NodeTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateSpec) DeepCopyInto(out *NodeTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateSpec.
func (in *NodeTemplateSpec) DeepCopy() *NodeTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateStatus) DeepCopyInto(out *NodeTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateStatus.
func (in *NodeTemplateStatus) DeepCopy() *NodeTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaInitParameters) DeepCopyInto(out *OktaInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaInitParameters.
func (in *OktaInitParameters) DeepCopy() *OktaInitParameters {
	if in == nil {
		return nil
	}
	out := new(OktaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaObservation) DeepCopyInto(out *OktaObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaObservation.
func (in *OktaObservation) DeepCopy() *OktaObservation {
	if in == nil {
		return nil
	}
	out := new(OktaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaParameters) DeepCopyInto(out *OktaParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaParameters.
func (in *OktaParameters) DeepCopy() *OktaParameters {
	if in == nil {
		return nil
	}
	out := new(OktaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembers) DeepCopyInto(out *OrganizationMembers) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembers.
func (in *OrganizationMembers) DeepCopy() *OrganizationMembers {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationMembers) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersInitParameters) DeepCopyInto(out *OrganizationMembersInitParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersInitParameters.
func (in *OrganizationMembersInitParameters) DeepCopy() *OrganizationMembersInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersList) DeepCopyInto(out *OrganizationMembersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationMembers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersList.
func (in *OrganizationMembersList) DeepCopy() *OrganizationMembersList {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationMembersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersObservation) DeepCopyInto(out *OrganizationMembersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersObservation.
func (in *OrganizationMembersObservation) DeepCopy() *OrganizationMembersObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersParameters) DeepCopyInto(out *OrganizationMembersParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersParameters.
func (in *OrganizationMembersParameters) DeepCopy() *OrganizationMembersParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersSpec) DeepCopyInto(out *OrganizationMembersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersSpec.
func (in *OrganizationMembersSpec) DeepCopy() *OrganizationMembersSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersStatus) DeepCopyInto(out *OrganizationMembersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersStatus.
func (in *OrganizationMembersStatus) DeepCopy() *OrganizationMembersStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerInitParameters) DeepCopyInto(out *PodPinnerInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerInitParameters.
func (in *PodPinnerInitParameters) DeepCopy() *PodPinnerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodPinnerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerObservation) DeepCopyInto(out *PodPinnerObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerObservation.
func (in *PodPinnerObservation) DeepCopy() *PodPinnerObservation {
	if in == nil {
		return nil
	}
	out := new(PodPinnerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerParameters) DeepCopyInto(out *PodPinnerParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerParameters.
func (in *PodPinnerParameters) DeepCopy() *PodPinnerParameters {
	if in == nil {
		return nil
	}
	out := new(PodPinnerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorInitParameters) DeepCopyInto(out *PodSelectorInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorInitParameters.
func (in *PodSelectorInitParameters) DeepCopy() *PodSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsInitParameters) DeepCopyInto(out *PodSelectorMatchExpressionsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsInitParameters.
func (in *PodSelectorMatchExpressionsInitParameters) DeepCopy() *PodSelectorMatchExpressionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsObservation) DeepCopyInto(out *PodSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsObservation.
func (in *PodSelectorMatchExpressionsObservation) DeepCopy() *PodSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsParameters) DeepCopyInto(out *PodSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsParameters.
func (in *PodSelectorMatchExpressionsParameters) DeepCopy() *PodSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorObservation) DeepCopyInto(out *PodSelectorObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorObservation.
func (in *PodSelectorObservation) DeepCopy() *PodSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(PodSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorParameters) DeepCopyInto(out *PodSelectorParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorParameters.
func (in *PodSelectorParameters) DeepCopy() *PodSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPInitParameters) DeepCopyInto(out *PublicIPInitParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPInitParameters.
func (in *PublicIPInitParameters) DeepCopy() *PublicIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPObservation) DeepCopyInto(out *PublicIPObservation) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPObservation.
func (in *PublicIPObservation) DeepCopy() *PublicIPObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPParameters) DeepCopyInto(out *PublicIPParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPParameters.
func (in *PublicIPParameters) DeepCopy() *PublicIPParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJob) DeepCopyInto(out *RebalancingJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJob.
func (in *RebalancingJob) DeepCopy() *RebalancingJob {
	if in == nil {
		return nil
	}
	out := new(RebalancingJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobInitParameters) DeepCopyInto(out *RebalancingJobInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleIDRef != nil {
		in, out := &in.RebalancingScheduleIDRef, &out.RebalancingScheduleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RebalancingScheduleIDSelector != nil {
		in, out := &in.RebalancingScheduleIDSelector, &out.RebalancingScheduleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobInitParameters.
func (in *RebalancingJobInitParameters) DeepCopy() *RebalancingJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobList) DeepCopyInto(out *RebalancingJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RebalancingJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobList.
func (in *RebalancingJobList) DeepCopy() *RebalancingJobList {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobObservation) DeepCopyInto(out *RebalancingJobObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobObservation.
func (in *RebalancingJobObservation) DeepCopy() *RebalancingJobObservation {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobParameters) DeepCopyInto(out *RebalancingJobParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleIDRef != nil {
		in, out := &in.RebalancingScheduleIDRef, &out.RebalancingScheduleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RebalancingScheduleIDSelector != nil {
		in, out := &in.RebalancingScheduleIDSelector, &out.RebalancingScheduleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobParameters.
func (in *RebalancingJobParameters) DeepCopy() *RebalancingJobParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobSpec) DeepCopyInto(out *RebalancingJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobSpec.
func (in *RebalancingJobSpec) DeepCopy() *RebalancingJobSpec {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobStatus) DeepCopyInto(out *RebalancingJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobStatus.
func (in *RebalancingJobStatus) DeepCopy() *RebalancingJobStatus {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingSchedule) DeepCopyInto(out *RebalancingSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingSchedule.
func (in *RebalancingSchedule) DeepCopy() *RebalancingSchedule {
	if in == nil {
		return nil
	}
	out := new(RebalancingSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleInitParameters) DeepCopyInto(out *RebalancingScheduleInitParameters) {
	*out = *in
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleInitParameters.
func (in *RebalancingScheduleInitParameters) DeepCopy() *RebalancingScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleList) DeepCopyInto(out *RebalancingScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RebalancingSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleList.
func (in *RebalancingScheduleList) DeepCopy() *RebalancingScheduleList {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleObservation) DeepCopyInto(out *RebalancingScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleObservation.
func (in *RebalancingScheduleObservation) DeepCopy() *RebalancingScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleParameters) DeepCopyInto(out *RebalancingScheduleParameters) {
	*out = *in
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleParameters.
func (in *RebalancingScheduleParameters) DeepCopy() *RebalancingScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleSpec) DeepCopyInto(out *RebalancingScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleSpec.
func (in *RebalancingScheduleSpec) DeepCopy() *RebalancingScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleStatus) DeepCopyInto(out *RebalancingScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleStatus.
func (in *RebalancingScheduleStatus) DeepCopy() *RebalancingScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Reservations) DeepCopyInto(out *Reservations) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Reservations.
func (in *Reservations) DeepCopy() *Reservations {
	if in == nil {
		return nil
	}
	out := new(Reservations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Reservations) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsInitParameters) DeepCopyInto(out *ReservationsInitParameters) {
	*out = *in
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsInitParameters.
func (in *ReservationsInitParameters) DeepCopy() *ReservationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsList) DeepCopyInto(out *ReservationsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Reservations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsList.
func (in *ReservationsList) DeepCopy() *ReservationsList {
	if in == nil {
		return nil
	}
	out := new(ReservationsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsObservation) DeepCopyInto(out *ReservationsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Reservations != nil {
		in, out := &in.Reservations, &out.Reservations
		*out = make([]ReservationsReservationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsObservation.
func (in *ReservationsObservation) DeepCopy() *ReservationsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsParameters) DeepCopyInto(out *ReservationsParameters) {
	*out = *in
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsParameters.
func (in *ReservationsParameters) DeepCopy() *ReservationsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsInitParameters) DeepCopyInto(out *ReservationsReservationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsInitParameters.
func (in *ReservationsReservationsInitParameters) DeepCopy() *ReservationsReservationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsObservation) DeepCopyInto(out *ReservationsReservationsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Price != nil {
		in, out := &in.Price, &out.Price
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsObservation.
func (in *ReservationsReservationsObservation) DeepCopy() *ReservationsReservationsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsParameters) DeepCopyInto(out *ReservationsReservationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsParameters.
func (in *ReservationsReservationsParameters) DeepCopy() *ReservationsReservationsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsSpec) DeepCopyInto(out *ReservationsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsSpec.
func (in *ReservationsSpec) DeepCopy() *ReservationsSpec {
	if in == nil {
		return nil
	}
	out := new(ReservationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsStatus) DeepCopyInto(out *ReservationsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsStatus.
func (in *ReservationsStatus) DeepCopy() *ReservationsStatus {
	if in == nil {
		return nil
	}
	out := new(ReservationsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsInitParameters) DeepCopyInto(out *ResourceLimitsInitParameters) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsInitParameters.
func (in *ResourceLimitsInitParameters) DeepCopy() *ResourceLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsObservation) DeepCopyInto(out *ResourceLimitsObservation) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsObservation.
func (in *ResourceLimitsObservation) DeepCopy() *ResourceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsParameters) DeepCopyInto(out *ResourceLimitsParameters) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsParameters.
func (in *ResourceLimitsParameters) DeepCopy() *ResourceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnection) DeepCopyInto(out *SSOConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnection.
func (in *SSOConnection) DeepCopy() *SSOConnection {
	if in == nil {
		return nil
	}
	out := new(SSOConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSOConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionInitParameters) DeepCopyInto(out *SSOConnectionInitParameters) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionInitParameters.
func (in *SSOConnectionInitParameters) DeepCopy() *SSOConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionList) DeepCopyInto(out *SSOConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSOConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionList.
func (in *SSOConnectionList) DeepCopy() *SSOConnectionList {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSOConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionObservation) DeepCopyInto(out *SSOConnectionObservation) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionObservation.
func (in *SSOConnectionObservation) DeepCopy() *SSOConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionParameters) DeepCopyInto(out *SSOConnectionParameters) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionParameters.
func (in *SSOConnectionParameters) DeepCopy() *SSOConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionSpec) DeepCopyInto(out *SSOConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionSpec.
func (in *SSOConnectionSpec) DeepCopy() *SSOConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionStatus) DeepCopyInto(out *SSOConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionStatus.
func (in *SSOConnectionStatus) DeepCopy() *SSOConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeInitParameters) DeepCopyInto(out *SecondaryIPRangeInitParameters) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeInitParameters.
func (in *SecondaryIPRangeInitParameters) DeepCopy() *SecondaryIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeObservation) DeepCopyInto(out *SecondaryIPRangeObservation) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeObservation.
func (in *SecondaryIPRangeObservation) DeepCopy() *SecondaryIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeParameters) DeepCopyInto(out *SecondaryIPRangeParameters) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeParameters.
func (in *SecondaryIPRangeParameters) DeepCopy() *SecondaryIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsInitParameters) DeepCopyInto(out *SpotBackupsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsInitParameters.
func (in *SpotBackupsInitParameters) DeepCopy() *SpotBackupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsObservation) DeepCopyInto(out *SpotBackupsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsObservation.
func (in *SpotBackupsObservation) DeepCopy() *SpotBackupsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsParameters) DeepCopyInto(out *SpotBackupsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsParameters.
func (in *SpotBackupsParameters) DeepCopy() *SpotBackupsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesInitParameters) DeepCopyInto(out *SpotInstancesInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesInitParameters.
func (in *SpotInstancesInitParameters) DeepCopy() *SpotInstancesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesObservation) DeepCopyInto(out *SpotInstancesObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesObservation.
func (in *SpotInstancesObservation) DeepCopy() *SpotInstancesObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesParameters) DeepCopyInto(out *SpotInstancesParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesParameters.
func (in *SpotInstancesParameters) DeepCopy() *SpotInstancesParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsInitParameters) DeepCopyInto(out *SpotInterruptionPredictionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsInitParameters.
func (in *SpotInterruptionPredictionsInitParameters) DeepCopy() *SpotInterruptionPredictionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsObservation) DeepCopyInto(out *SpotInterruptionPredictionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsObservation.
func (in *SpotInterruptionPredictionsObservation) DeepCopy() *SpotInterruptionPredictionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsParameters) DeepCopyInto(out *SpotInterruptionPredictionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsParameters.
func (in *SpotInterruptionPredictionsParameters) DeepCopy() *SpotInterruptionPredictionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsInitParameters) DeepCopyInto(out *TargetBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsInitParameters.
func (in *TargetBackendPoolsInitParameters) DeepCopy() *TargetBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsObservation) DeepCopyInto(out *TargetBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsObservation.
func (in *TargetBackendPoolsObservation) DeepCopy() *TargetBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsParameters) DeepCopyInto(out *TargetBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsParameters.
func (in *TargetBackendPoolsParameters) DeepCopy() *TargetBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInitParameters) DeepCopyInto(out *TargetGroupInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInitParameters.
func (in *TargetGroupInitParameters) DeepCopy() *TargetGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupObservation) DeepCopyInto(out *TargetGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupObservation.
func (in *TargetGroupObservation) DeepCopy() *TargetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupParameters) DeepCopyInto(out *TargetGroupParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupParameters.
func (in *TargetGroupParameters) DeepCopy() *TargetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsInitParameters) DeepCopyInto(out *TriggerConditionsInitParameters) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsInitParameters.
func (in *TriggerConditionsInitParameters) DeepCopy() *TriggerConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsObservation) DeepCopyInto(out *TriggerConditionsObservation) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsObservation.
func (in *TriggerConditionsObservation) DeepCopy() *TriggerConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsParameters) DeepCopyInto(out *TriggerConditionsParameters) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsParameters.
func (in *TriggerConditionsParameters) DeepCopy() *TriggerConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsInitParameters) DeepCopyInto(out *UnmanagedInstanceGroupsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsInitParameters.
func (in *UnmanagedInstanceGroupsInitParameters) DeepCopy() *UnmanagedInstanceGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsObservation) DeepCopyInto(out *UnmanagedInstanceGroupsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsObservation.
func (in *UnmanagedInstanceGroupsObservation) DeepCopy() *UnmanagedInstanceGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsParameters) DeepCopyInto(out *UnmanagedInstanceGroupsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsParameters.
func (in *UnmanagedInstanceGroupsParameters) DeepCopy() *UnmanagedInstanceGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsInitParameters) DeepCopyInto(out *UnschedulablePodsInitParameters) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsInitParameters.
func (in *UnschedulablePodsInitParameters) DeepCopy() *UnschedulablePodsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsObservation) DeepCopyInto(out *UnschedulablePodsObservation) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsObservation.
func (in *UnschedulablePodsObservation) DeepCopy() *UnschedulablePodsObservation {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsParameters) DeepCopyInto(out *UnschedulablePodsParameters) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsParameters.
func (in *UnschedulablePodsParameters) DeepCopy() *UnschedulablePodsParameters {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsParameters)
	in.DeepCopyInto(out)
	return out
}
