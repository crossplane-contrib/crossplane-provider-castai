//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadInitParameters) DeepCopyInto(out *AadInitParameters) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadInitParameters.
func (in *AadInitParameters) DeepCopy() *AadInitParameters {
	if in == nil {
		return nil
	}
	out := new(AadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadObservation) DeepCopyInto(out *AadObservation) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadObservation.
func (in *AadObservation) DeepCopy() *AadObservation {
	if in == nil {
		return nil
	}
	out := new(AadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AadParameters) DeepCopyInto(out *AadParameters) {
	*out = *in
	if in.AdDomain != nil {
		in, out := &in.AdDomain, &out.AdDomain
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AadParameters.
func (in *AadParameters) DeepCopy() *AadParameters {
	if in == nil {
		return nil
	}
	out := new(AadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityInitParameters) DeepCopyInto(out *AffinityInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityInitParameters.
func (in *AffinityInitParameters) DeepCopy() *AffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityObservation) DeepCopyInto(out *AffinityObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityObservation.
func (in *AffinityObservation) DeepCopy() *AffinityObservation {
	if in == nil {
		return nil
	}
	out := new(AffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityParameters) DeepCopyInto(out *AffinityParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityParameters.
func (in *AffinityParameters) DeepCopy() *AffinityParameters {
	if in == nil {
		return nil
	}
	out := new(AffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigInitParameters) DeepCopyInto(out *AggressiveModeConfigInitParameters) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigInitParameters.
func (in *AggressiveModeConfigInitParameters) DeepCopy() *AggressiveModeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigObservation) DeepCopyInto(out *AggressiveModeConfigObservation) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigObservation.
func (in *AggressiveModeConfigObservation) DeepCopy() *AggressiveModeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggressiveModeConfigParameters) DeepCopyInto(out *AggressiveModeConfigParameters) {
	*out = *in
	if in.IgnoreLocalPersistentVolumes != nil {
		in, out := &in.IgnoreLocalPersistentVolumes, &out.IgnoreLocalPersistentVolumes
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemJobPods != nil {
		in, out := &in.IgnoreProblemJobPods, &out.IgnoreProblemJobPods
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemPodsWithoutController != nil {
		in, out := &in.IgnoreProblemPodsWithoutController, &out.IgnoreProblemPodsWithoutController
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreProblemRemovalDisabledPods != nil {
		in, out := &in.IgnoreProblemRemovalDisabledPods, &out.IgnoreProblemRemovalDisabledPods
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggressiveModeConfigParameters.
func (in *AggressiveModeConfigParameters) DeepCopy() *AggressiveModeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AggressiveModeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksCluster) DeepCopyInto(out *AksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksCluster.
func (in *AksCluster) DeepCopy() *AksCluster {
	if in == nil {
		return nil
	}
	out := new(AksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterInitParameters) DeepCopyInto(out *AksClusterInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterInitParameters.
func (in *AksClusterInitParameters) DeepCopy() *AksClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterList) DeepCopyInto(out *AksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterList.
func (in *AksClusterList) DeepCopy() *AksClusterList {
	if in == nil {
		return nil
	}
	out := new(AksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterObservation) DeepCopyInto(out *AksClusterObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterObservation.
func (in *AksClusterObservation) DeepCopy() *AksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterParameters) DeepCopyInto(out *AksClusterParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.HTTPProxyConfig != nil {
		in, out := &in.HTTPProxyConfig, &out.HTTPProxyConfig
		*out = make([]HTTPProxyConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterParameters.
func (in *AksClusterParameters) DeepCopy() *AksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterSpec) DeepCopyInto(out *AksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterSpec.
func (in *AksClusterSpec) DeepCopy() *AksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksClusterStatus) DeepCopyInto(out *AksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksClusterStatus.
func (in *AksClusterStatus) DeepCopy() *AksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksInitParameters) DeepCopyInto(out *AksInitParameters) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksInitParameters.
func (in *AksInitParameters) DeepCopy() *AksInitParameters {
	if in == nil {
		return nil
	}
	out := new(AksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksObservation) DeepCopyInto(out *AksObservation) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksObservation.
func (in *AksObservation) DeepCopy() *AksObservation {
	if in == nil {
		return nil
	}
	out := new(AksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksParameters) DeepCopyInto(out *AksParameters) {
	*out = *in
	if in.AksImageFamily != nil {
		in, out := &in.AksImageFamily, &out.AksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ApplicationSecurityGroups != nil {
		in, out := &in.ApplicationSecurityGroups, &out.ApplicationSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EphemeralOsDisk != nil {
		in, out := &in.EphemeralOsDisk, &out.EphemeralOsDisk
		*out = make([]EphemeralOsDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]LoadbalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkSecurityGroup != nil {
		in, out := &in.NetworkSecurityGroup, &out.NetworkSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetID != nil {
		in, out := &in.PodSubnetID, &out.PodSubnetID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = make([]PublicIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksParameters.
func (in *AksParameters) DeepCopy() *AksParameters {
	if in == nil {
		return nil
	}
	out := new(AksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroup) DeepCopyInto(out *AllocationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroup.
func (in *AllocationGroup) DeepCopy() *AllocationGroup {
	if in == nil {
		return nil
	}
	out := new(AllocationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AllocationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupInitParameters) DeepCopyInto(out *AllocationGroupInitParameters) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LabelsOperator != nil {
		in, out := &in.LabelsOperator, &out.LabelsOperator
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupInitParameters.
func (in *AllocationGroupInitParameters) DeepCopy() *AllocationGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupList) DeepCopyInto(out *AllocationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AllocationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupList.
func (in *AllocationGroupList) DeepCopy() *AllocationGroupList {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AllocationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupObservation) DeepCopyInto(out *AllocationGroupObservation) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LabelsOperator != nil {
		in, out := &in.LabelsOperator, &out.LabelsOperator
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupObservation.
func (in *AllocationGroupObservation) DeepCopy() *AllocationGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupParameters) DeepCopyInto(out *AllocationGroupParameters) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LabelsOperator != nil {
		in, out := &in.LabelsOperator, &out.LabelsOperator
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupParameters.
func (in *AllocationGroupParameters) DeepCopy() *AllocationGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupSpec) DeepCopyInto(out *AllocationGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupSpec.
func (in *AllocationGroupSpec) DeepCopy() *AllocationGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocationGroupStatus) DeepCopyInto(out *AllocationGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocationGroupStatus.
func (in *AllocationGroupStatus) DeepCopy() *AllocationGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AllocationGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AntiAffinityInitParameters) DeepCopyInto(out *AntiAffinityInitParameters) {
	*out = *in
	if in.ConsiderAntiAffinity != nil {
		in, out := &in.ConsiderAntiAffinity, &out.ConsiderAntiAffinity
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AntiAffinityInitParameters.
func (in *AntiAffinityInitParameters) DeepCopy() *AntiAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AntiAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AntiAffinityObservation) DeepCopyInto(out *AntiAffinityObservation) {
	*out = *in
	if in.ConsiderAntiAffinity != nil {
		in, out := &in.ConsiderAntiAffinity, &out.ConsiderAntiAffinity
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AntiAffinityObservation.
func (in *AntiAffinityObservation) DeepCopy() *AntiAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(AntiAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AntiAffinityParameters) DeepCopyInto(out *AntiAffinityParameters) {
	*out = *in
	if in.ConsiderAntiAffinity != nil {
		in, out := &in.ConsiderAntiAffinity, &out.ConsiderAntiAffinity
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AntiAffinityParameters.
func (in *AntiAffinityParameters) DeepCopy() *AntiAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(AntiAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplyThresholdStrategyInitParameters) DeepCopyInto(out *ApplyThresholdStrategyInitParameters) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplyThresholdStrategyInitParameters.
func (in *ApplyThresholdStrategyInitParameters) DeepCopy() *ApplyThresholdStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplyThresholdStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplyThresholdStrategyObservation) DeepCopyInto(out *ApplyThresholdStrategyObservation) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplyThresholdStrategyObservation.
func (in *ApplyThresholdStrategyObservation) DeepCopy() *ApplyThresholdStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(ApplyThresholdStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplyThresholdStrategyParameters) DeepCopyInto(out *ApplyThresholdStrategyParameters) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplyThresholdStrategyParameters.
func (in *ApplyThresholdStrategyParameters) DeepCopy() *ApplyThresholdStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(ApplyThresholdStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentInitParameters) DeepCopyInto(out *AssignmentInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentInitParameters.
func (in *AssignmentInitParameters) DeepCopy() *AssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentObservation) DeepCopyInto(out *AssignmentObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentObservation.
func (in *AssignmentObservation) DeepCopy() *AssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(AssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentParameters) DeepCopyInto(out *AssignmentParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentParameters.
func (in *AssignmentParameters) DeepCopy() *AssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentRulesInitParameters) DeepCopyInto(out *AssignmentRulesInitParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentRulesInitParameters.
func (in *AssignmentRulesInitParameters) DeepCopy() *AssignmentRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentRulesObservation) DeepCopyInto(out *AssignmentRulesObservation) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentRulesObservation.
func (in *AssignmentRulesObservation) DeepCopy() *AssignmentRulesObservation {
	if in == nil {
		return nil
	}
	out := new(AssignmentRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentRulesParameters) DeepCopyInto(out *AssignmentRulesParameters) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentRulesParameters.
func (in *AssignmentRulesParameters) DeepCopy() *AssignmentRulesParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentsInitParameters) DeepCopyInto(out *AssignmentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentsInitParameters.
func (in *AssignmentsInitParameters) DeepCopy() *AssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentsObservation) DeepCopyInto(out *AssignmentsObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentsObservation.
func (in *AssignmentsObservation) DeepCopy() *AssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(AssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignmentsParameters) DeepCopyInto(out *AssignmentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignmentsParameters.
func (in *AssignmentsParameters) DeepCopy() *AssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(AssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorInitParameters) DeepCopyInto(out *AuthorInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorInitParameters.
func (in *AuthorInitParameters) DeepCopy() *AuthorInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorObservation) DeepCopyInto(out *AuthorObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorObservation.
func (in *AuthorObservation) DeepCopy() *AuthorObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorParameters) DeepCopyInto(out *AuthorParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorParameters.
func (in *AuthorParameters) DeepCopy() *AuthorParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScaler) DeepCopyInto(out *AutoScaler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScaler.
func (in *AutoScaler) DeepCopy() *AutoScaler {
	if in == nil {
		return nil
	}
	out := new(AutoScaler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoScaler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerInitParameters) DeepCopyInto(out *AutoScalerInitParameters) {
	*out = *in
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerInitParameters.
func (in *AutoScalerInitParameters) DeepCopy() *AutoScalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerList) DeepCopyInto(out *AutoScalerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoScaler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerList.
func (in *AutoScalerList) DeepCopy() *AutoScalerList {
	if in == nil {
		return nil
	}
	out := new(AutoScalerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoScalerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerObservation) DeepCopyInto(out *AutoScalerObservation) {
	*out = *in
	if in.AutoscalerPolicies != nil {
		in, out := &in.AutoscalerPolicies, &out.AutoscalerPolicies
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerObservation.
func (in *AutoScalerObservation) DeepCopy() *AutoScalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerParameters) DeepCopyInto(out *AutoScalerParameters) {
	*out = *in
	if in.AutoscalerPoliciesJSON != nil {
		in, out := &in.AutoscalerPoliciesJSON, &out.AutoscalerPoliciesJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoscalerSettings != nil {
		in, out := &in.AutoscalerSettings, &out.AutoscalerSettings
		*out = make([]AutoscalerSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerParameters.
func (in *AutoScalerParameters) DeepCopy() *AutoScalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerSpec) DeepCopyInto(out *AutoScalerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerSpec.
func (in *AutoScalerSpec) DeepCopy() *AutoScalerSpec {
	if in == nil {
		return nil
	}
	out := new(AutoScalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalerStatus) DeepCopyInto(out *AutoScalerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalerStatus.
func (in *AutoScalerStatus) DeepCopy() *AutoScalerStatus {
	if in == nil {
		return nil
	}
	out := new(AutoScalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsInitParameters) DeepCopyInto(out *AutoscalerSettingsInitParameters) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsInitParameters.
func (in *AutoscalerSettingsInitParameters) DeepCopy() *AutoscalerSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsObservation) DeepCopyInto(out *AutoscalerSettingsObservation) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsObservation.
func (in *AutoscalerSettingsObservation) DeepCopy() *AutoscalerSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerSettingsParameters) DeepCopyInto(out *AutoscalerSettingsParameters) {
	*out = *in
	if in.ClusterLimits != nil {
		in, out := &in.ClusterLimits, &out.ClusterLimits
		*out = make([]ClusterLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsScopedMode != nil {
		in, out := &in.IsScopedMode, &out.IsScopedMode
		*out = new(bool)
		**out = **in
	}
	if in.NodeDownscaler != nil {
		in, out := &in.NodeDownscaler, &out.NodeDownscaler
		*out = make([]NodeDownscalerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeTemplatesPartialMatchingEnabled != nil {
		in, out := &in.NodeTemplatesPartialMatchingEnabled, &out.NodeTemplatesPartialMatchingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstances != nil {
		in, out := &in.SpotInstances, &out.SpotInstances
		*out = make([]SpotInstancesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnschedulablePods != nil {
		in, out := &in.UnschedulablePods, &out.UnschedulablePods
		*out = make([]UnschedulablePodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerSettingsParameters.
func (in *AutoscalerSettingsParameters) DeepCopy() *AutoscalerSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureReservationsInitParameters) DeepCopyInto(out *AzureReservationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureReservationsInitParameters.
func (in *AzureReservationsInitParameters) DeepCopy() *AzureReservationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureReservationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureReservationsObservation) DeepCopyInto(out *AzureReservationsObservation) {
	*out = *in
	if in.AllowedUsage != nil {
		in, out := &in.AllowedUsage, &out.AllowedUsage
		*out = new(float64)
		**out = **in
	}
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]AssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EndTimestamp != nil {
		in, out := &in.EndTimestamp, &out.EndTimestamp
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Prioritization != nil {
		in, out := &in.Prioritization, &out.Prioritization
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationID != nil {
		in, out := &in.ReservationID, &out.ReservationID
		*out = new(string)
		**out = **in
	}
	if in.ReservationStatus != nil {
		in, out := &in.ReservationStatus, &out.ReservationStatus
		*out = new(string)
		**out = **in
	}
	if in.ScalingStrategy != nil {
		in, out := &in.ScalingStrategy, &out.ScalingStrategy
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ScopeResourceGroup != nil {
		in, out := &in.ScopeResourceGroup, &out.ScopeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ScopeSubscription != nil {
		in, out := &in.ScopeSubscription, &out.ScopeSubscription
		*out = new(string)
		**out = **in
	}
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureReservationsObservation.
func (in *AzureReservationsObservation) DeepCopy() *AzureReservationsObservation {
	if in == nil {
		return nil
	}
	out := new(AzureReservationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureReservationsParameters) DeepCopyInto(out *AzureReservationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureReservationsParameters.
func (in *AzureReservationsParameters) DeepCopy() *AzureReservationsParameters {
	if in == nil {
		return nil
	}
	out := new(AzureReservationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUInitParameters) DeepCopyInto(out *CPUInitParameters) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUInitParameters.
func (in *CPUInitParameters) DeepCopy() *CPUInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUObservation) DeepCopyInto(out *CPUObservation) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUObservation.
func (in *CPUObservation) DeepCopy() *CPUObservation {
	if in == nil {
		return nil
	}
	out := new(CPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUParameters) DeepCopyInto(out *CPUParameters) {
	*out = *in
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MinCores != nil {
		in, out := &in.MinCores, &out.MinCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUParameters.
func (in *CPUParameters) DeepCopy() *CPUParameters {
	if in == nil {
		return nil
	}
	out := new(CPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAssignmentsInitParameters) DeepCopyInto(out *ClusterAssignmentsInitParameters) {
	*out = *in
	if in.Assignment != nil {
		in, out := &in.Assignment, &out.Assignment
		*out = make([]AssignmentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAssignmentsInitParameters.
func (in *ClusterAssignmentsInitParameters) DeepCopy() *ClusterAssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAssignmentsObservation) DeepCopyInto(out *ClusterAssignmentsObservation) {
	*out = *in
	if in.Assignment != nil {
		in, out := &in.Assignment, &out.Assignment
		*out = make([]AssignmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAssignmentsObservation.
func (in *ClusterAssignmentsObservation) DeepCopy() *ClusterAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAssignmentsParameters) DeepCopyInto(out *ClusterAssignmentsParameters) {
	*out = *in
	if in.Assignment != nil {
		in, out := &in.Assignment, &out.Assignment
		*out = make([]AssignmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAssignmentsParameters.
func (in *ClusterAssignmentsParameters) DeepCopy() *ClusterAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsInitParameters) DeepCopyInto(out *ClusterLimitsInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsInitParameters.
func (in *ClusterLimitsInitParameters) DeepCopy() *ClusterLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsObservation) DeepCopyInto(out *ClusterLimitsObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsObservation.
func (in *ClusterLimitsObservation) DeepCopy() *ClusterLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterLimitsParameters) DeepCopyInto(out *ClusterLimitsParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterLimitsParameters.
func (in *ClusterLimitsParameters) DeepCopy() *ClusterLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsAssignmentsInitParameters) DeepCopyInto(out *CommitmentConfigsAssignmentsInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsAssignmentsInitParameters.
func (in *CommitmentConfigsAssignmentsInitParameters) DeepCopy() *CommitmentConfigsAssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsAssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsAssignmentsObservation) DeepCopyInto(out *CommitmentConfigsAssignmentsObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsAssignmentsObservation.
func (in *CommitmentConfigsAssignmentsObservation) DeepCopy() *CommitmentConfigsAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsAssignmentsParameters) DeepCopyInto(out *CommitmentConfigsAssignmentsParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsAssignmentsParameters.
func (in *CommitmentConfigsAssignmentsParameters) DeepCopy() *CommitmentConfigsAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsInitParameters) DeepCopyInto(out *CommitmentConfigsInitParameters) {
	*out = *in
	if in.AllowedUsage != nil {
		in, out := &in.AllowedUsage, &out.AllowedUsage
		*out = new(float64)
		**out = **in
	}
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]CommitmentConfigsAssignmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = make([]MatcherInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prioritization != nil {
		in, out := &in.Prioritization, &out.Prioritization
		*out = new(bool)
		**out = **in
	}
	if in.ScalingStrategy != nil {
		in, out := &in.ScalingStrategy, &out.ScalingStrategy
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsInitParameters.
func (in *CommitmentConfigsInitParameters) DeepCopy() *CommitmentConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsObservation) DeepCopyInto(out *CommitmentConfigsObservation) {
	*out = *in
	if in.AllowedUsage != nil {
		in, out := &in.AllowedUsage, &out.AllowedUsage
		*out = new(float64)
		**out = **in
	}
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]CommitmentConfigsAssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = make([]MatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prioritization != nil {
		in, out := &in.Prioritization, &out.Prioritization
		*out = new(bool)
		**out = **in
	}
	if in.ScalingStrategy != nil {
		in, out := &in.ScalingStrategy, &out.ScalingStrategy
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsObservation.
func (in *CommitmentConfigsObservation) DeepCopy() *CommitmentConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentConfigsParameters) DeepCopyInto(out *CommitmentConfigsParameters) {
	*out = *in
	if in.AllowedUsage != nil {
		in, out := &in.AllowedUsage, &out.AllowedUsage
		*out = new(float64)
		**out = **in
	}
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]CommitmentConfigsAssignmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = make([]MatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prioritization != nil {
		in, out := &in.Prioritization, &out.Prioritization
		*out = new(bool)
		**out = **in
	}
	if in.ScalingStrategy != nil {
		in, out := &in.ScalingStrategy, &out.ScalingStrategy
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentConfigsParameters.
func (in *CommitmentConfigsParameters) DeepCopy() *CommitmentConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Commitments) DeepCopyInto(out *Commitments) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Commitments.
func (in *Commitments) DeepCopy() *Commitments {
	if in == nil {
		return nil
	}
	out := new(Commitments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Commitments) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsInitParameters) DeepCopyInto(out *CommitmentsInitParameters) {
	*out = *in
	if in.AzureReservationsCsv != nil {
		in, out := &in.AzureReservationsCsv, &out.AzureReservationsCsv
		*out = new(string)
		**out = **in
	}
	if in.CommitmentConfigs != nil {
		in, out := &in.CommitmentConfigs, &out.CommitmentConfigs
		*out = make([]CommitmentConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPCudsJSON != nil {
		in, out := &in.GCPCudsJSON, &out.GCPCudsJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsInitParameters.
func (in *CommitmentsInitParameters) DeepCopy() *CommitmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsList) DeepCopyInto(out *CommitmentsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Commitments, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsList.
func (in *CommitmentsList) DeepCopy() *CommitmentsList {
	if in == nil {
		return nil
	}
	out := new(CommitmentsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommitmentsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsObservation) DeepCopyInto(out *CommitmentsObservation) {
	*out = *in
	if in.AzureReservations != nil {
		in, out := &in.AzureReservations, &out.AzureReservations
		*out = make([]AzureReservationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureReservationsCsv != nil {
		in, out := &in.AzureReservationsCsv, &out.AzureReservationsCsv
		*out = new(string)
		**out = **in
	}
	if in.CommitmentConfigs != nil {
		in, out := &in.CommitmentConfigs, &out.CommitmentConfigs
		*out = make([]CommitmentConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPCuds != nil {
		in, out := &in.GCPCuds, &out.GCPCuds
		*out = make([]GCPCudsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPCudsJSON != nil {
		in, out := &in.GCPCudsJSON, &out.GCPCudsJSON
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsObservation.
func (in *CommitmentsObservation) DeepCopy() *CommitmentsObservation {
	if in == nil {
		return nil
	}
	out := new(CommitmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsParameters) DeepCopyInto(out *CommitmentsParameters) {
	*out = *in
	if in.AzureReservationsCsv != nil {
		in, out := &in.AzureReservationsCsv, &out.AzureReservationsCsv
		*out = new(string)
		**out = **in
	}
	if in.CommitmentConfigs != nil {
		in, out := &in.CommitmentConfigs, &out.CommitmentConfigs
		*out = make([]CommitmentConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GCPCudsJSON != nil {
		in, out := &in.GCPCudsJSON, &out.GCPCudsJSON
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsParameters.
func (in *CommitmentsParameters) DeepCopy() *CommitmentsParameters {
	if in == nil {
		return nil
	}
	out := new(CommitmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsSpec) DeepCopyInto(out *CommitmentsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsSpec.
func (in *CommitmentsSpec) DeepCopy() *CommitmentsSpec {
	if in == nil {
		return nil
	}
	out := new(CommitmentsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommitmentsStatus) DeepCopyInto(out *CommitmentsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommitmentsStatus.
func (in *CommitmentsStatus) DeepCopy() *CommitmentsStatus {
	if in == nil {
		return nil
	}
	out := new(CommitmentsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidenceInitParameters) DeepCopyInto(out *ConfidenceInitParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidenceInitParameters.
func (in *ConfidenceInitParameters) DeepCopy() *ConfidenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfidenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidenceObservation) DeepCopyInto(out *ConfidenceObservation) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidenceObservation.
func (in *ConfidenceObservation) DeepCopy() *ConfidenceObservation {
	if in == nil {
		return nil
	}
	out := new(ConfidenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidenceParameters) DeepCopyInto(out *ConfidenceParameters) {
	*out = *in
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidenceParameters.
func (in *ConfidenceParameters) DeepCopy() *ConfidenceParameters {
	if in == nil {
		return nil
	}
	out := new(ConfidenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsInitParameters) DeepCopyInto(out *ConstraintsInitParameters) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.SpotReliabilityEnabled != nil {
		in, out := &in.SpotReliabilityEnabled, &out.SpotReliabilityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotReliabilityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotReliabilityPriceIncreaseLimitPercent, &out.SpotReliabilityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsInitParameters.
func (in *ConstraintsInitParameters) DeepCopy() *ConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsObservation) DeepCopyInto(out *ConstraintsObservation) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.SpotReliabilityEnabled != nil {
		in, out := &in.SpotReliabilityEnabled, &out.SpotReliabilityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotReliabilityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotReliabilityPriceIncreaseLimitPercent, &out.SpotReliabilityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsObservation.
func (in *ConstraintsObservation) DeepCopy() *ConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(ConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstraintsParameters) DeepCopyInto(out *ConstraintsParameters) {
	*out = *in
	if in.ArchitecturePriority != nil {
		in, out := &in.ArchitecturePriority, &out.ArchitecturePriority
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BurstableInstances != nil {
		in, out := &in.BurstableInstances, &out.BurstableInstances
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ComputeOptimized != nil {
		in, out := &in.ComputeOptimized, &out.ComputeOptimized
		*out = new(bool)
		**out = **in
	}
	if in.ComputeOptimizedState != nil {
		in, out := &in.ComputeOptimizedState, &out.ComputeOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.CustomPriority != nil {
		in, out := &in.CustomPriority, &out.CustomPriority
		*out = make([]CustomPriorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerSpecific != nil {
		in, out := &in.CustomerSpecific, &out.CustomerSpecific
		*out = new(string)
		**out = **in
	}
	if in.DedicatedNodeAffinity != nil {
		in, out := &in.DedicatedNodeAffinity, &out.DedicatedNodeAffinity
		*out = make([]DedicatedNodeAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableSpotDiversity != nil {
		in, out := &in.EnableSpotDiversity, &out.EnableSpotDiversity
		*out = new(bool)
		**out = **in
	}
	if in.FallbackRestoreRateSeconds != nil {
		in, out := &in.FallbackRestoreRateSeconds, &out.FallbackRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]GpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]InstanceFamiliesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsGpuOnly != nil {
		in, out := &in.IsGpuOnly, &out.IsGpuOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(float64)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimitPercent, &out.SpotDiversityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictionsEnabled != nil {
		in, out := &in.SpotInterruptionPredictionsEnabled, &out.SpotInterruptionPredictionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
	if in.SpotReliabilityEnabled != nil {
		in, out := &in.SpotReliabilityEnabled, &out.SpotReliabilityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotReliabilityPriceIncreaseLimitPercent != nil {
		in, out := &in.SpotReliabilityPriceIncreaseLimitPercent, &out.SpotReliabilityPriceIncreaseLimitPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageOptimized != nil {
		in, out := &in.StorageOptimized, &out.StorageOptimized
		*out = new(bool)
		**out = **in
	}
	if in.StorageOptimizedState != nil {
		in, out := &in.StorageOptimizedState, &out.StorageOptimizedState
		*out = new(string)
		**out = **in
	}
	if in.UseSpotFallbacks != nil {
		in, out := &in.UseSpotFallbacks, &out.UseSpotFallbacks
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstraintsParameters.
func (in *ConstraintsParameters) DeepCopy() *ConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(ConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityInitParameters) DeepCopyInto(out *CustomPriorityInitParameters) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityInitParameters.
func (in *CustomPriorityInitParameters) DeepCopy() *CustomPriorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityObservation) DeepCopyInto(out *CustomPriorityObservation) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityObservation.
func (in *CustomPriorityObservation) DeepCopy() *CustomPriorityObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPriorityParameters) DeepCopyInto(out *CustomPriorityParameters) {
	*out = *in
	if in.InstanceFamilies != nil {
		in, out := &in.InstanceFamilies, &out.InstanceFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(bool)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPriorityParameters.
func (in *CustomPriorityParameters) DeepCopy() *CustomPriorityParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPriorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsInitParameters) DeepCopyInto(out *CustomTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsInitParameters.
func (in *CustomTaintsInitParameters) DeepCopy() *CustomTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsObservation) DeepCopyInto(out *CustomTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsObservation.
func (in *CustomTaintsObservation) DeepCopy() *CustomTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTaintsParameters) DeepCopyInto(out *CustomTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTaintsParameters.
func (in *CustomTaintsParameters) DeepCopy() *CustomTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityAffinityInitParameters) DeepCopyInto(out *DedicatedNodeAffinityAffinityInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityAffinityInitParameters.
func (in *DedicatedNodeAffinityAffinityInitParameters) DeepCopy() *DedicatedNodeAffinityAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityAffinityObservation) DeepCopyInto(out *DedicatedNodeAffinityAffinityObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityAffinityObservation.
func (in *DedicatedNodeAffinityAffinityObservation) DeepCopy() *DedicatedNodeAffinityAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityAffinityParameters) DeepCopyInto(out *DedicatedNodeAffinityAffinityParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityAffinityParameters.
func (in *DedicatedNodeAffinityAffinityParameters) DeepCopy() *DedicatedNodeAffinityAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityInitParameters) DeepCopyInto(out *DedicatedNodeAffinityInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]DedicatedNodeAffinityAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityInitParameters.
func (in *DedicatedNodeAffinityInitParameters) DeepCopy() *DedicatedNodeAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityObservation) DeepCopyInto(out *DedicatedNodeAffinityObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]DedicatedNodeAffinityAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityObservation.
func (in *DedicatedNodeAffinityObservation) DeepCopy() *DedicatedNodeAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedNodeAffinityParameters) DeepCopyInto(out *DedicatedNodeAffinityParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]DedicatedNodeAffinityAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzName != nil {
		in, out := &in.AzName, &out.AzName
		*out = new(string)
		**out = **in
	}
	if in.InstanceTypes != nil {
		in, out := &in.InstanceTypes, &out.InstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedNodeAffinityParameters.
func (in *DedicatedNodeAffinityParameters) DeepCopy() *DedicatedNodeAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedNodeAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingInitParameters) DeepCopyInto(out *DownscalingInitParameters) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingInitParameters.
func (in *DownscalingInitParameters) DeepCopy() *DownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingObservation) DeepCopyInto(out *DownscalingObservation) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingObservation.
func (in *DownscalingObservation) DeepCopy() *DownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(DownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingParameters) DeepCopyInto(out *DownscalingParameters) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingParameters.
func (in *DownscalingParameters) DeepCopy() *DownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(DownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksCluster) DeepCopyInto(out *EksCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksCluster.
func (in *EksCluster) DeepCopy() *EksCluster {
	if in == nil {
		return nil
	}
	out := new(EksCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterId) DeepCopyInto(out *EksClusterId) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterId.
func (in *EksClusterId) DeepCopy() *EksClusterId {
	if in == nil {
		return nil
	}
	out := new(EksClusterId)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterId) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdInitParameters) DeepCopyInto(out *EksClusterIdInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdInitParameters.
func (in *EksClusterIdInitParameters) DeepCopy() *EksClusterIdInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdList) DeepCopyInto(out *EksClusterIdList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksClusterId, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdList.
func (in *EksClusterIdList) DeepCopy() *EksClusterIdList {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterIdList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdObservation) DeepCopyInto(out *EksClusterIdObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdObservation.
func (in *EksClusterIdObservation) DeepCopy() *EksClusterIdObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdParameters) DeepCopyInto(out *EksClusterIdParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdParameters.
func (in *EksClusterIdParameters) DeepCopy() *EksClusterIdParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdSpec) DeepCopyInto(out *EksClusterIdSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdSpec.
func (in *EksClusterIdSpec) DeepCopy() *EksClusterIdSpec {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterIdStatus) DeepCopyInto(out *EksClusterIdStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterIdStatus.
func (in *EksClusterIdStatus) DeepCopy() *EksClusterIdStatus {
	if in == nil {
		return nil
	}
	out := new(EksClusterIdStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterInitParameters) DeepCopyInto(out *EksClusterInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterInitParameters.
func (in *EksClusterInitParameters) DeepCopy() *EksClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterList) DeepCopyInto(out *EksClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterList.
func (in *EksClusterList) DeepCopy() *EksClusterList {
	if in == nil {
		return nil
	}
	out := new(EksClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterObservation) DeepCopyInto(out *EksClusterObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterObservation.
func (in *EksClusterObservation) DeepCopy() *EksClusterObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterParameters) DeepCopyInto(out *EksClusterParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AssumeRoleArn != nil {
		in, out := &in.AssumeRoleArn, &out.AssumeRoleArn
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterParameters.
func (in *EksClusterParameters) DeepCopy() *EksClusterParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterSpec) DeepCopyInto(out *EksClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterSpec.
func (in *EksClusterSpec) DeepCopy() *EksClusterSpec {
	if in == nil {
		return nil
	}
	out := new(EksClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterStatus) DeepCopyInto(out *EksClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterStatus.
func (in *EksClusterStatus) DeepCopy() *EksClusterStatus {
	if in == nil {
		return nil
	}
	out := new(EksClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksInitParameters) DeepCopyInto(out *EksInitParameters) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreadsPerCPU != nil {
		in, out := &in.ThreadsPerCPU, &out.ThreadsPerCPU
		*out = new(float64)
		**out = **in
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksInitParameters.
func (in *EksInitParameters) DeepCopy() *EksInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksObservation) DeepCopyInto(out *EksObservation) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreadsPerCPU != nil {
		in, out := &in.ThreadsPerCPU, &out.ThreadsPerCPU
		*out = new(float64)
		**out = **in
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksObservation.
func (in *EksObservation) DeepCopy() *EksObservation {
	if in == nil {
		return nil
	}
	out := new(EksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksParameters) DeepCopyInto(out *EksParameters) {
	*out = *in
	if in.DNSClusterIP != nil {
		in, out := &in.DNSClusterIP, &out.DNSClusterIP
		*out = new(string)
		**out = **in
	}
	if in.EksImageFamily != nil {
		in, out := &in.EksImageFamily, &out.EksImageFamily
		*out = new(string)
		**out = **in
	}
	if in.ImdsHopLimit != nil {
		in, out := &in.ImdsHopLimit, &out.ImdsHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.ImdsV1 != nil {
		in, out := &in.ImdsV1, &out.ImdsV1
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IpsPerPrefix != nil {
		in, out := &in.IpsPerPrefix, &out.IpsPerPrefix
		*out = new(float64)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.MaxPodsPerNodeFormula != nil {
		in, out := &in.MaxPodsPerNodeFormula, &out.MaxPodsPerNodeFormula
		*out = new(string)
		**out = **in
	}
	if in.NodeGroupArn != nil {
		in, out := &in.NodeGroupArn, &out.NodeGroupArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]TargetGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreadsPerCPU != nil {
		in, out := &in.ThreadsPerCPU, &out.ThreadsPerCPU
		*out = new(float64)
		**out = **in
	}
	if in.VolumeIops != nil {
		in, out := &in.VolumeIops, &out.VolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeKMSKeyArn != nil {
		in, out := &in.VolumeKMSKeyArn, &out.VolumeKMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.VolumeThroughput != nil {
		in, out := &in.VolumeThroughput, &out.VolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksParameters.
func (in *EksParameters) DeepCopy() *EksParameters {
	if in == nil {
		return nil
	}
	out := new(EksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArn) DeepCopyInto(out *EksUserArn) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArn.
func (in *EksUserArn) DeepCopy() *EksUserArn {
	if in == nil {
		return nil
	}
	out := new(EksUserArn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksUserArn) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnInitParameters) DeepCopyInto(out *EksUserArnInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnInitParameters.
func (in *EksUserArnInitParameters) DeepCopy() *EksUserArnInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksUserArnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnList) DeepCopyInto(out *EksUserArnList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EksUserArn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnList.
func (in *EksUserArnList) DeepCopy() *EksUserArnList {
	if in == nil {
		return nil
	}
	out := new(EksUserArnList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksUserArnList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnObservation) DeepCopyInto(out *EksUserArnObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnObservation.
func (in *EksUserArnObservation) DeepCopy() *EksUserArnObservation {
	if in == nil {
		return nil
	}
	out := new(EksUserArnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnParameters) DeepCopyInto(out *EksUserArnParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnParameters.
func (in *EksUserArnParameters) DeepCopy() *EksUserArnParameters {
	if in == nil {
		return nil
	}
	out := new(EksUserArnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnSpec) DeepCopyInto(out *EksUserArnSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnSpec.
func (in *EksUserArnSpec) DeepCopy() *EksUserArnSpec {
	if in == nil {
		return nil
	}
	out := new(EksUserArnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksUserArnStatus) DeepCopyInto(out *EksUserArnStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksUserArnStatus.
func (in *EksUserArnStatus) DeepCopy() *EksUserArnStatus {
	if in == nil {
		return nil
	}
	out := new(EksUserArnStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesInitParameters) DeepCopyInto(out *EmptyNodesInitParameters) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesInitParameters.
func (in *EmptyNodesInitParameters) DeepCopy() *EmptyNodesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesObservation) DeepCopyInto(out *EmptyNodesObservation) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesObservation.
func (in *EmptyNodesObservation) DeepCopy() *EmptyNodesObservation {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmptyNodesParameters) DeepCopyInto(out *EmptyNodesParameters) {
	*out = *in
	if in.DelaySeconds != nil {
		in, out := &in.DelaySeconds, &out.DelaySeconds
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmptyNodesParameters.
func (in *EmptyNodesParameters) DeepCopy() *EmptyNodesParameters {
	if in == nil {
		return nil
	}
	out := new(EmptyNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskInitParameters) DeepCopyInto(out *EphemeralOsDiskInitParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskInitParameters.
func (in *EphemeralOsDiskInitParameters) DeepCopy() *EphemeralOsDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskObservation) DeepCopyInto(out *EphemeralOsDiskObservation) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskObservation.
func (in *EphemeralOsDiskObservation) DeepCopy() *EphemeralOsDiskObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralOsDiskParameters) DeepCopyInto(out *EphemeralOsDiskParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralOsDiskParameters.
func (in *EphemeralOsDiskParameters) DeepCopy() *EphemeralOsDiskParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralOsDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfig) DeepCopyInto(out *EvictorAdvancedConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfig.
func (in *EvictorAdvancedConfig) DeepCopy() *EvictorAdvancedConfig {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EvictorAdvancedConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigInitParameters.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigObservation) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigObservation) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigObservation.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigObservation) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigParameters) DeepCopyInto(out *EvictorAdvancedConfigEvictorAdvancedConfigParameters) {
	*out = *in
	if in.Aggressive != nil {
		in, out := &in.Aggressive, &out.Aggressive
		*out = new(bool)
		**out = **in
	}
	if in.Disposable != nil {
		in, out := &in.Disposable, &out.Disposable
		*out = new(bool)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make([]NodeSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = make([]PodSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemovalDisabled != nil {
		in, out := &in.RemovalDisabled, &out.RemovalDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigEvictorAdvancedConfigParameters.
func (in *EvictorAdvancedConfigEvictorAdvancedConfigParameters) DeepCopy() *EvictorAdvancedConfigEvictorAdvancedConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigEvictorAdvancedConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigInitParameters) DeepCopyInto(out *EvictorAdvancedConfigInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigInitParameters.
func (in *EvictorAdvancedConfigInitParameters) DeepCopy() *EvictorAdvancedConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigList) DeepCopyInto(out *EvictorAdvancedConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EvictorAdvancedConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigList.
func (in *EvictorAdvancedConfigList) DeepCopy() *EvictorAdvancedConfigList {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EvictorAdvancedConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigObservation) DeepCopyInto(out *EvictorAdvancedConfigObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigObservation.
func (in *EvictorAdvancedConfigObservation) DeepCopy() *EvictorAdvancedConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigParameters) DeepCopyInto(out *EvictorAdvancedConfigParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EvictorAdvancedConfig != nil {
		in, out := &in.EvictorAdvancedConfig, &out.EvictorAdvancedConfig
		*out = make([]EvictorAdvancedConfigEvictorAdvancedConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigParameters.
func (in *EvictorAdvancedConfigParameters) DeepCopy() *EvictorAdvancedConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigSpec) DeepCopyInto(out *EvictorAdvancedConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigSpec.
func (in *EvictorAdvancedConfigSpec) DeepCopy() *EvictorAdvancedConfigSpec {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorAdvancedConfigStatus) DeepCopyInto(out *EvictorAdvancedConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorAdvancedConfigStatus.
func (in *EvictorAdvancedConfigStatus) DeepCopy() *EvictorAdvancedConfigStatus {
	if in == nil {
		return nil
	}
	out := new(EvictorAdvancedConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorInitParameters) DeepCopyInto(out *EvictorInitParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorInitParameters.
func (in *EvictorInitParameters) DeepCopy() *EvictorInitParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorObservation) DeepCopyInto(out *EvictorObservation) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorObservation.
func (in *EvictorObservation) DeepCopy() *EvictorObservation {
	if in == nil {
		return nil
	}
	out := new(EvictorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvictorParameters) DeepCopyInto(out *EvictorParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.CycleInterval != nil {
		in, out := &in.CycleInterval, &out.CycleInterval
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IgnorePodDisruptionBudgets != nil {
		in, out := &in.IgnorePodDisruptionBudgets, &out.IgnorePodDisruptionBudgets
		*out = new(bool)
		**out = **in
	}
	if in.NodeGracePeriodMinutes != nil {
		in, out := &in.NodeGracePeriodMinutes, &out.NodeGracePeriodMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PodEvictionFailureBackOffInterval != nil {
		in, out := &in.PodEvictionFailureBackOffInterval, &out.PodEvictionFailureBackOffInterval
		*out = new(string)
		**out = **in
	}
	if in.ScopedMode != nil {
		in, out := &in.ScopedMode, &out.ScopedMode
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvictorParameters.
func (in *EvictorParameters) DeepCopy() *EvictorParameters {
	if in == nil {
		return nil
	}
	out := new(EvictorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsInitParameters) DeepCopyInto(out *ExecutionConditionsInitParameters) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsInitParameters.
func (in *ExecutionConditionsInitParameters) DeepCopy() *ExecutionConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsObservation) DeepCopyInto(out *ExecutionConditionsObservation) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsObservation.
func (in *ExecutionConditionsObservation) DeepCopy() *ExecutionConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionConditionsParameters) DeepCopyInto(out *ExecutionConditionsParameters) {
	*out = *in
	if in.AchievedSavingsPercentage != nil {
		in, out := &in.AchievedSavingsPercentage, &out.AchievedSavingsPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionConditionsParameters.
func (in *ExecutionConditionsParameters) DeepCopy() *ExecutionConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsAssignmentsInitParameters) DeepCopyInto(out *GCPCudsAssignmentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsAssignmentsInitParameters.
func (in *GCPCudsAssignmentsInitParameters) DeepCopy() *GCPCudsAssignmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCudsAssignmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsAssignmentsObservation) DeepCopyInto(out *GCPCudsAssignmentsObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsAssignmentsObservation.
func (in *GCPCudsAssignmentsObservation) DeepCopy() *GCPCudsAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(GCPCudsAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsAssignmentsParameters) DeepCopyInto(out *GCPCudsAssignmentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsAssignmentsParameters.
func (in *GCPCudsAssignmentsParameters) DeepCopy() *GCPCudsAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCudsAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsInitParameters) DeepCopyInto(out *GCPCudsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsInitParameters.
func (in *GCPCudsInitParameters) DeepCopy() *GCPCudsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCudsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsObservation) DeepCopyInto(out *GCPCudsObservation) {
	*out = *in
	if in.AllowedUsage != nil {
		in, out := &in.AllowedUsage, &out.AllowedUsage
		*out = new(float64)
		**out = **in
	}
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]GCPCudsAssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.CudID != nil {
		in, out := &in.CudID, &out.CudID
		*out = new(string)
		**out = **in
	}
	if in.CudStatus != nil {
		in, out := &in.CudStatus, &out.CudStatus
		*out = new(string)
		**out = **in
	}
	if in.EndTimestamp != nil {
		in, out := &in.EndTimestamp, &out.EndTimestamp
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Prioritization != nil {
		in, out := &in.Prioritization, &out.Prioritization
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ScalingStrategy != nil {
		in, out := &in.ScalingStrategy, &out.ScalingStrategy
		*out = new(string)
		**out = **in
	}
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsObservation.
func (in *GCPCudsObservation) DeepCopy() *GCPCudsObservation {
	if in == nil {
		return nil
	}
	out := new(GCPCudsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCudsParameters) DeepCopyInto(out *GCPCudsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCudsParameters.
func (in *GCPCudsParameters) DeepCopy() *GCPCudsParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCudsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeCluster) DeepCopyInto(out *GkeCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeCluster.
func (in *GkeCluster) DeepCopy() *GkeCluster {
	if in == nil {
		return nil
	}
	out := new(GkeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterId) DeepCopyInto(out *GkeClusterId) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterId.
func (in *GkeClusterId) DeepCopy() *GkeClusterId {
	if in == nil {
		return nil
	}
	out := new(GkeClusterId)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeClusterId) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdInitParameters) DeepCopyInto(out *GkeClusterIdInitParameters) {
	*out = *in
	if in.CastServiceAccount != nil {
		in, out := &in.CastServiceAccount, &out.CastServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ClientServiceAccount != nil {
		in, out := &in.ClientServiceAccount, &out.ClientServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdInitParameters.
func (in *GkeClusterIdInitParameters) DeepCopy() *GkeClusterIdInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdList) DeepCopyInto(out *GkeClusterIdList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GkeClusterId, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdList.
func (in *GkeClusterIdList) DeepCopy() *GkeClusterIdList {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeClusterIdList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdObservation) DeepCopyInto(out *GkeClusterIdObservation) {
	*out = *in
	if in.CastServiceAccount != nil {
		in, out := &in.CastServiceAccount, &out.CastServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ClientServiceAccount != nil {
		in, out := &in.ClientServiceAccount, &out.ClientServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdObservation.
func (in *GkeClusterIdObservation) DeepCopy() *GkeClusterIdObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdParameters) DeepCopyInto(out *GkeClusterIdParameters) {
	*out = *in
	if in.CastServiceAccount != nil {
		in, out := &in.CastServiceAccount, &out.CastServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ClientServiceAccount != nil {
		in, out := &in.ClientServiceAccount, &out.ClientServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdParameters.
func (in *GkeClusterIdParameters) DeepCopy() *GkeClusterIdParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdSpec) DeepCopyInto(out *GkeClusterIdSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdSpec.
func (in *GkeClusterIdSpec) DeepCopy() *GkeClusterIdSpec {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterIdStatus) DeepCopyInto(out *GkeClusterIdStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterIdStatus.
func (in *GkeClusterIdStatus) DeepCopy() *GkeClusterIdStatus {
	if in == nil {
		return nil
	}
	out := new(GkeClusterIdStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterInitParameters) DeepCopyInto(out *GkeClusterInitParameters) {
	*out = *in
	if in.CredentialsJSONSecretRef != nil {
		in, out := &in.CredentialsJSONSecretRef, &out.CredentialsJSONSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterInitParameters.
func (in *GkeClusterInitParameters) DeepCopy() *GkeClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterList) DeepCopyInto(out *GkeClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GkeCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterList.
func (in *GkeClusterList) DeepCopy() *GkeClusterList {
	if in == nil {
		return nil
	}
	out := new(GkeClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterObservation) DeepCopyInto(out *GkeClusterObservation) {
	*out = *in
	if in.CredentialsID != nil {
		in, out := &in.CredentialsID, &out.CredentialsID
		*out = new(string)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterObservation.
func (in *GkeClusterObservation) DeepCopy() *GkeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterParameters) DeepCopyInto(out *GkeClusterParameters) {
	*out = *in
	if in.CredentialsJSONSecretRef != nil {
		in, out := &in.CredentialsJSONSecretRef, &out.CredentialsJSONSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DeleteNodesOnDisconnect != nil {
		in, out := &in.DeleteNodesOnDisconnect, &out.DeleteNodesOnDisconnect
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterParameters.
func (in *GkeClusterParameters) DeepCopy() *GkeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterSpec) DeepCopyInto(out *GkeClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterSpec.
func (in *GkeClusterSpec) DeepCopy() *GkeClusterSpec {
	if in == nil {
		return nil
	}
	out := new(GkeClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterStatus) DeepCopyInto(out *GkeClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterStatus.
func (in *GkeClusterStatus) DeepCopy() *GkeClusterStatus {
	if in == nil {
		return nil
	}
	out := new(GkeClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeInitParameters) DeepCopyInto(out *GkeInitParameters) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeInitParameters.
func (in *GkeInitParameters) DeepCopy() *GkeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersInitParameters) DeepCopyInto(out *GkeLoadbalancersInitParameters) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersInitParameters.
func (in *GkeLoadbalancersInitParameters) DeepCopy() *GkeLoadbalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersObservation) DeepCopyInto(out *GkeLoadbalancersObservation) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersObservation.
func (in *GkeLoadbalancersObservation) DeepCopy() *GkeLoadbalancersObservation {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLoadbalancersParameters) DeepCopyInto(out *GkeLoadbalancersParameters) {
	*out = *in
	if in.TargetBackendPools != nil {
		in, out := &in.TargetBackendPools, &out.TargetBackendPools
		*out = make([]TargetBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnmanagedInstanceGroups != nil {
		in, out := &in.UnmanagedInstanceGroups, &out.UnmanagedInstanceGroups
		*out = make([]UnmanagedInstanceGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLoadbalancersParameters.
func (in *GkeLoadbalancersParameters) DeepCopy() *GkeLoadbalancersParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLoadbalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeObservation) DeepCopyInto(out *GkeObservation) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeObservation.
func (in *GkeObservation) DeepCopy() *GkeObservation {
	if in == nil {
		return nil
	}
	out := new(GkeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeParameters) DeepCopyInto(out *GkeParameters) {
	*out = *in
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Loadbalancers != nil {
		in, out := &in.Loadbalancers, &out.Loadbalancers
		*out = make([]GkeLoadbalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseEphemeralStorageLocalSsd != nil {
		in, out := &in.UseEphemeralStorageLocalSsd, &out.UseEphemeralStorageLocalSsd
		*out = new(bool)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeParameters.
func (in *GkeParameters) DeepCopy() *GkeParameters {
	if in == nil {
		return nil
	}
	out := new(GkeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigInitParameters) DeepCopyInto(out *GpuConfigInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigInitParameters.
func (in *GpuConfigInitParameters) DeepCopy() *GpuConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GpuConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigObservation) DeepCopyInto(out *GpuConfigObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigObservation.
func (in *GpuConfigObservation) DeepCopy() *GpuConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GpuConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigParameters) DeepCopyInto(out *GpuConfigParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigParameters.
func (in *GpuConfigParameters) DeepCopy() *GpuConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GpuConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuInitParameters) DeepCopyInto(out *GpuInitParameters) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuInitParameters.
func (in *GpuInitParameters) DeepCopy() *GpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(GpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuObservation) DeepCopyInto(out *GpuObservation) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuObservation.
func (in *GpuObservation) DeepCopy() *GpuObservation {
	if in == nil {
		return nil
	}
	out := new(GpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuParameters) DeepCopyInto(out *GpuParameters) {
	*out = *in
	if in.ExcludeNames != nil {
		in, out := &in.ExcludeNames, &out.ExcludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeNames != nil {
		in, out := &in.IncludeNames, &out.IncludeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Manufacturers != nil {
		in, out := &in.Manufacturers, &out.Manufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuParameters.
func (in *GpuParameters) DeepCopy() *GpuParameters {
	if in == nil {
		return nil
	}
	out := new(GpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigInitParameters) DeepCopyInto(out *HTTPProxyConfigInitParameters) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigInitParameters.
func (in *HTTPProxyConfigInitParameters) DeepCopy() *HTTPProxyConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigObservation) DeepCopyInto(out *HTTPProxyConfigObservation) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigObservation.
func (in *HTTPProxyConfigObservation) DeepCopy() *HTTPProxyConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPProxyConfigParameters) DeepCopyInto(out *HTTPProxyConfigParameters) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPProxyConfigParameters.
func (in *HTTPProxyConfigParameters) DeepCopy() *HTTPProxyConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPProxyConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomInitParameters) DeepCopyInto(out *HeadroomInitParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomInitParameters.
func (in *HeadroomInitParameters) DeepCopy() *HeadroomInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomObservation) DeepCopyInto(out *HeadroomObservation) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomObservation.
func (in *HeadroomObservation) DeepCopy() *HeadroomObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomParameters) DeepCopyInto(out *HeadroomParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomParameters.
func (in *HeadroomParameters) DeepCopy() *HeadroomParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotInitParameters) DeepCopyInto(out *HeadroomSpotInitParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotInitParameters.
func (in *HeadroomSpotInitParameters) DeepCopy() *HeadroomSpotInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotObservation) DeepCopyInto(out *HeadroomSpotObservation) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotObservation.
func (in *HeadroomSpotObservation) DeepCopy() *HeadroomSpotObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomSpotParameters) DeepCopyInto(out *HeadroomSpotParameters) {
	*out = *in
	if in.CPUPercentage != nil {
		in, out := &in.CPUPercentage, &out.CPUPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryPercentage != nil {
		in, out := &in.MemoryPercentage, &out.MemoryPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomSpotParameters.
func (in *HeadroomSpotParameters) DeepCopy() *HeadroomSpotParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomSpotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationSchedule) DeepCopyInto(out *HibernationSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationSchedule.
func (in *HibernationSchedule) DeepCopy() *HibernationSchedule {
	if in == nil {
		return nil
	}
	out := new(HibernationSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HibernationSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleInitParameters) DeepCopyInto(out *HibernationScheduleInitParameters) {
	*out = *in
	if in.ClusterAssignments != nil {
		in, out := &in.ClusterAssignments, &out.ClusterAssignments
		*out = make([]ClusterAssignmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.PauseConfig != nil {
		in, out := &in.PauseConfig, &out.PauseConfig
		*out = make([]PauseConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResumeConfig != nil {
		in, out := &in.ResumeConfig, &out.ResumeConfig
		*out = make([]ResumeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleInitParameters.
func (in *HibernationScheduleInitParameters) DeepCopy() *HibernationScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleList) DeepCopyInto(out *HibernationScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HibernationSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleList.
func (in *HibernationScheduleList) DeepCopy() *HibernationScheduleList {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HibernationScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleObservation) DeepCopyInto(out *HibernationScheduleObservation) {
	*out = *in
	if in.ClusterAssignments != nil {
		in, out := &in.ClusterAssignments, &out.ClusterAssignments
		*out = make([]ClusterAssignmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.PauseConfig != nil {
		in, out := &in.PauseConfig, &out.PauseConfig
		*out = make([]PauseConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResumeConfig != nil {
		in, out := &in.ResumeConfig, &out.ResumeConfig
		*out = make([]ResumeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleObservation.
func (in *HibernationScheduleObservation) DeepCopy() *HibernationScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleParameters) DeepCopyInto(out *HibernationScheduleParameters) {
	*out = *in
	if in.ClusterAssignments != nil {
		in, out := &in.ClusterAssignments, &out.ClusterAssignments
		*out = make([]ClusterAssignmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.PauseConfig != nil {
		in, out := &in.PauseConfig, &out.PauseConfig
		*out = make([]PauseConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResumeConfig != nil {
		in, out := &in.ResumeConfig, &out.ResumeConfig
		*out = make([]ResumeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleParameters.
func (in *HibernationScheduleParameters) DeepCopy() *HibernationScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleSpec) DeepCopyInto(out *HibernationScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleSpec.
func (in *HibernationScheduleSpec) DeepCopy() *HibernationScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationScheduleStatus) DeepCopyInto(out *HibernationScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationScheduleStatus.
func (in *HibernationScheduleStatus) DeepCopy() *HibernationScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(HibernationScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsInitParameters) DeepCopyInto(out *IPBasedBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsInitParameters.
func (in *IPBasedBackendPoolsInitParameters) DeepCopy() *IPBasedBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsObservation) DeepCopyInto(out *IPBasedBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsObservation.
func (in *IPBasedBackendPoolsObservation) DeepCopy() *IPBasedBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBasedBackendPoolsParameters) DeepCopyInto(out *IPBasedBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBasedBackendPoolsParameters.
func (in *IPBasedBackendPoolsParameters) DeepCopy() *IPBasedBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(IPBasedBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesInitParameters) DeepCopyInto(out *InstanceFamiliesInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesInitParameters.
func (in *InstanceFamiliesInitParameters) DeepCopy() *InstanceFamiliesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesObservation) DeepCopyInto(out *InstanceFamiliesObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesObservation.
func (in *InstanceFamiliesObservation) DeepCopy() *InstanceFamiliesObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFamiliesParameters) DeepCopyInto(out *InstanceFamiliesParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFamiliesParameters.
func (in *InstanceFamiliesParameters) DeepCopy() *InstanceFamiliesParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFamiliesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobConfigInitParameters) DeepCopyInto(out *JobConfigInitParameters) {
	*out = *in
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobConfigInitParameters.
func (in *JobConfigInitParameters) DeepCopy() *JobConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobConfigObservation) DeepCopyInto(out *JobConfigObservation) {
	*out = *in
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobConfigObservation.
func (in *JobConfigObservation) DeepCopy() *JobConfigObservation {
	if in == nil {
		return nil
	}
	out := new(JobConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobConfigParameters) DeepCopyInto(out *JobConfigParameters) {
	*out = *in
	if in.NodeConfig != nil {
		in, out := &in.NodeConfig, &out.NodeConfig
		*out = make([]NodeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobConfigParameters.
func (in *JobConfigParameters) DeepCopy() *JobConfigParameters {
	if in == nil {
		return nil
	}
	out := new(JobConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsInitParameters) DeepCopyInto(out *KopsInitParameters) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsInitParameters.
func (in *KopsInitParameters) DeepCopy() *KopsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KopsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsObservation) DeepCopyInto(out *KopsObservation) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsObservation.
func (in *KopsObservation) DeepCopy() *KopsObservation {
	if in == nil {
		return nil
	}
	out := new(KopsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KopsParameters) DeepCopyInto(out *KopsParameters) {
	*out = *in
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KopsParameters.
func (in *KopsParameters) DeepCopy() *KopsParameters {
	if in == nil {
		return nil
	}
	out := new(KopsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesTaintsInitParameters) DeepCopyInto(out *KubernetesTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesTaintsInitParameters.
func (in *KubernetesTaintsInitParameters) DeepCopy() *KubernetesTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesTaintsObservation) DeepCopyInto(out *KubernetesTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesTaintsObservation.
func (in *KubernetesTaintsObservation) DeepCopy() *KubernetesTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(KubernetesTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesTaintsParameters) DeepCopyInto(out *KubernetesTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesTaintsParameters.
func (in *KubernetesTaintsParameters) DeepCopy() *KubernetesTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(KubernetesTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsExpressionsInitParameters) DeepCopyInto(out *LabelsExpressionsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsExpressionsInitParameters.
func (in *LabelsExpressionsInitParameters) DeepCopy() *LabelsExpressionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsExpressionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsExpressionsObservation) DeepCopyInto(out *LabelsExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsExpressionsObservation.
func (in *LabelsExpressionsObservation) DeepCopy() *LabelsExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsExpressionsParameters) DeepCopyInto(out *LabelsExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsExpressionsParameters.
func (in *LabelsExpressionsParameters) DeepCopy() *LabelsExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationInitParameters) DeepCopyInto(out *LaunchConfigurationInitParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationInitParameters.
func (in *LaunchConfigurationInitParameters) DeepCopy() *LaunchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationObservation) DeepCopyInto(out *LaunchConfigurationObservation) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationObservation.
func (in *LaunchConfigurationObservation) DeepCopy() *LaunchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchConfigurationParameters) DeepCopyInto(out *LaunchConfigurationParameters) {
	*out = *in
	if in.AggressiveMode != nil {
		in, out := &in.AggressiveMode, &out.AggressiveMode
		*out = new(bool)
		**out = **in
	}
	if in.AggressiveModeConfig != nil {
		in, out := &in.AggressiveModeConfig, &out.AggressiveModeConfig
		*out = make([]AggressiveModeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionConditions != nil {
		in, out := &in.ExecutionConditions, &out.ExecutionConditions
		*out = make([]ExecutionConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepDrainTimeoutNodes != nil {
		in, out := &in.KeepDrainTimeoutNodes, &out.KeepDrainTimeoutNodes
		*out = new(bool)
		**out = **in
	}
	if in.NodeTTLSeconds != nil {
		in, out := &in.NodeTTLSeconds, &out.NodeTTLSeconds
		*out = new(float64)
		**out = **in
	}
	if in.NumTargetedNodes != nil {
		in, out := &in.NumTargetedNodes, &out.NumTargetedNodes
		*out = new(float64)
		**out = **in
	}
	if in.RebalancingMinNodes != nil {
		in, out := &in.RebalancingMinNodes, &out.RebalancingMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.TargetNodeSelectionAlgorithm != nil {
		in, out := &in.TargetNodeSelectionAlgorithm, &out.TargetNodeSelectionAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchConfigurationParameters.
func (in *LaunchConfigurationParameters) DeepCopy() *LaunchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitInitParameters) DeepCopyInto(out *LimitInitParameters) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitInitParameters.
func (in *LimitInitParameters) DeepCopy() *LimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(LimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitObservation) DeepCopyInto(out *LimitObservation) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitObservation.
func (in *LimitObservation) DeepCopy() *LimitObservation {
	if in == nil {
		return nil
	}
	out := new(LimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitParameters) DeepCopyInto(out *LimitParameters) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitParameters.
func (in *LimitParameters) DeepCopy() *LimitParameters {
	if in == nil {
		return nil
	}
	out := new(LimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersInitParameters) DeepCopyInto(out *LoadbalancersInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersInitParameters.
func (in *LoadbalancersInitParameters) DeepCopy() *LoadbalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersObservation) DeepCopyInto(out *LoadbalancersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersObservation.
func (in *LoadbalancersObservation) DeepCopy() *LoadbalancersObservation {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadbalancersParameters) DeepCopyInto(out *LoadbalancersParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPBasedBackendPools != nil {
		in, out := &in.IPBasedBackendPools, &out.IPBasedBackendPools
		*out = make([]IPBasedBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicBasedBackendPools != nil {
		in, out := &in.NicBasedBackendPools, &out.NicBasedBackendPools
		*out = make([]NicBasedBackendPoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadbalancersParameters.
func (in *LoadbalancersParameters) DeepCopy() *LoadbalancersParameters {
	if in == nil {
		return nil
	}
	out := new(LoadbalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsInitParameters) DeepCopyInto(out *MatchExpressionsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsInitParameters.
func (in *MatchExpressionsInitParameters) DeepCopy() *MatchExpressionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsObservation) DeepCopyInto(out *MatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsObservation.
func (in *MatchExpressionsObservation) DeepCopy() *MatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchExpressionsParameters) DeepCopyInto(out *MatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchExpressionsParameters.
func (in *MatchExpressionsParameters) DeepCopy() *MatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatcherInitParameters) DeepCopyInto(out *MatcherInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatcherInitParameters.
func (in *MatcherInitParameters) DeepCopy() *MatcherInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatcherInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatcherObservation) DeepCopyInto(out *MatcherObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatcherObservation.
func (in *MatcherObservation) DeepCopy() *MatcherObservation {
	if in == nil {
		return nil
	}
	out := new(MatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatcherParameters) DeepCopyInto(out *MatcherParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatcherParameters.
func (in *MatcherParameters) DeepCopy() *MatcherParameters {
	if in == nil {
		return nil
	}
	out := new(MatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberInitParameters) DeepCopyInto(out *MemberInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberInitParameters.
func (in *MemberInitParameters) DeepCopy() *MemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberObservation) DeepCopyInto(out *MemberObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberObservation.
func (in *MemberObservation) DeepCopy() *MemberObservation {
	if in == nil {
		return nil
	}
	out := new(MemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberParameters) DeepCopyInto(out *MemberParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberParameters.
func (in *MemberParameters) DeepCopy() *MemberParameters {
	if in == nil {
		return nil
	}
	out := new(MemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersInitParameters) DeepCopyInto(out *MembersInitParameters) {
	*out = *in
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = make([]MemberInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersInitParameters.
func (in *MembersInitParameters) DeepCopy() *MembersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MembersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersObservation) DeepCopyInto(out *MembersObservation) {
	*out = *in
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = make([]MemberObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersObservation.
func (in *MembersObservation) DeepCopy() *MembersObservation {
	if in == nil {
		return nil
	}
	out := new(MembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersParameters) DeepCopyInto(out *MembersParameters) {
	*out = *in
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = make([]MemberParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersParameters.
func (in *MembersParameters) DeepCopy() *MembersParameters {
	if in == nil {
		return nil
	}
	out := new(MembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryApplyThresholdStrategyInitParameters) DeepCopyInto(out *MemoryApplyThresholdStrategyInitParameters) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryApplyThresholdStrategyInitParameters.
func (in *MemoryApplyThresholdStrategyInitParameters) DeepCopy() *MemoryApplyThresholdStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryApplyThresholdStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryApplyThresholdStrategyObservation) DeepCopyInto(out *MemoryApplyThresholdStrategyObservation) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryApplyThresholdStrategyObservation.
func (in *MemoryApplyThresholdStrategyObservation) DeepCopy() *MemoryApplyThresholdStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryApplyThresholdStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryApplyThresholdStrategyParameters) DeepCopyInto(out *MemoryApplyThresholdStrategyParameters) {
	*out = *in
	if in.Denominator != nil {
		in, out := &in.Denominator, &out.Denominator
		*out = new(string)
		**out = **in
	}
	if in.Exponent != nil {
		in, out := &in.Exponent, &out.Exponent
		*out = new(float64)
		**out = **in
	}
	if in.Numerator != nil {
		in, out := &in.Numerator, &out.Numerator
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryApplyThresholdStrategyParameters.
func (in *MemoryApplyThresholdStrategyParameters) DeepCopy() *MemoryApplyThresholdStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryApplyThresholdStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryEventInitParameters) DeepCopyInto(out *MemoryEventInitParameters) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryEventInitParameters.
func (in *MemoryEventInitParameters) DeepCopy() *MemoryEventInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryEventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryEventObservation) DeepCopyInto(out *MemoryEventObservation) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryEventObservation.
func (in *MemoryEventObservation) DeepCopy() *MemoryEventObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryEventParameters) DeepCopyInto(out *MemoryEventParameters) {
	*out = *in
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryEventParameters.
func (in *MemoryEventParameters) DeepCopy() *MemoryEventParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryInitParameters) DeepCopyInto(out *MemoryInitParameters) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]MemoryApplyThresholdStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]MemoryLimitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryInitParameters.
func (in *MemoryInitParameters) DeepCopy() *MemoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryLimitInitParameters) DeepCopyInto(out *MemoryLimitInitParameters) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryLimitInitParameters.
func (in *MemoryLimitInitParameters) DeepCopy() *MemoryLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryLimitObservation) DeepCopyInto(out *MemoryLimitObservation) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryLimitObservation.
func (in *MemoryLimitObservation) DeepCopy() *MemoryLimitObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryLimitParameters) DeepCopyInto(out *MemoryLimitParameters) {
	*out = *in
	if in.Multiplier != nil {
		in, out := &in.Multiplier, &out.Multiplier
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryLimitParameters.
func (in *MemoryLimitParameters) DeepCopy() *MemoryLimitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryObservation) DeepCopyInto(out *MemoryObservation) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]MemoryApplyThresholdStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]MemoryLimitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryObservation.
func (in *MemoryObservation) DeepCopy() *MemoryObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryParameters) DeepCopyInto(out *MemoryParameters) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]MemoryApplyThresholdStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]MemoryLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryParameters.
func (in *MemoryParameters) DeepCopy() *MemoryParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceInitParameters) DeepCopyInto(out *NamespaceInitParameters) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceInitParameters.
func (in *NamespaceInitParameters) DeepCopy() *NamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceObservation) DeepCopyInto(out *NamespaceObservation) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceObservation.
func (in *NamespaceObservation) DeepCopy() *NamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceParameters) DeepCopyInto(out *NamespaceParameters) {
	*out = *in
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceParameters.
func (in *NamespaceParameters) DeepCopy() *NamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsInitParameters) DeepCopyInto(out *NicBasedBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsInitParameters.
func (in *NicBasedBackendPoolsInitParameters) DeepCopy() *NicBasedBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsObservation) DeepCopyInto(out *NicBasedBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsObservation.
func (in *NicBasedBackendPoolsObservation) DeepCopy() *NicBasedBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicBasedBackendPoolsParameters) DeepCopyInto(out *NicBasedBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicBasedBackendPoolsParameters.
func (in *NicBasedBackendPoolsParameters) DeepCopy() *NicBasedBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(NicBasedBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinityInitParameters) DeepCopyInto(out *NodeAffinityInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedGroup != nil {
		in, out := &in.DedicatedGroup, &out.DedicatedGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinityInitParameters.
func (in *NodeAffinityInitParameters) DeepCopy() *NodeAffinityInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeAffinityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinityObservation) DeepCopyInto(out *NodeAffinityObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedGroup != nil {
		in, out := &in.DedicatedGroup, &out.DedicatedGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinityObservation.
func (in *NodeAffinityObservation) DeepCopy() *NodeAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(NodeAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinityParameters) DeepCopyInto(out *NodeAffinityParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = make([]AffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedGroup != nil {
		in, out := &in.DedicatedGroup, &out.DedicatedGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinityParameters.
func (in *NodeAffinityParameters) DeepCopy() *NodeAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(NodeAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigInitParameters) DeepCopyInto(out *NodeConfigInitParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KubernetesLabels != nil {
		in, out := &in.KubernetesLabels, &out.KubernetesLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KubernetesTaints != nil {
		in, out := &in.KubernetesTaints, &out.KubernetesTaints
		*out = make([]KubernetesTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = make([]NodeAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotConfig != nil {
		in, out := &in.SpotConfig, &out.SpotConfig
		*out = make([]SpotConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigInitParameters.
func (in *NodeConfigInitParameters) DeepCopy() *NodeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigObservation) DeepCopyInto(out *NodeConfigObservation) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KubernetesLabels != nil {
		in, out := &in.KubernetesLabels, &out.KubernetesLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KubernetesTaints != nil {
		in, out := &in.KubernetesTaints, &out.KubernetesTaints
		*out = make([]KubernetesTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = make([]NodeAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotConfig != nil {
		in, out := &in.SpotConfig, &out.SpotConfig
		*out = make([]SpotConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigObservation.
func (in *NodeConfigObservation) DeepCopy() *NodeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigParameters) DeepCopyInto(out *NodeConfigParameters) {
	*out = *in
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.ConfigName != nil {
		in, out := &in.ConfigName, &out.ConfigName
		*out = new(string)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KubernetesLabels != nil {
		in, out := &in.KubernetesLabels, &out.KubernetesLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KubernetesTaints != nil {
		in, out := &in.KubernetesTaints, &out.KubernetesTaints
		*out = make([]KubernetesTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = make([]NodeAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotConfig != nil {
		in, out := &in.SpotConfig, &out.SpotConfig
		*out = make([]SpotConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigParameters.
func (in *NodeConfigParameters) DeepCopy() *NodeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfiguration) DeepCopyInto(out *NodeConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfiguration.
func (in *NodeConfiguration) DeepCopy() *NodeConfiguration {
	if in == nil {
		return nil
	}
	out := new(NodeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefault) DeepCopyInto(out *NodeConfigurationDefault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefault.
func (in *NodeConfigurationDefault) DeepCopy() *NodeConfigurationDefault {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationDefault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultInitParameters) DeepCopyInto(out *NodeConfigurationDefaultInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultInitParameters.
func (in *NodeConfigurationDefaultInitParameters) DeepCopy() *NodeConfigurationDefaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultList) DeepCopyInto(out *NodeConfigurationDefaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeConfigurationDefault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultList.
func (in *NodeConfigurationDefaultList) DeepCopy() *NodeConfigurationDefaultList {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationDefaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultObservation) DeepCopyInto(out *NodeConfigurationDefaultObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultObservation.
func (in *NodeConfigurationDefaultObservation) DeepCopy() *NodeConfigurationDefaultObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultParameters) DeepCopyInto(out *NodeConfigurationDefaultParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultParameters.
func (in *NodeConfigurationDefaultParameters) DeepCopy() *NodeConfigurationDefaultParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultSpec) DeepCopyInto(out *NodeConfigurationDefaultSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultSpec.
func (in *NodeConfigurationDefaultSpec) DeepCopy() *NodeConfigurationDefaultSpec {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationDefaultStatus) DeepCopyInto(out *NodeConfigurationDefaultStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationDefaultStatus.
func (in *NodeConfigurationDefaultStatus) DeepCopy() *NodeConfigurationDefaultStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationDefaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationInitParameters) DeepCopyInto(out *NodeConfigurationInitParameters) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationInitParameters.
func (in *NodeConfigurationInitParameters) DeepCopy() *NodeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationList) DeepCopyInto(out *NodeConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationList.
func (in *NodeConfigurationList) DeepCopy() *NodeConfigurationList {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationObservation) DeepCopyInto(out *NodeConfigurationObservation) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationObservation.
func (in *NodeConfigurationObservation) DeepCopy() *NodeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationParameters) DeepCopyInto(out *NodeConfigurationParameters) {
	*out = *in
	if in.Aks != nil {
		in, out := &in.Aks, &out.Aks
		*out = make([]AksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRuntime != nil {
		in, out := &in.ContainerRuntime, &out.ContainerRuntime
		*out = new(string)
		**out = **in
	}
	if in.DiskCPURatio != nil {
		in, out := &in.DiskCPURatio, &out.DiskCPURatio
		*out = new(float64)
		**out = **in
	}
	if in.DockerConfig != nil {
		in, out := &in.DockerConfig, &out.DockerConfig
		*out = new(string)
		**out = **in
	}
	if in.DrainTimeoutSec != nil {
		in, out := &in.DrainTimeoutSec, &out.DrainTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Eks != nil {
		in, out := &in.Eks, &out.Eks
		*out = make([]EksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gke != nil {
		in, out := &in.Gke, &out.Gke
		*out = make([]GkeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InitScript != nil {
		in, out := &in.InitScript, &out.InitScript
		*out = new(string)
		**out = **in
	}
	if in.Kops != nil {
		in, out := &in.Kops, &out.Kops
		*out = make([]KopsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletConfig != nil {
		in, out := &in.KubeletConfig, &out.KubeletConfig
		*out = new(string)
		**out = **in
	}
	if in.MinDiskSize != nil {
		in, out := &in.MinDiskSize, &out.MinDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationParameters.
func (in *NodeConfigurationParameters) DeepCopy() *NodeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationSpec) DeepCopyInto(out *NodeConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationSpec.
func (in *NodeConfigurationSpec) DeepCopy() *NodeConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigurationStatus) DeepCopyInto(out *NodeConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigurationStatus.
func (in *NodeConfigurationStatus) DeepCopy() *NodeConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsInitParameters) DeepCopyInto(out *NodeConstraintsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsInitParameters.
func (in *NodeConstraintsInitParameters) DeepCopy() *NodeConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsObservation) DeepCopyInto(out *NodeConstraintsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsObservation.
func (in *NodeConstraintsObservation) DeepCopy() *NodeConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConstraintsParameters) DeepCopyInto(out *NodeConstraintsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCPUCores != nil {
		in, out := &in.MaxCPUCores, &out.MaxCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAMMib != nil {
		in, out := &in.MaxRAMMib, &out.MaxRAMMib
		*out = new(float64)
		**out = **in
	}
	if in.MinCPUCores != nil {
		in, out := &in.MinCPUCores, &out.MinCPUCores
		*out = new(float64)
		**out = **in
	}
	if in.MinRAMMib != nil {
		in, out := &in.MinRAMMib, &out.MinRAMMib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConstraintsParameters.
func (in *NodeConstraintsParameters) DeepCopy() *NodeConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(NodeConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerInitParameters) DeepCopyInto(out *NodeDownscalerInitParameters) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerInitParameters.
func (in *NodeDownscalerInitParameters) DeepCopy() *NodeDownscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerObservation) DeepCopyInto(out *NodeDownscalerObservation) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerObservation.
func (in *NodeDownscalerObservation) DeepCopy() *NodeDownscalerObservation {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeDownscalerParameters) DeepCopyInto(out *NodeDownscalerParameters) {
	*out = *in
	if in.EmptyNodes != nil {
		in, out := &in.EmptyNodes, &out.EmptyNodes
		*out = make([]EmptyNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Evictor != nil {
		in, out := &in.Evictor, &out.Evictor
		*out = make([]EvictorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeDownscalerParameters.
func (in *NodeDownscalerParameters) DeepCopy() *NodeDownscalerParameters {
	if in == nil {
		return nil
	}
	out := new(NodeDownscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorInitParameters) DeepCopyInto(out *NodeSelectorInitParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorInitParameters.
func (in *NodeSelectorInitParameters) DeepCopy() *NodeSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorObservation) DeepCopyInto(out *NodeSelectorObservation) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorObservation.
func (in *NodeSelectorObservation) DeepCopy() *NodeSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSelectorParameters) DeepCopyInto(out *NodeSelectorParameters) {
	*out = *in
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]MatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSelectorParameters.
func (in *NodeSelectorParameters) DeepCopy() *NodeSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(NodeSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplate) DeepCopyInto(out *NodeTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplate.
func (in *NodeTemplate) DeepCopy() *NodeTemplate {
	if in == nil {
		return nil
	}
	out := new(NodeTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateGpuInitParameters) DeepCopyInto(out *NodeTemplateGpuInitParameters) {
	*out = *in
	if in.DefaultSharedClientsPerGpu != nil {
		in, out := &in.DefaultSharedClientsPerGpu, &out.DefaultSharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
	if in.EnableTimeSharing != nil {
		in, out := &in.EnableTimeSharing, &out.EnableTimeSharing
		*out = new(bool)
		**out = **in
	}
	if in.SharingConfiguration != nil {
		in, out := &in.SharingConfiguration, &out.SharingConfiguration
		*out = make([]SharingConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateGpuInitParameters.
func (in *NodeTemplateGpuInitParameters) DeepCopy() *NodeTemplateGpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateGpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateGpuObservation) DeepCopyInto(out *NodeTemplateGpuObservation) {
	*out = *in
	if in.DefaultSharedClientsPerGpu != nil {
		in, out := &in.DefaultSharedClientsPerGpu, &out.DefaultSharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
	if in.EnableTimeSharing != nil {
		in, out := &in.EnableTimeSharing, &out.EnableTimeSharing
		*out = new(bool)
		**out = **in
	}
	if in.SharingConfiguration != nil {
		in, out := &in.SharingConfiguration, &out.SharingConfiguration
		*out = make([]SharingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateGpuObservation.
func (in *NodeTemplateGpuObservation) DeepCopy() *NodeTemplateGpuObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateGpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateGpuParameters) DeepCopyInto(out *NodeTemplateGpuParameters) {
	*out = *in
	if in.DefaultSharedClientsPerGpu != nil {
		in, out := &in.DefaultSharedClientsPerGpu, &out.DefaultSharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
	if in.EnableTimeSharing != nil {
		in, out := &in.EnableTimeSharing, &out.EnableTimeSharing
		*out = new(bool)
		**out = **in
	}
	if in.SharingConfiguration != nil {
		in, out := &in.SharingConfiguration, &out.SharingConfiguration
		*out = make([]SharingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateGpuParameters.
func (in *NodeTemplateGpuParameters) DeepCopy() *NodeTemplateGpuParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateGpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateInitParameters) DeepCopyInto(out *NodeTemplateInitParameters) {
	*out = *in
	if in.ClmEnabled != nil {
		in, out := &in.ClmEnabled, &out.ClmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]NodeTemplateGpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateInitParameters.
func (in *NodeTemplateInitParameters) DeepCopy() *NodeTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateList) DeepCopyInto(out *NodeTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateList.
func (in *NodeTemplateList) DeepCopy() *NodeTemplateList {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateObservation) DeepCopyInto(out *NodeTemplateObservation) {
	*out = *in
	if in.ClmEnabled != nil {
		in, out := &in.ClmEnabled, &out.ClmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]NodeTemplateGpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateObservation.
func (in *NodeTemplateObservation) DeepCopy() *NodeTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateParameters) DeepCopyInto(out *NodeTemplateParameters) {
	*out = *in
	if in.ClmEnabled != nil {
		in, out := &in.ClmEnabled, &out.ClmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationID != nil {
		in, out := &in.ConfigurationID, &out.ConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationIDRef != nil {
		in, out := &in.ConfigurationIDRef, &out.ConfigurationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationIDSelector != nil {
		in, out := &in.ConfigurationIDSelector, &out.ConfigurationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]ConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomInstancesWithExtendedMemoryEnabled != nil {
		in, out := &in.CustomInstancesWithExtendedMemoryEnabled, &out.CustomInstancesWithExtendedMemoryEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CustomTaints != nil {
		in, out := &in.CustomTaints, &out.CustomTaints
		*out = make([]CustomTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = make([]NodeTemplateGpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RebalancingConfigMinNodes != nil {
		in, out := &in.RebalancingConfigMinNodes, &out.RebalancingConfigMinNodes
		*out = new(float64)
		**out = **in
	}
	if in.ShouldTaint != nil {
		in, out := &in.ShouldTaint, &out.ShouldTaint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateParameters.
func (in *NodeTemplateParameters) DeepCopy() *NodeTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateSpec) DeepCopyInto(out *NodeTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateSpec.
func (in *NodeTemplateSpec) DeepCopy() *NodeTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTemplateStatus) DeepCopyInto(out *NodeTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTemplateStatus.
func (in *NodeTemplateStatus) DeepCopy() *NodeTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(NodeTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaInitParameters) DeepCopyInto(out *OktaInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaInitParameters.
func (in *OktaInitParameters) DeepCopy() *OktaInitParameters {
	if in == nil {
		return nil
	}
	out := new(OktaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaObservation) DeepCopyInto(out *OktaObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaObservation.
func (in *OktaObservation) DeepCopy() *OktaObservation {
	if in == nil {
		return nil
	}
	out := new(OktaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaParameters) DeepCopyInto(out *OktaParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.OktaDomain != nil {
		in, out := &in.OktaDomain, &out.OktaDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaParameters.
func (in *OktaParameters) DeepCopy() *OktaParameters {
	if in == nil {
		return nil
	}
	out := new(OktaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroup) DeepCopyInto(out *OrganizationGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroup.
func (in *OrganizationGroup) DeepCopy() *OrganizationGroup {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupInitParameters) DeepCopyInto(out *OrganizationGroupInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupInitParameters.
func (in *OrganizationGroupInitParameters) DeepCopy() *OrganizationGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupList) DeepCopyInto(out *OrganizationGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupList.
func (in *OrganizationGroupList) DeepCopy() *OrganizationGroupList {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupObservation) DeepCopyInto(out *OrganizationGroupObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupObservation.
func (in *OrganizationGroupObservation) DeepCopy() *OrganizationGroupObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupParameters) DeepCopyInto(out *OrganizationGroupParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupParameters.
func (in *OrganizationGroupParameters) DeepCopy() *OrganizationGroupParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupSpec) DeepCopyInto(out *OrganizationGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupSpec.
func (in *OrganizationGroupSpec) DeepCopy() *OrganizationGroupSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationGroupStatus) DeepCopyInto(out *OrganizationGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationGroupStatus.
func (in *OrganizationGroupStatus) DeepCopy() *OrganizationGroupStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembers) DeepCopyInto(out *OrganizationMembers) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembers.
func (in *OrganizationMembers) DeepCopy() *OrganizationMembers {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationMembers) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersInitParameters) DeepCopyInto(out *OrganizationMembersInitParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersInitParameters.
func (in *OrganizationMembersInitParameters) DeepCopy() *OrganizationMembersInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersList) DeepCopyInto(out *OrganizationMembersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationMembers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersList.
func (in *OrganizationMembersList) DeepCopy() *OrganizationMembersList {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationMembersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersObservation) DeepCopyInto(out *OrganizationMembersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersObservation.
func (in *OrganizationMembersObservation) DeepCopy() *OrganizationMembersObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersParameters) DeepCopyInto(out *OrganizationMembersParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Owners != nil {
		in, out := &in.Owners, &out.Owners
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Viewers != nil {
		in, out := &in.Viewers, &out.Viewers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersParameters.
func (in *OrganizationMembersParameters) DeepCopy() *OrganizationMembersParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersSpec) DeepCopyInto(out *OrganizationMembersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersSpec.
func (in *OrganizationMembersSpec) DeepCopy() *OrganizationMembersSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationMembersStatus) DeepCopyInto(out *OrganizationMembersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationMembersStatus.
func (in *OrganizationMembersStatus) DeepCopy() *OrganizationMembersStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationMembersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PauseConfigInitParameters) DeepCopyInto(out *PauseConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PauseConfigInitParameters.
func (in *PauseConfigInitParameters) DeepCopy() *PauseConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PauseConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PauseConfigObservation) DeepCopyInto(out *PauseConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PauseConfigObservation.
func (in *PauseConfigObservation) DeepCopy() *PauseConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PauseConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PauseConfigParameters) DeepCopyInto(out *PauseConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PauseConfigParameters.
func (in *PauseConfigParameters) DeepCopy() *PauseConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PauseConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerInitParameters) DeepCopyInto(out *PodPinnerInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerInitParameters.
func (in *PodPinnerInitParameters) DeepCopy() *PodPinnerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodPinnerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerObservation) DeepCopyInto(out *PodPinnerObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerObservation.
func (in *PodPinnerObservation) DeepCopy() *PodPinnerObservation {
	if in == nil {
		return nil
	}
	out := new(PodPinnerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodPinnerParameters) DeepCopyInto(out *PodPinnerParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodPinnerParameters.
func (in *PodPinnerParameters) DeepCopy() *PodPinnerParameters {
	if in == nil {
		return nil
	}
	out := new(PodPinnerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorInitParameters) DeepCopyInto(out *PodSelectorInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorInitParameters.
func (in *PodSelectorInitParameters) DeepCopy() *PodSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsInitParameters) DeepCopyInto(out *PodSelectorMatchExpressionsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsInitParameters.
func (in *PodSelectorMatchExpressionsInitParameters) DeepCopy() *PodSelectorMatchExpressionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsObservation) DeepCopyInto(out *PodSelectorMatchExpressionsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsObservation.
func (in *PodSelectorMatchExpressionsObservation) DeepCopy() *PodSelectorMatchExpressionsObservation {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorMatchExpressionsParameters) DeepCopyInto(out *PodSelectorMatchExpressionsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorMatchExpressionsParameters.
func (in *PodSelectorMatchExpressionsParameters) DeepCopy() *PodSelectorMatchExpressionsParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorMatchExpressionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorObservation) DeepCopyInto(out *PodSelectorObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorObservation.
func (in *PodSelectorObservation) DeepCopy() *PodSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(PodSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorParameters) DeepCopyInto(out *PodSelectorParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]PodSelectorMatchExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorParameters.
func (in *PodSelectorParameters) DeepCopy() *PodSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(PodSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingCPUInitParameters) DeepCopyInto(out *PredictiveScalingCPUInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingCPUInitParameters.
func (in *PredictiveScalingCPUInitParameters) DeepCopy() *PredictiveScalingCPUInitParameters {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingCPUInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingCPUObservation) DeepCopyInto(out *PredictiveScalingCPUObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingCPUObservation.
func (in *PredictiveScalingCPUObservation) DeepCopy() *PredictiveScalingCPUObservation {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingCPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingCPUParameters) DeepCopyInto(out *PredictiveScalingCPUParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingCPUParameters.
func (in *PredictiveScalingCPUParameters) DeepCopy() *PredictiveScalingCPUParameters {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingCPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingInitParameters) DeepCopyInto(out *PredictiveScalingInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]PredictiveScalingCPUInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingInitParameters.
func (in *PredictiveScalingInitParameters) DeepCopy() *PredictiveScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingObservation) DeepCopyInto(out *PredictiveScalingObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]PredictiveScalingCPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingObservation.
func (in *PredictiveScalingObservation) DeepCopy() *PredictiveScalingObservation {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictiveScalingParameters) DeepCopyInto(out *PredictiveScalingParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]PredictiveScalingCPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictiveScalingParameters.
func (in *PredictiveScalingParameters) DeepCopy() *PredictiveScalingParameters {
	if in == nil {
		return nil
	}
	out := new(PredictiveScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPInitParameters) DeepCopyInto(out *PublicIPInitParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPInitParameters.
func (in *PublicIPInitParameters) DeepCopy() *PublicIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPObservation) DeepCopyInto(out *PublicIPObservation) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPObservation.
func (in *PublicIPObservation) DeepCopy() *PublicIPObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPParameters) DeepCopyInto(out *PublicIPParameters) {
	*out = *in
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPPrefix != nil {
		in, out := &in.PublicIPPrefix, &out.PublicIPPrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPParameters.
func (in *PublicIPParameters) DeepCopy() *PublicIPParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RaidConfigInitParameters) DeepCopyInto(out *RaidConfigInitParameters) {
	*out = *in
	if in.ChunkSizeKb != nil {
		in, out := &in.ChunkSizeKb, &out.ChunkSizeKb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RaidConfigInitParameters.
func (in *RaidConfigInitParameters) DeepCopy() *RaidConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RaidConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RaidConfigObservation) DeepCopyInto(out *RaidConfigObservation) {
	*out = *in
	if in.ChunkSizeKb != nil {
		in, out := &in.ChunkSizeKb, &out.ChunkSizeKb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RaidConfigObservation.
func (in *RaidConfigObservation) DeepCopy() *RaidConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RaidConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RaidConfigParameters) DeepCopyInto(out *RaidConfigParameters) {
	*out = *in
	if in.ChunkSizeKb != nil {
		in, out := &in.ChunkSizeKb, &out.ChunkSizeKb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RaidConfigParameters.
func (in *RaidConfigParameters) DeepCopy() *RaidConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RaidConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJob) DeepCopyInto(out *RebalancingJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJob.
func (in *RebalancingJob) DeepCopy() *RebalancingJob {
	if in == nil {
		return nil
	}
	out := new(RebalancingJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobInitParameters) DeepCopyInto(out *RebalancingJobInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleIDRef != nil {
		in, out := &in.RebalancingScheduleIDRef, &out.RebalancingScheduleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RebalancingScheduleIDSelector != nil {
		in, out := &in.RebalancingScheduleIDSelector, &out.RebalancingScheduleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobInitParameters.
func (in *RebalancingJobInitParameters) DeepCopy() *RebalancingJobInitParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobList) DeepCopyInto(out *RebalancingJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RebalancingJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobList.
func (in *RebalancingJobList) DeepCopy() *RebalancingJobList {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobObservation) DeepCopyInto(out *RebalancingJobObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobObservation.
func (in *RebalancingJobObservation) DeepCopy() *RebalancingJobObservation {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobParameters) DeepCopyInto(out *RebalancingJobParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RebalancingScheduleID != nil {
		in, out := &in.RebalancingScheduleID, &out.RebalancingScheduleID
		*out = new(string)
		**out = **in
	}
	if in.RebalancingScheduleIDRef != nil {
		in, out := &in.RebalancingScheduleIDRef, &out.RebalancingScheduleIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RebalancingScheduleIDSelector != nil {
		in, out := &in.RebalancingScheduleIDSelector, &out.RebalancingScheduleIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobParameters.
func (in *RebalancingJobParameters) DeepCopy() *RebalancingJobParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobSpec) DeepCopyInto(out *RebalancingJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobSpec.
func (in *RebalancingJobSpec) DeepCopy() *RebalancingJobSpec {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingJobStatus) DeepCopyInto(out *RebalancingJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingJobStatus.
func (in *RebalancingJobStatus) DeepCopy() *RebalancingJobStatus {
	if in == nil {
		return nil
	}
	out := new(RebalancingJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingSchedule) DeepCopyInto(out *RebalancingSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingSchedule.
func (in *RebalancingSchedule) DeepCopy() *RebalancingSchedule {
	if in == nil {
		return nil
	}
	out := new(RebalancingSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleInitParameters) DeepCopyInto(out *RebalancingScheduleInitParameters) {
	*out = *in
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RebalancingScheduleScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleInitParameters.
func (in *RebalancingScheduleInitParameters) DeepCopy() *RebalancingScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleList) DeepCopyInto(out *RebalancingScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RebalancingSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleList.
func (in *RebalancingScheduleList) DeepCopy() *RebalancingScheduleList {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RebalancingScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleObservation) DeepCopyInto(out *RebalancingScheduleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RebalancingScheduleScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleObservation.
func (in *RebalancingScheduleObservation) DeepCopy() *RebalancingScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleParameters) DeepCopyInto(out *RebalancingScheduleParameters) {
	*out = *in
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = make([]LaunchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]RebalancingScheduleScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggerConditions != nil {
		in, out := &in.TriggerConditions, &out.TriggerConditions
		*out = make([]TriggerConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleParameters.
func (in *RebalancingScheduleParameters) DeepCopy() *RebalancingScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleScheduleInitParameters) DeepCopyInto(out *RebalancingScheduleScheduleInitParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleScheduleInitParameters.
func (in *RebalancingScheduleScheduleInitParameters) DeepCopy() *RebalancingScheduleScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleScheduleObservation) DeepCopyInto(out *RebalancingScheduleScheduleObservation) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleScheduleObservation.
func (in *RebalancingScheduleScheduleObservation) DeepCopy() *RebalancingScheduleScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleScheduleParameters) DeepCopyInto(out *RebalancingScheduleScheduleParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleScheduleParameters.
func (in *RebalancingScheduleScheduleParameters) DeepCopy() *RebalancingScheduleScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleSpec) DeepCopyInto(out *RebalancingScheduleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleSpec.
func (in *RebalancingScheduleSpec) DeepCopy() *RebalancingScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RebalancingScheduleStatus) DeepCopyInto(out *RebalancingScheduleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RebalancingScheduleStatus.
func (in *RebalancingScheduleStatus) DeepCopy() *RebalancingScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(RebalancingScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Reservations) DeepCopyInto(out *Reservations) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Reservations.
func (in *Reservations) DeepCopy() *Reservations {
	if in == nil {
		return nil
	}
	out := new(Reservations)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Reservations) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsInitParameters) DeepCopyInto(out *ReservationsInitParameters) {
	*out = *in
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsInitParameters.
func (in *ReservationsInitParameters) DeepCopy() *ReservationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsList) DeepCopyInto(out *ReservationsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Reservations, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsList.
func (in *ReservationsList) DeepCopy() *ReservationsList {
	if in == nil {
		return nil
	}
	out := new(ReservationsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReservationsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsObservation) DeepCopyInto(out *ReservationsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Reservations != nil {
		in, out := &in.Reservations, &out.Reservations
		*out = make([]ReservationsReservationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsObservation.
func (in *ReservationsObservation) DeepCopy() *ReservationsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsParameters) DeepCopyInto(out *ReservationsParameters) {
	*out = *in
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ReservationsCsv != nil {
		in, out := &in.ReservationsCsv, &out.ReservationsCsv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsParameters.
func (in *ReservationsParameters) DeepCopy() *ReservationsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsInitParameters) DeepCopyInto(out *ReservationsReservationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsInitParameters.
func (in *ReservationsReservationsInitParameters) DeepCopy() *ReservationsReservationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsObservation) DeepCopyInto(out *ReservationsReservationsObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Price != nil {
		in, out := &in.Price, &out.Price
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsObservation.
func (in *ReservationsReservationsObservation) DeepCopy() *ReservationsReservationsObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsReservationsParameters) DeepCopyInto(out *ReservationsReservationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsReservationsParameters.
func (in *ReservationsReservationsParameters) DeepCopy() *ReservationsReservationsParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationsReservationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsSpec) DeepCopyInto(out *ReservationsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsSpec.
func (in *ReservationsSpec) DeepCopy() *ReservationsSpec {
	if in == nil {
		return nil
	}
	out := new(ReservationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationsStatus) DeepCopyInto(out *ReservationsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationsStatus.
func (in *ReservationsStatus) DeepCopy() *ReservationsStatus {
	if in == nil {
		return nil
	}
	out := new(ReservationsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsInitParameters) DeepCopyInto(out *ResourceLimitsInitParameters) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsInitParameters.
func (in *ResourceLimitsInitParameters) DeepCopy() *ResourceLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsObservation) DeepCopyInto(out *ResourceLimitsObservation) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsObservation.
func (in *ResourceLimitsObservation) DeepCopy() *ResourceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsParameters) DeepCopyInto(out *ResourceLimitsParameters) {
	*out = *in
	if in.CPULimitEnabled != nil {
		in, out := &in.CPULimitEnabled, &out.CPULimitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimitMaxCores != nil {
		in, out := &in.CPULimitMaxCores, &out.CPULimitMaxCores
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsParameters.
func (in *ResourceLimitsParameters) DeepCopy() *ResourceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigInitParameters) DeepCopyInto(out *ResumeConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.JobConfig != nil {
		in, out := &in.JobConfig, &out.JobConfig
		*out = make([]JobConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ResumeConfigScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigInitParameters.
func (in *ResumeConfigInitParameters) DeepCopy() *ResumeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigObservation) DeepCopyInto(out *ResumeConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.JobConfig != nil {
		in, out := &in.JobConfig, &out.JobConfig
		*out = make([]JobConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ResumeConfigScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigObservation.
func (in *ResumeConfigObservation) DeepCopy() *ResumeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigParameters) DeepCopyInto(out *ResumeConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.JobConfig != nil {
		in, out := &in.JobConfig, &out.JobConfig
		*out = make([]JobConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ResumeConfigScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigParameters.
func (in *ResumeConfigParameters) DeepCopy() *ResumeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigScheduleInitParameters) DeepCopyInto(out *ResumeConfigScheduleInitParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigScheduleInitParameters.
func (in *ResumeConfigScheduleInitParameters) DeepCopy() *ResumeConfigScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigScheduleObservation) DeepCopyInto(out *ResumeConfigScheduleObservation) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigScheduleObservation.
func (in *ResumeConfigScheduleObservation) DeepCopy() *ResumeConfigScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResumeConfigScheduleParameters) DeepCopyInto(out *ResumeConfigScheduleParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResumeConfigScheduleParameters.
func (in *ResumeConfigScheduleParameters) DeepCopy() *ResumeConfigScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ResumeConfigScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindings) DeepCopyInto(out *RoleBindings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindings.
func (in *RoleBindings) DeepCopy() *RoleBindings {
	if in == nil {
		return nil
	}
	out := new(RoleBindings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleBindings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsInitParameters) DeepCopyInto(out *RoleBindingsInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]ScopesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsInitParameters.
func (in *RoleBindingsInitParameters) DeepCopy() *RoleBindingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsList) DeepCopyInto(out *RoleBindingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleBindings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsList.
func (in *RoleBindingsList) DeepCopy() *RoleBindingsList {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleBindingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsObservation) DeepCopyInto(out *RoleBindingsObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]ScopesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsObservation.
func (in *RoleBindingsObservation) DeepCopy() *RoleBindingsObservation {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsParameters) DeepCopyInto(out *RoleBindingsParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.RoleID != nil {
		in, out := &in.RoleID, &out.RoleID
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]ScopesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsParameters.
func (in *RoleBindingsParameters) DeepCopy() *RoleBindingsParameters {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsSpec) DeepCopyInto(out *RoleBindingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsSpec.
func (in *RoleBindingsSpec) DeepCopy() *RoleBindingsSpec {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleBindingsStatus) DeepCopyInto(out *RoleBindingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleBindingsStatus.
func (in *RoleBindingsStatus) DeepCopy() *RoleBindingsStatus {
	if in == nil {
		return nil
	}
	out := new(RoleBindingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutBehaviorInitParameters) DeepCopyInto(out *RolloutBehaviorInitParameters) {
	*out = *in
	if in.PreferOneByOne != nil {
		in, out := &in.PreferOneByOne, &out.PreferOneByOne
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutBehaviorInitParameters.
func (in *RolloutBehaviorInitParameters) DeepCopy() *RolloutBehaviorInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolloutBehaviorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutBehaviorObservation) DeepCopyInto(out *RolloutBehaviorObservation) {
	*out = *in
	if in.PreferOneByOne != nil {
		in, out := &in.PreferOneByOne, &out.PreferOneByOne
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutBehaviorObservation.
func (in *RolloutBehaviorObservation) DeepCopy() *RolloutBehaviorObservation {
	if in == nil {
		return nil
	}
	out := new(RolloutBehaviorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloutBehaviorParameters) DeepCopyInto(out *RolloutBehaviorParameters) {
	*out = *in
	if in.PreferOneByOne != nil {
		in, out := &in.PreferOneByOne, &out.PreferOneByOne
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloutBehaviorParameters.
func (in *RolloutBehaviorParameters) DeepCopy() *RolloutBehaviorParameters {
	if in == nil {
		return nil
	}
	out := new(RolloutBehaviorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workload != nil {
		in, out := &in.Workload, &out.Workload
		*out = make([]WorkloadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnection) DeepCopyInto(out *SSOConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnection.
func (in *SSOConnection) DeepCopy() *SSOConnection {
	if in == nil {
		return nil
	}
	out := new(SSOConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSOConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionInitParameters) DeepCopyInto(out *SSOConnectionInitParameters) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionInitParameters.
func (in *SSOConnectionInitParameters) DeepCopy() *SSOConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionList) DeepCopyInto(out *SSOConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSOConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionList.
func (in *SSOConnectionList) DeepCopy() *SSOConnectionList {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSOConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionObservation) DeepCopyInto(out *SSOConnectionObservation) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionObservation.
func (in *SSOConnectionObservation) DeepCopy() *SSOConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionParameters) DeepCopyInto(out *SSOConnectionParameters) {
	*out = *in
	if in.Aad != nil {
		in, out := &in.Aad, &out.Aad
		*out = make([]AadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalEmailDomains != nil {
		in, out := &in.AdditionalEmailDomains, &out.AdditionalEmailDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailDomain != nil {
		in, out := &in.EmailDomain, &out.EmailDomain
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Okta != nil {
		in, out := &in.Okta, &out.Okta
		*out = make([]OktaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionParameters.
func (in *SSOConnectionParameters) DeepCopy() *SSOConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionSpec) DeepCopyInto(out *SSOConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionSpec.
func (in *SSOConnectionSpec) DeepCopy() *SSOConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOConnectionStatus) DeepCopyInto(out *SSOConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOConnectionStatus.
func (in *SSOConnectionStatus) DeepCopy() *SSOConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(SSOConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicy) DeepCopyInto(out *ScalingPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicy.
func (in *ScalingPolicy) DeepCopy() *ScalingPolicy {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyCPUInitParameters) DeepCopyInto(out *ScalingPolicyCPUInitParameters) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]ApplyThresholdStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]LimitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyCPUInitParameters.
func (in *ScalingPolicyCPUInitParameters) DeepCopy() *ScalingPolicyCPUInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyCPUInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyCPUObservation) DeepCopyInto(out *ScalingPolicyCPUObservation) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]ApplyThresholdStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]LimitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyCPUObservation.
func (in *ScalingPolicyCPUObservation) DeepCopy() *ScalingPolicyCPUObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyCPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyCPUParameters) DeepCopyInto(out *ScalingPolicyCPUParameters) {
	*out = *in
	if in.ApplyThreshold != nil {
		in, out := &in.ApplyThreshold, &out.ApplyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ApplyThresholdStrategy != nil {
		in, out := &in.ApplyThresholdStrategy, &out.ApplyThresholdStrategy
		*out = make([]ApplyThresholdStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]LimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookBackPeriodSeconds != nil {
		in, out := &in.LookBackPeriodSeconds, &out.LookBackPeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyCPUParameters.
func (in *ScalingPolicyCPUParameters) DeepCopy() *ScalingPolicyCPUParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyCPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyInitParameters) DeepCopyInto(out *ScalingPolicyInitParameters) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = make([]AntiAffinityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.AssignmentRules != nil {
		in, out := &in.AssignmentRules, &out.AssignmentRules
		*out = make([]AssignmentRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]ScalingPolicyCPUInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Confidence != nil {
		in, out := &in.Confidence, &out.Confidence
		*out = make([]ConfidenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryEvent != nil {
		in, out := &in.MemoryEvent, &out.MemoryEvent
		*out = make([]MemoryEventInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PredictiveScaling != nil {
		in, out := &in.PredictiveScaling, &out.PredictiveScaling
		*out = make([]PredictiveScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutBehavior != nil {
		in, out := &in.RolloutBehavior, &out.RolloutBehavior
		*out = make([]RolloutBehaviorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyInitParameters.
func (in *ScalingPolicyInitParameters) DeepCopy() *ScalingPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyList) DeepCopyInto(out *ScalingPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyList.
func (in *ScalingPolicyList) DeepCopy() *ScalingPolicyList {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyObservation) DeepCopyInto(out *ScalingPolicyObservation) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = make([]AntiAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.AssignmentRules != nil {
		in, out := &in.AssignmentRules, &out.AssignmentRules
		*out = make([]AssignmentRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]ScalingPolicyCPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Confidence != nil {
		in, out := &in.Confidence, &out.Confidence
		*out = make([]ConfidenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryEvent != nil {
		in, out := &in.MemoryEvent, &out.MemoryEvent
		*out = make([]MemoryEventObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PredictiveScaling != nil {
		in, out := &in.PredictiveScaling, &out.PredictiveScaling
		*out = make([]PredictiveScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutBehavior != nil {
		in, out := &in.RolloutBehavior, &out.RolloutBehavior
		*out = make([]RolloutBehaviorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyObservation.
func (in *ScalingPolicyObservation) DeepCopy() *ScalingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrder) DeepCopyInto(out *ScalingPolicyOrder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrder.
func (in *ScalingPolicyOrder) DeepCopy() *ScalingPolicyOrder {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPolicyOrder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderInitParameters) DeepCopyInto(out *ScalingPolicyOrderInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.PolicyIds != nil {
		in, out := &in.PolicyIds, &out.PolicyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderInitParameters.
func (in *ScalingPolicyOrderInitParameters) DeepCopy() *ScalingPolicyOrderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderList) DeepCopyInto(out *ScalingPolicyOrderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScalingPolicyOrder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderList.
func (in *ScalingPolicyOrderList) DeepCopy() *ScalingPolicyOrderList {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScalingPolicyOrderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderObservation) DeepCopyInto(out *ScalingPolicyOrderObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyIds != nil {
		in, out := &in.PolicyIds, &out.PolicyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderObservation.
func (in *ScalingPolicyOrderObservation) DeepCopy() *ScalingPolicyOrderObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderParameters) DeepCopyInto(out *ScalingPolicyOrderParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.PolicyIds != nil {
		in, out := &in.PolicyIds, &out.PolicyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderParameters.
func (in *ScalingPolicyOrderParameters) DeepCopy() *ScalingPolicyOrderParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderSpec) DeepCopyInto(out *ScalingPolicyOrderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderSpec.
func (in *ScalingPolicyOrderSpec) DeepCopy() *ScalingPolicyOrderSpec {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyOrderStatus) DeepCopyInto(out *ScalingPolicyOrderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyOrderStatus.
func (in *ScalingPolicyOrderStatus) DeepCopy() *ScalingPolicyOrderStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyOrderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyParameters) DeepCopyInto(out *ScalingPolicyParameters) {
	*out = *in
	if in.AntiAffinity != nil {
		in, out := &in.AntiAffinity, &out.AntiAffinity
		*out = make([]AntiAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplyType != nil {
		in, out := &in.ApplyType, &out.ApplyType
		*out = new(string)
		**out = **in
	}
	if in.AssignmentRules != nil {
		in, out := &in.AssignmentRules, &out.AssignmentRules
		*out = make([]AssignmentRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]ScalingPolicyCPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Confidence != nil {
		in, out := &in.Confidence, &out.Confidence
		*out = make([]ConfidenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementOption != nil {
		in, out := &in.ManagementOption, &out.ManagementOption
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryEvent != nil {
		in, out := &in.MemoryEvent, &out.MemoryEvent
		*out = make([]MemoryEventParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PredictiveScaling != nil {
		in, out := &in.PredictiveScaling, &out.PredictiveScaling
		*out = make([]PredictiveScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RolloutBehavior != nil {
		in, out := &in.RolloutBehavior, &out.RolloutBehavior
		*out = make([]RolloutBehaviorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyParameters.
func (in *ScalingPolicyParameters) DeepCopy() *ScalingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicySpec) DeepCopyInto(out *ScalingPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicySpec.
func (in *ScalingPolicySpec) DeepCopy() *ScalingPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingPolicyStatus) DeepCopyInto(out *ScalingPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingPolicyStatus.
func (in *ScalingPolicyStatus) DeepCopy() *ScalingPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ScalingPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopesInitParameters) DeepCopyInto(out *ScopesInitParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopesInitParameters.
func (in *ScopesInitParameters) DeepCopy() *ScopesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScopesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopesObservation) DeepCopyInto(out *ScopesObservation) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopesObservation.
func (in *ScopesObservation) DeepCopy() *ScopesObservation {
	if in == nil {
		return nil
	}
	out := new(ScopesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopesParameters) DeepCopyInto(out *ScopesParameters) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopesParameters.
func (in *ScopesParameters) DeepCopy() *ScopesParameters {
	if in == nil {
		return nil
	}
	out := new(ScopesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeInitParameters) DeepCopyInto(out *SecondaryIPRangeInitParameters) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeInitParameters.
func (in *SecondaryIPRangeInitParameters) DeepCopy() *SecondaryIPRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeObservation) DeepCopyInto(out *SecondaryIPRangeObservation) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeObservation.
func (in *SecondaryIPRangeObservation) DeepCopy() *SecondaryIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeParameters) DeepCopyInto(out *SecondaryIPRangeParameters) {
	*out = *in
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeParameters.
func (in *SecondaryIPRangeParameters) DeepCopy() *SecondaryIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRule) DeepCopyInto(out *SecurityRuntimeRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRule.
func (in *SecurityRuntimeRule) DeepCopy() *SecurityRuntimeRule {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRuntimeRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleInitParameters) DeepCopyInto(out *SecurityRuntimeRuleInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceSelector != nil {
		in, out := &in.ResourceSelector, &out.ResourceSelector
		*out = new(string)
		**out = **in
	}
	if in.RuleEngineType != nil {
		in, out := &in.RuleEngineType, &out.RuleEngineType
		*out = new(string)
		**out = **in
	}
	if in.RuleText != nil {
		in, out := &in.RuleText, &out.RuleText
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleInitParameters.
func (in *SecurityRuntimeRuleInitParameters) DeepCopy() *SecurityRuntimeRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleList) DeepCopyInto(out *SecurityRuntimeRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityRuntimeRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleList.
func (in *SecurityRuntimeRuleList) DeepCopy() *SecurityRuntimeRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRuntimeRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleObservation) DeepCopyInto(out *SecurityRuntimeRuleObservation) {
	*out = *in
	if in.AnomaliesCount != nil {
		in, out := &in.AnomaliesCount, &out.AnomaliesCount
		*out = new(float64)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsBuiltIn != nil {
		in, out := &in.IsBuiltIn, &out.IsBuiltIn
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceSelector != nil {
		in, out := &in.ResourceSelector, &out.ResourceSelector
		*out = new(string)
		**out = **in
	}
	if in.RuleEngineType != nil {
		in, out := &in.RuleEngineType, &out.RuleEngineType
		*out = new(string)
		**out = **in
	}
	if in.RuleText != nil {
		in, out := &in.RuleText, &out.RuleText
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UsedCustomLists != nil {
		in, out := &in.UsedCustomLists, &out.UsedCustomLists
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleObservation.
func (in *SecurityRuntimeRuleObservation) DeepCopy() *SecurityRuntimeRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleParameters) DeepCopyInto(out *SecurityRuntimeRuleParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceSelector != nil {
		in, out := &in.ResourceSelector, &out.ResourceSelector
		*out = new(string)
		**out = **in
	}
	if in.RuleEngineType != nil {
		in, out := &in.RuleEngineType, &out.RuleEngineType
		*out = new(string)
		**out = **in
	}
	if in.RuleText != nil {
		in, out := &in.RuleText, &out.RuleText
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleParameters.
func (in *SecurityRuntimeRuleParameters) DeepCopy() *SecurityRuntimeRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleSpec) DeepCopyInto(out *SecurityRuntimeRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleSpec.
func (in *SecurityRuntimeRuleSpec) DeepCopy() *SecurityRuntimeRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRuntimeRuleStatus) DeepCopyInto(out *SecurityRuntimeRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRuntimeRuleStatus.
func (in *SecurityRuntimeRuleStatus) DeepCopy() *SecurityRuntimeRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityRuntimeRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccount) DeepCopyInto(out *ServiceAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccount.
func (in *ServiceAccount) DeepCopy() *ServiceAccount {
	if in == nil {
		return nil
	}
	out := new(ServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountInitParameters) DeepCopyInto(out *ServiceAccountInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountInitParameters.
func (in *ServiceAccountInitParameters) DeepCopy() *ServiceAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKey) DeepCopyInto(out *ServiceAccountKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKey.
func (in *ServiceAccountKey) DeepCopy() *ServiceAccountKey {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeyInitParameters) DeepCopyInto(out *ServiceAccountKeyInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeyInitParameters.
func (in *ServiceAccountKeyInitParameters) DeepCopy() *ServiceAccountKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeyList) DeepCopyInto(out *ServiceAccountKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAccountKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeyList.
func (in *ServiceAccountKeyList) DeepCopy() *ServiceAccountKeyList {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeyObservation) DeepCopyInto(out *ServiceAccountKeyObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastUsedAt != nil {
		in, out := &in.LastUsedAt, &out.LastUsedAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeyObservation.
func (in *ServiceAccountKeyObservation) DeepCopy() *ServiceAccountKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeyParameters) DeepCopyInto(out *ServiceAccountKeyParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeyParameters.
func (in *ServiceAccountKeyParameters) DeepCopy() *ServiceAccountKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeySpec) DeepCopyInto(out *ServiceAccountKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeySpec.
func (in *ServiceAccountKeySpec) DeepCopy() *ServiceAccountKeySpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountKeyStatus) DeepCopyInto(out *ServiceAccountKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountKeyStatus.
func (in *ServiceAccountKeyStatus) DeepCopy() *ServiceAccountKeyStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountList) DeepCopyInto(out *ServiceAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountList.
func (in *ServiceAccountList) DeepCopy() *ServiceAccountList {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountObservation) DeepCopyInto(out *ServiceAccountObservation) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = make([]AuthorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountObservation.
func (in *ServiceAccountObservation) DeepCopy() *ServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountParameters) DeepCopyInto(out *ServiceAccountParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountParameters.
func (in *ServiceAccountParameters) DeepCopy() *ServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountSpec) DeepCopyInto(out *ServiceAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountSpec.
func (in *ServiceAccountSpec) DeepCopy() *ServiceAccountSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountStatus) DeepCopyInto(out *ServiceAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountStatus.
func (in *ServiceAccountStatus) DeepCopy() *ServiceAccountStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharingConfigurationInitParameters) DeepCopyInto(out *SharingConfigurationInitParameters) {
	*out = *in
	if in.GpuName != nil {
		in, out := &in.GpuName, &out.GpuName
		*out = new(string)
		**out = **in
	}
	if in.SharedClientsPerGpu != nil {
		in, out := &in.SharedClientsPerGpu, &out.SharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharingConfigurationInitParameters.
func (in *SharingConfigurationInitParameters) DeepCopy() *SharingConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharingConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharingConfigurationObservation) DeepCopyInto(out *SharingConfigurationObservation) {
	*out = *in
	if in.GpuName != nil {
		in, out := &in.GpuName, &out.GpuName
		*out = new(string)
		**out = **in
	}
	if in.SharedClientsPerGpu != nil {
		in, out := &in.SharedClientsPerGpu, &out.SharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharingConfigurationObservation.
func (in *SharingConfigurationObservation) DeepCopy() *SharingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SharingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharingConfigurationParameters) DeepCopyInto(out *SharingConfigurationParameters) {
	*out = *in
	if in.GpuName != nil {
		in, out := &in.GpuName, &out.GpuName
		*out = new(string)
		**out = **in
	}
	if in.SharedClientsPerGpu != nil {
		in, out := &in.SharedClientsPerGpu, &out.SharedClientsPerGpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharingConfigurationParameters.
func (in *SharingConfigurationParameters) DeepCopy() *SharingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SharingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsInitParameters) DeepCopyInto(out *SpotBackupsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsInitParameters.
func (in *SpotBackupsInitParameters) DeepCopy() *SpotBackupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsObservation) DeepCopyInto(out *SpotBackupsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsObservation.
func (in *SpotBackupsObservation) DeepCopy() *SpotBackupsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotBackupsParameters) DeepCopyInto(out *SpotBackupsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotBackupRestoreRateSeconds != nil {
		in, out := &in.SpotBackupRestoreRateSeconds, &out.SpotBackupRestoreRateSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotBackupsParameters.
func (in *SpotBackupsParameters) DeepCopy() *SpotBackupsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotBackupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotConfigInitParameters) DeepCopyInto(out *SpotConfigInitParameters) {
	*out = *in
	if in.PriceHourly != nil {
		in, out := &in.PriceHourly, &out.PriceHourly
		*out = new(string)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotConfigInitParameters.
func (in *SpotConfigInitParameters) DeepCopy() *SpotConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotConfigObservation) DeepCopyInto(out *SpotConfigObservation) {
	*out = *in
	if in.PriceHourly != nil {
		in, out := &in.PriceHourly, &out.PriceHourly
		*out = new(string)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotConfigObservation.
func (in *SpotConfigObservation) DeepCopy() *SpotConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SpotConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotConfigParameters) DeepCopyInto(out *SpotConfigParameters) {
	*out = *in
	if in.PriceHourly != nil {
		in, out := &in.PriceHourly, &out.PriceHourly
		*out = new(string)
		**out = **in
	}
	if in.Spot != nil {
		in, out := &in.Spot, &out.Spot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotConfigParameters.
func (in *SpotConfigParameters) DeepCopy() *SpotConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SpotConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesInitParameters) DeepCopyInto(out *SpotInstancesInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesInitParameters.
func (in *SpotInstancesInitParameters) DeepCopy() *SpotInstancesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesObservation) DeepCopyInto(out *SpotInstancesObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesObservation.
func (in *SpotInstancesObservation) DeepCopy() *SpotInstancesObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstancesParameters) DeepCopyInto(out *SpotInstancesParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxReclaimRate != nil {
		in, out := &in.MaxReclaimRate, &out.MaxReclaimRate
		*out = new(float64)
		**out = **in
	}
	if in.SpotBackups != nil {
		in, out := &in.SpotBackups, &out.SpotBackups
		*out = make([]SpotBackupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotDiversityEnabled != nil {
		in, out := &in.SpotDiversityEnabled, &out.SpotDiversityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotDiversityPriceIncreaseLimit != nil {
		in, out := &in.SpotDiversityPriceIncreaseLimit, &out.SpotDiversityPriceIncreaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.SpotInterruptionPredictions != nil {
		in, out := &in.SpotInterruptionPredictions, &out.SpotInterruptionPredictions
		*out = make([]SpotInterruptionPredictionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstancesParameters.
func (in *SpotInstancesParameters) DeepCopy() *SpotInstancesParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstancesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsInitParameters) DeepCopyInto(out *SpotInterruptionPredictionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsInitParameters.
func (in *SpotInterruptionPredictionsInitParameters) DeepCopy() *SpotInterruptionPredictionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsObservation) DeepCopyInto(out *SpotInterruptionPredictionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsObservation.
func (in *SpotInterruptionPredictionsObservation) DeepCopy() *SpotInterruptionPredictionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInterruptionPredictionsParameters) DeepCopyInto(out *SpotInterruptionPredictionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SpotInterruptionPredictionsType != nil {
		in, out := &in.SpotInterruptionPredictionsType, &out.SpotInterruptionPredictionsType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInterruptionPredictionsParameters.
func (in *SpotInterruptionPredictionsParameters) DeepCopy() *SpotInterruptionPredictionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInterruptionPredictionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupInitParameters) DeepCopyInto(out *StartupInitParameters) {
	*out = *in
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupInitParameters.
func (in *StartupInitParameters) DeepCopy() *StartupInitParameters {
	if in == nil {
		return nil
	}
	out := new(StartupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupObservation) DeepCopyInto(out *StartupObservation) {
	*out = *in
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupObservation.
func (in *StartupObservation) DeepCopy() *StartupObservation {
	if in == nil {
		return nil
	}
	out := new(StartupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupParameters) DeepCopyInto(out *StartupParameters) {
	*out = *in
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupParameters.
func (in *StartupParameters) DeepCopy() *StartupParameters {
	if in == nil {
		return nil
	}
	out := new(StartupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectInitParameters) DeepCopyInto(out *SubjectInitParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectInitParameters.
func (in *SubjectInitParameters) DeepCopy() *SubjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectObservation) DeepCopyInto(out *SubjectObservation) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectObservation.
func (in *SubjectObservation) DeepCopy() *SubjectObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectParameters) DeepCopyInto(out *SubjectParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectParameters.
func (in *SubjectParameters) DeepCopy() *SubjectParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsInitParameters) DeepCopyInto(out *SubjectsInitParameters) {
	*out = *in
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = make([]SubjectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsInitParameters.
func (in *SubjectsInitParameters) DeepCopy() *SubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsObservation) DeepCopyInto(out *SubjectsObservation) {
	*out = *in
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = make([]SubjectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsObservation.
func (in *SubjectsObservation) DeepCopy() *SubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsParameters) DeepCopyInto(out *SubjectsParameters) {
	*out = *in
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = make([]SubjectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsParameters.
func (in *SubjectsParameters) DeepCopy() *SubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsInitParameters) DeepCopyInto(out *TargetBackendPoolsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsInitParameters.
func (in *TargetBackendPoolsInitParameters) DeepCopy() *TargetBackendPoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsObservation) DeepCopyInto(out *TargetBackendPoolsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsObservation.
func (in *TargetBackendPoolsObservation) DeepCopy() *TargetBackendPoolsObservation {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetBackendPoolsParameters) DeepCopyInto(out *TargetBackendPoolsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetBackendPoolsParameters.
func (in *TargetBackendPoolsParameters) DeepCopy() *TargetBackendPoolsParameters {
	if in == nil {
		return nil
	}
	out := new(TargetBackendPoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupInitParameters) DeepCopyInto(out *TargetGroupInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupInitParameters.
func (in *TargetGroupInitParameters) DeepCopy() *TargetGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupObservation) DeepCopyInto(out *TargetGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupObservation.
func (in *TargetGroupObservation) DeepCopy() *TargetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(TargetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupParameters) DeepCopyInto(out *TargetGroupParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupParameters.
func (in *TargetGroupParameters) DeepCopy() *TargetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(TargetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsInitParameters) DeepCopyInto(out *TriggerConditionsInitParameters) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsInitParameters.
func (in *TriggerConditionsInitParameters) DeepCopy() *TriggerConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsObservation) DeepCopyInto(out *TriggerConditionsObservation) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsObservation.
func (in *TriggerConditionsObservation) DeepCopy() *TriggerConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerConditionsParameters) DeepCopyInto(out *TriggerConditionsParameters) {
	*out = *in
	if in.IgnoreSavings != nil {
		in, out := &in.IgnoreSavings, &out.IgnoreSavings
		*out = new(bool)
		**out = **in
	}
	if in.SavingsPercentage != nil {
		in, out := &in.SavingsPercentage, &out.SavingsPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerConditionsParameters.
func (in *TriggerConditionsParameters) DeepCopy() *TriggerConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsInitParameters) DeepCopyInto(out *UnmanagedInstanceGroupsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsInitParameters.
func (in *UnmanagedInstanceGroupsInitParameters) DeepCopy() *UnmanagedInstanceGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsObservation) DeepCopyInto(out *UnmanagedInstanceGroupsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsObservation.
func (in *UnmanagedInstanceGroupsObservation) DeepCopy() *UnmanagedInstanceGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnmanagedInstanceGroupsParameters) DeepCopyInto(out *UnmanagedInstanceGroupsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnmanagedInstanceGroupsParameters.
func (in *UnmanagedInstanceGroupsParameters) DeepCopy() *UnmanagedInstanceGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(UnmanagedInstanceGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsInitParameters) DeepCopyInto(out *UnschedulablePodsInitParameters) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsInitParameters.
func (in *UnschedulablePodsInitParameters) DeepCopy() *UnschedulablePodsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsObservation) DeepCopyInto(out *UnschedulablePodsObservation) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsObservation.
func (in *UnschedulablePodsObservation) DeepCopy() *UnschedulablePodsObservation {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnschedulablePodsParameters) DeepCopyInto(out *UnschedulablePodsParameters) {
	*out = *in
	if in.CustomInstancesEnabled != nil {
		in, out := &in.CustomInstancesEnabled, &out.CustomInstancesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeadroomSpot != nil {
		in, out := &in.HeadroomSpot, &out.HeadroomSpot
		*out = make([]HeadroomSpotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeConstraints != nil {
		in, out := &in.NodeConstraints, &out.NodeConstraints
		*out = make([]NodeConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodPinner != nil {
		in, out := &in.PodPinner, &out.PodPinner
		*out = make([]PodPinnerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnschedulablePodsParameters.
func (in *UnschedulablePodsParameters) DeepCopy() *UnschedulablePodsParameters {
	if in == nil {
		return nil
	}
	out := new(UnschedulablePodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.RaidConfig != nil {
		in, out := &in.RaidConfig, &out.RaidConfig
		*out = make([]RaidConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizeGib != nil {
		in, out := &in.SizeGib, &out.SizeGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.RaidConfig != nil {
		in, out := &in.RaidConfig, &out.RaidConfig
		*out = make([]RaidConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizeGib != nil {
		in, out := &in.SizeGib, &out.SizeGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.RaidConfig != nil {
		in, out := &in.RaidConfig, &out.RaidConfig
		*out = make([]RaidConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizeGib != nil {
		in, out := &in.SizeGib, &out.SizeGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadInitParameters) DeepCopyInto(out *WorkloadInitParameters) {
	*out = *in
	if in.Gvk != nil {
		in, out := &in.Gvk, &out.Gvk
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelsExpressions != nil {
		in, out := &in.LabelsExpressions, &out.LabelsExpressions
		*out = make([]LabelsExpressionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadInitParameters.
func (in *WorkloadInitParameters) DeepCopy() *WorkloadInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadObservation) DeepCopyInto(out *WorkloadObservation) {
	*out = *in
	if in.Gvk != nil {
		in, out := &in.Gvk, &out.Gvk
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelsExpressions != nil {
		in, out := &in.LabelsExpressions, &out.LabelsExpressions
		*out = make([]LabelsExpressionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadObservation.
func (in *WorkloadObservation) DeepCopy() *WorkloadObservation {
	if in == nil {
		return nil
	}
	out := new(WorkloadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadParameters) DeepCopyInto(out *WorkloadParameters) {
	*out = *in
	if in.Gvk != nil {
		in, out := &in.Gvk, &out.Gvk
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LabelsExpressions != nil {
		in, out := &in.LabelsExpressions, &out.LabelsExpressions
		*out = make([]LabelsExpressionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadParameters.
func (in *WorkloadParameters) DeepCopy() *WorkloadParameters {
	if in == nil {
		return nil
	}
	out := new(WorkloadParameters)
	in.DeepCopyInto(out)
	return out
}
