name: castai/castai
resources:
    castai_aks_cluster:
        subCategory: ""
        description: AKS cluster resource allows connecting an existing AKS cluster to CAST AI.
        name: castai_aks_cluster
        title: castai_aks_cluster Resource - terraform-provider-castai
        examples:
            - name: this
              manifest: |-
                {
                  "client_id": "${azuread_application.castai.application_id}",
                  "client_secret": "${azuread_application_password.castai.value}",
                  "delete_nodes_on_disconnect": "${var.delete_nodes_on_disconnect}",
                  "name": "${var.aks_cluster_name}",
                  "node_resource_group": "${azurerm_kubernetes_cluster.this.node_resource_group}",
                  "region": "${var.aks_cluster_region}",
                  "subscription_id": "${data.azurerm_subscription.current.subscription_id}",
                  "tenant_id": "${data.azurerm_subscription.current.tenant_id}"
                }
              references:
                client_id: azuread_application.castai.application_id
                client_secret: azuread_application_password.castai.value
                delete_nodes_on_disconnect: var.delete_nodes_on_disconnect
                name: var.aks_cluster_name
                node_resource_group: azurerm_kubernetes_cluster.this.node_resource_group
                region: var.aks_cluster_region
                subscription_id: data.azurerm_subscription.current.subscription_id
                tenant_id: data.azurerm_subscription.current.tenant_id
        argumentDocs:
            client_id: (String) Azure AD application ID that is created and used by CAST AI.
            client_secret: (String, Sensitive) Azure AD application password that will be used by CAST AI.
            cluster_token: (String, Sensitive) CAST AI cluster token.
            create: (String)
            credentials_id: (String) CAST AI internal credentials ID
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST.AI on disconnect.
            http_proxy: (String) Address to use for proxying HTTP requests.
            http_proxy_config: '(Block List, Max: 1) HTTP proxy configuration for CAST AI nodes and node components. (see below for nested schema)'
            https_proxy: (String) Address to use for proxying HTTPS/TLS requests.
            id: (String) The ID of this resource.
            name: (String) AKS cluster name.
            no_proxy: (List of String) List of destinations that should not go through proxy.
            node_resource_group: (String) Azure resource group in which nodes are and will be created.
            region: (String) AKS cluster region.
            subscription_id: (String) ID of the Azure subscription.
            tenant_id: (String) Azure AD tenant ID from the used subscription.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_allocation_group:
        subCategory: ""
        description: Manage allocation group. Allocation group reference https://docs.cast.ai/docs/allocation-groups
        name: castai_allocation_group
        title: castai_allocation_group Resource - terraform-provider-castai
        examples:
            - name: ag_example
              manifest: |-
                {
                  "cluster_ids": [
                    "1a58d6b4-bc0e-4417-b9c7-31d15c313f3f",
                    "d204b988-5db5-472e-a258-bf763a0f4a93"
                  ],
                  "labels": {
                    "app.kubernetes.io/name": "app-name",
                    "environment": "production",
                    "team": "my-team"
                  },
                  "labels_operator": "AND",
                  "name": "ag_example",
                  "namespaces": [
                    "namespace-a",
                    "namespace-b"
                  ]
                }
        argumentDocs:
            cluster_ids: (Set of String) List of CAST AI cluster ids
            id: (String) The ID of this resource.
            labels: (Map of String) Labels used to select workloads to track
            labels_operator: |-
                (String) Operator with which to connect the labels
                OR (default) - workload needs to have at least one label to be included
                AND - workload needs to have all the labels to be included
            name: (String) Allocation group name
            namespaces: (List of String) List of cluster namespaces to track
        importStatements:
            - |-
              # Importing via direct allocation group ID is also possible.
              # Will use the default organization ID, that is associated with the API token.
              terraform import 'castai_allocation_group.my_allocation_group' e5ee784d-2c4b-4820-ab4e-16e4b81534a4
    castai_autoscaler:
        subCategory: ""
        description: CAST AI autoscaler resource to manage autoscaler settings
        name: castai_autoscaler
        title: castai_autoscaler Resource - terraform-provider-castai
        examples:
            - name: castai_autoscaler_policy
              manifest: |-
                {
                  "autoscaler_settings": [
                    {
                      "cluster_limits": [
                        {
                          "cpu": [
                            {
                              "max_cores": 10,
                              "min_cores": 1
                            }
                          ],
                          "enabled": true
                        }
                      ],
                      "enabled": true,
                      "is_scoped_mode": false,
                      "node_downscaler": [
                        {
                          "empty_nodes": [
                            {
                              "delay_seconds": 90,
                              "enabled": true
                            }
                          ],
                          "enabled": true,
                          "evictor": [
                            {
                              "aggressive_mode": false,
                              "cycle_interval": "60s",
                              "dry_run": false,
                              "enabled": true,
                              "ignore_pod_disruption_budgets": false,
                              "node_grace_period_minutes": 10,
                              "pod_eviction_failure_back_off_interval": "30s",
                              "scoped_mode": false
                            }
                          ]
                        }
                      ],
                      "node_templates_partial_matching_enabled": false,
                      "unschedulable_pods": [
                        {
                          "enabled": true
                        }
                      ]
                    }
                  ],
                  "cluster_id": "${castai_eks_cluster.test.id}"
                }
              references:
                cluster_id: castai_eks_cluster.test.id
        argumentDocs:
            aggressive_mode: (Boolean) enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
            autoscaler_policies: (String) computed value to store full policies configuration
            autoscaler_policies_json: (String, Deprecated) autoscaler policies JSON string to override current autoscaler settings
            autoscaler_settings: '(Block List, Max: 1) autoscaler policy definitions to override current autoscaler settings (see below for nested schema)'
            cluster_id: (String) CAST AI cluster id
            cluster_limits: '(Block List, Max: 1) defines minimum and maximum amount of CPU the cluster can have. (see below for nested schema)'
            cpu: '(Block List, Max: 1) defines the minimum and maximum amount of CPUs for cluster''s worker nodes. (see below for nested schema)'
            cpu_percentage: (Number) defines percentage of additional CPU capacity to be added.
            create: (String)
            custom_instances_enabled: (Boolean, Deprecated) enable/disable custom instances policy.
            cycle_interval: (String) configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
            delay_seconds: (Number) period (in seconds) to wait before removing the node. Might be useful to control the aggressiveness of the downscaler.
            dry_run: (Boolean) enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
            empty_nodes: '(Block List, Max: 1) defines whether Node Downscaler should opt in for removing empty worker nodes when possible. (see below for nested schema)'
            enabled: (Boolean) enable/disable autoscaler policies
            evictor: '(Block List, Max: 1) defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for ways to compact them into fewer nodes, making nodes empty, which will be removed by the empty worker nodes policy. (see below for nested schema)'
            headroom: '(Block List, Max: 1, Deprecated) additional headroom based on cluster''s total available capacity for on-demand nodes. (see below for nested schema)'
            headroom_spot: '(Block List, Max: 1, Deprecated) additional headroom based on cluster''s total available capacity for spot nodes. (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_pod_disruption_budgets: (Boolean) if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
            is_scoped_mode: (Boolean) run autoscaler in scoped mode. Only marked pods and nodes will be considered.
            max_cores: (Number) defines the maximum allowed amount of vCPUs in the whole cluster.
            max_cpu_cores: (Number) defines max CPU cores for the node to pick.
            max_ram_mib: (Number) defines max RAM in MiB for the node to pick.
            max_reclaim_rate: (Number, Deprecated) max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
            memory_percentage: (Number) defines percentage of additional memory capacity to be added.
            min_cores: (Number) defines the minimum allowed amount of CPUs in the whole cluster.
            min_cpu_cores: (Number) defines min CPU cores for the node to pick.
            min_ram_mib: (Number) defines min RAM in MiB for the node to pick.
            node_constraints: '(Block List, Max: 1, Deprecated) defines the node constraints that will be applied when autoscaling with Unschedulable Pods policy. (see below for nested schema)'
            node_downscaler: '(Block List, Max: 1) node downscaler defines policies for removing nodes based on the configured conditions. (see below for nested schema)'
            node_grace_period_minutes: (Number) configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
            node_templates_partial_matching_enabled: (Boolean) marks whether partial matching should be used when deciding which custom node template to select.
            pod_eviction_failure_back_off_interval: (String) configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
            pod_pinner: '(Block List, Max: 1) defines the Cast AI Pod Pinner components settings. (see below for nested schema)'
            scoped_mode: (Boolean) enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
            spot_backup_restore_rate_seconds: (Number) defines interval on how often spot backups restore to real spot should occur.
            spot_backups: '(Block List, Max: 1, Deprecated) policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available. (see below for nested schema)'
            spot_diversity_enabled: (Boolean, Deprecated) enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
            spot_diversity_price_increase_limit: (Number, Deprecated) allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
            spot_instances: '(Block List, Max: 1, Deprecated) policy defining whether autoscaler can use spot instances for provisioning additional workloads. (see below for nested schema)'
            spot_interruption_predictions: '(Block List, Max: 1, Deprecated) configure the handling of SPOT interruption predictions. (see below for nested schema)'
            spot_interruption_predictions_type: (String) define the type of the spot interruption prediction to handle. Allowed values are AWSRebalanceRecommendations, CASTAIInterruptionPredictions.
            timeouts: (Block, Optional) (see below for nested schema)
            unschedulable_pods: '(Block List, Max: 1) policy defining autoscaler''s behavior when unschedulable pods were detected. (see below for nested schema)'
            update: (String)
        importStatements: []
    castai_commitments:
        subCategory: ""
        description: Commitments represent cloud service provider reserved instances (Azure) and commited use discounts (GCP) that can be used by CAST AI autoscaler.
        name: castai_commitments
        title: castai_commitments Resource - terraform-provider-castai
        examples:
            - name: gcp_test
              manifest: |-
                {
                  "commitment_configs": [
                    {
                      "allowed_usage": 0.6,
                      "assignments": [
                        {
                          "cluster_id": "cluster-id-1"
                        },
                        {
                          "cluster_id": "cluster-id-2"
                        }
                      ],
                      "matcher": [
                        {
                          "name": "test",
                          "region": "us-east4",
                          "type": "COMPUTE_OPTIMIZED_C2D"
                        }
                      ],
                      "prioritization": true,
                      "scaling_strategy": "Default",
                      "status": "Inactive"
                    }
                  ],
                  "gcp_cuds_json": "${file(\"./cuds.json\")}"
                }
            - name: azure_test
              manifest: |-
                {
                  "azure_reservations_csv": "${file(\"./reservations.csv\")}",
                  "commitment_configs": [
                    {
                      "allowed_usage": 0.9,
                      "assignments": [
                        {
                          "cluster_id": "cluster-id-3"
                        },
                        {
                          "cluster_id": "cluster-id-4"
                        }
                      ],
                      "matcher": [
                        {
                          "name": "test-res-1",
                          "region": "eastus",
                          "type": "Standard_D32as_v4"
                        }
                      ],
                      "prioritization": false,
                      "scaling_strategy": "Default",
                      "status": "Active"
                    }
                  ]
                }
        argumentDocs:
            allowed_usage: (Number) Allowed usage of the commitment. The value is between 0 (0%) and 1 (100%).
            assignments: (Block List) List of assigned clusters for the commitment. If prioritization is enabled, the order of the assignments indicates the priority. The first assignment has the highest priority. (see below for nested schema)
            azure_reservations: (List of Object) List of Azure reservations. (see below for nested schema)
            azure_reservations_csv: (String) CSV file containing reservations exported from Azure.
            cluster_id: (String) ID of the cluster to assign the commitment to.
            commitment_configs: (Block List) List of commitment configurations. (see below for nested schema)
            count: (Number)
            cpu: (Number)
            create: (String)
            cud_id: (String)
            cud_status: (String)
            end_timestamp: (String)
            gcp_cuds: (List of Object) List of GCP CUDs. (see below for nested schema)
            gcp_cuds_json: (String) JSON file containing CUDs exported from GCP.
            id: (String) The ID of this resource.
            instance_type: (String)
            matcher: '(Block List, Min: 1, Max: 1) Matcher used to map config to a commitment. (see below for nested schema)'
            memory_mb: (Number)
            name: (String) Name of the commitment to match.
            plan: (String)
            prioritization: (Boolean) If enabled, it's possible to assign priorities to the assigned clusters.
            priority: (Number) Priority of the assignment. The lower the value, the higher the priority. 1 is the highest priority.
            region: (String) Region of the commitment to match.
            reservation_id: (String)
            reservation_status: (String)
            scaling_strategy: '(String) Scaling strategy of the commitment in CAST AI. One of: Default, CPUBased, RamBased'
            scope: (String)
            scope_resource_group: (String)
            scope_subscription: (String)
            start_timestamp: (String)
            status: (String) Status of the commitment in CAST AI.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the commitment to match. For compute resources, it's the type of the machine.
            update: (String)
        importStatements: []
    castai_eks_cluster:
        subCategory: ""
        description: EKS cluster resource allows connecting an existing EKS cluster to CAST AI.
        name: castai_eks_cluster
        title: castai_eks_cluster Resource - terraform-provider-castai
        examples:
            - name: this
              manifest: |-
                {
                  "account_id": "${data.aws_caller_identity.current.account_id}",
                  "assume_role_arn": "${module.castai-eks-role-iam.role_arn}",
                  "delete_nodes_on_disconnect": "${var.delete_nodes_on_disconnect}",
                  "name": "${data.aws_eks_cluster.eks.id}",
                  "region": "${var.aws_cluster_region}"
                }
              references:
                account_id: data.aws_caller_identity.current.account_id
                assume_role_arn: module.castai-eks-role-iam.role_arn
                delete_nodes_on_disconnect: var.delete_nodes_on_disconnect
                name: data.aws_eks_cluster.eks.id
                region: var.aws_cluster_region
        argumentDocs:
            account_id: (String) ID of AWS account
            assume_role_arn: (String) AWS IAM role ARN that will be assumed by CAST AI user. This role should allow sts:AssumeRole action for CAST AI user that can be retrieved using castai_eks_user_arn data source
            cluster_token: (String, Sensitive) computed value to store cluster token
            create: (String)
            credentials_id: (String) CAST AI internal credentials ID
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST AI on disconnect
            id: (String) The ID of this resource.
            name: (String) name of your EKS cluster
            region: (String) AWS region where the cluster is placed
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_eks_clusterid:
        subCategory: ""
        description: Retrieve CAST AI clusterid
        name: castai_eks_clusterid
        title: castai_eks_clusterid Resource - terraform-provider-castai
        examples:
            - name: cluster_id
              manifest: |-
                {
                  "account_id": "${data.aws_caller_identity.current.account_id}",
                  "cluster_name": "${var.cluster_name}",
                  "region": "${var.cluster_region}"
                }
              references:
                account_id: data.aws_caller_identity.current.account_id
                cluster_name: var.cluster_name
                region: var.cluster_region
        argumentDocs:
            account_id: (String)
            cluster_name: (String)
            id: (String) The ID of this resource.
            region: (String)
        importStatements: []
    castai_eks_user_arn:
        subCategory: ""
        description: Retrieve EKS Cluster User ARN
        name: castai_eks_user_arn
        title: castai_eks_user_arn Resource - terraform-provider-castai
        examples:
            - name: castai_user_arn
              manifest: |-
                {
                  "cluster_id": "${castai_eks_clusterid.cluster_id.id}"
                }
              references:
                cluster_id: castai_eks_clusterid.cluster_id.id
        argumentDocs:
            arn: (String)
            cluster_id: (String)
            id: (String) The ID of this resource.
        importStatements: []
    castai_enterprise_group Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI Enterprise Group resource.
        name: castai_enterprise_group Resource - terraform-provider-castai
        title: castai_enterprise_group Resource - terraform-provider-castai
        argumentDocs:
            cluster: (String) Cluster ID scope.
            create: (String)
            delete: (String)
            description: (String) Description of the group.
            enterprise_id: (String) Enterprise organization ID.
            id: (String) Group ID assigned by the API.
            kind: '(String) Kind of the member. Supported values: user, service_account.'
            member: (Block List) Group member configuration. (see below for nested schema)
            members: (Block List) List of group members. (see below for nested schema)
            name: (String) Name of the group.
            organization: (String) Organization ID scope.
            organization_id: (String) Target organization ID for the group.
            role_binding: (Block List) Role binding configuration. (see below for nested schema)
            role_bindings: (Block List) List of role bindings for the group. (see below for nested schema)
            role_id: (String) Role UUID.
            scope: (Block List) Scope configuration. (see below for nested schema)
            scopes: '(Block List, Min: 1) List of scopes for the role binding. (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_evictor_advanced_config:
        subCategory: ""
        description: CAST AI eviction config resource to manage evictor properties
        name: castai_evictor_advanced_config
        title: castai_evictor_advanced_config Resource - terraform-provider-castai
        examples:
            - name: config
              manifest: |-
                {
                  "cluster_id": "${castai_eks_cluster.test.id}",
                  "evictor_advanced_config": [
                    {
                      "aggressive": true,
                      "pod_selector": [
                        {
                          "kind": "Job",
                          "match_labels": {
                            "job": "test"
                          },
                          "namespace": "test"
                        }
                      ]
                    }
                  ]
                }
              references:
                cluster_id: castai_eks_cluster.test.id
        argumentDocs:
            aggressive: (Boolean) Apply Aggressive mode to Evictor
            cluster_id: (String) CAST AI cluster id.
            create: (String)
            disposable: (Boolean) Mark node as disposable
            evictor_advanced_config: '(Block List, Min: 1) evictor advanced configuration to target specific node/pod (see below for nested schema)'
            id: (String) The ID of this resource.
            key: (String)
            kind: (String)
            match_expressions: (Block List) (see below for nested schema)
            match_labels: (Map of String)
            namespace: (String)
            node_selector: (Block List) node selector (see below for nested schema)
            operator: (String)
            pod_selector: (Block List) pod selector (see below for nested schema)
            removal_disabled: (Boolean) Mark pods as removal disabled
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            values: (List of String)
        importStatements: []
    castai_gke_cluster:
        subCategory: ""
        description: GKE cluster resource allows connecting an existing GKE cluster to CAST AI.
        name: castai_gke_cluster
        title: castai_gke_cluster Resource - terraform-provider-castai
        examples:
            - name: this
              manifest: |-
                {
                  "credentials_json": "${var.gke_credentials}",
                  "delete_nodes_on_disconnect": "${var.delete_nodes_on_disconnect}",
                  "location": "${module.gke.location}",
                  "name": "${var.gke_cluster_name}",
                  "project_id": "${var.project_id}"
                }
              references:
                credentials_json: var.gke_credentials
                delete_nodes_on_disconnect: var.delete_nodes_on_disconnect
                location: module.gke.location
                name: var.gke_cluster_name
                project_id: var.project_id
        argumentDocs:
            cluster_token: (String, Sensitive) CAST.AI agent cluster token
            create: (String)
            credentials_id: (String) CAST AI credentials id for cluster
            credentials_json: (String, Sensitive) GCP credentials.json from ServiceAccount with credentials for CAST AI
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST.AI on disconnect
            id: (String) The ID of this resource.
            location: (String) GCP cluster zone in case of zonal or region in case of regional cluster
            name: (String) GKE cluster name
            project_id: (String) GCP project id
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_gke_cluster_id Resource - terraform-provider-castai:
        subCategory: ""
        description: GKE cluster resource allows connecting an existing GKE cluster to CAST AI.
        name: castai_gke_cluster_id Resource - terraform-provider-castai
        title: castai_gke_cluster_id Resource - terraform-provider-castai
        argumentDocs:
            cast_service_account: (String) Service account email in cast project
            client_service_account: (String) Service account email in client project
            cluster_token: (String, Sensitive) CAST.AI agent cluster token
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            location: (String) GCP cluster zone in case of zonal or region in case of regional cluster
            name: (String) GKE cluster name
            project_id: (String) GCP project id
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_hibernation_schedule:
        subCategory: ""
        description: CAST AI hibernation schedule resource to manage hibernation schedules.
        name: castai_hibernation_schedule
        title: castai_hibernation_schedule Resource - terraform-provider-castai
        examples:
            - name: my_schedule
              manifest: |-
                {
                  "cluster_assignments": [
                    {
                      "assignment": [
                        {
                          "cluster_id": "38a49ce8-e900-4a10-be89-48fb2efb1025"
                        }
                      ]
                    }
                  ],
                  "enabled": false,
                  "name": "workday",
                  "pause_config": [
                    {
                      "enabled": true,
                      "schedule": [
                        {
                          "cron_expression": "0 17 * * 1-5"
                        }
                      ]
                    }
                  ],
                  "resume_config": [
                    {
                      "enabled": true,
                      "job_config": [
                        {
                          "node_config": [
                            {
                              "instance_type": "e2-standard-4"
                            }
                          ]
                        }
                      ],
                      "schedule": [
                        {
                          "cron_expression": "0 9 * * 1-5"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            CRON_TZ: variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
            affinity: (Block List) (see below for nested schema)
            assignment: (Block List) (see below for nested schema)
            chunk_size_kb: (Number) Specify the RAID0 chunk size in kilobytes, this parameter affects the read/write in the disk array and must be tailored for the type of data written by the workloads in the node. If not provided it will default to 64KB
            cluster_assignments: '(Block List, Max: 1) (see below for nested schema)'
            cluster_id: (String) ID of the cluster.
            config_id: (String) ID reference of Node Configuration to be used for node creation. Supersedes 'config_name' parameter.
            config_name: (String) Name reference of Node Configuration to be used for node creation. Superseded if 'config_id' parameter is provided.
            count: (Number) Number of GPUs.
            create: (String)
            cron: expression can optionally include the CRON_TZ variable at the beginning to specify the timezone in which the schedule should be interpreted.
            cron_expression: (String) Cron expression defining when the schedule should trigger.
            dedicated_group: (String) Key of a taint to be added to nodes created from this template.
            delete: (String)
            effect: '(String) Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.'
            enabled: (Boolean) Enables or disables the schedule.
            gpu_config: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            instance_type: (String) Instance type.
            job_config: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            key: (String) Key of a taint to be added to nodes created from this template.
            kubernetes_labels: (Map of String) Custom labels to be added to the node.
            kubernetes_taints: (Block List) Custom taints to be added to the node created from this configuration. (see below for nested schema)
            name: (String) Name of the schedule.
            node_affinity: (Block List) Custom taints to be added to the node created from this configuration. (see below for nested schema)
            node_config: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            operator: '(String) Operator of the node affinity selector. Allowed values: DOES_NOT_EXIST, EXISTS, GT, IN, LT, NOT_IN.'
            organization_id: (String) ID of the organization. If not provided, then will attempt to infer it using CAST AI API client.
            pause_config: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            price_hourly: (String) Spot instance price. Applicable only for AWS nodes.
            raid_config: (Block List) (see below for nested schema)
            read: (String)
            resume_config: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            schedule: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            size_gib: (Number) Volume size in GiB.
            spot: (Boolean) Whether node should be created as spot instance.
            spot_config: (Block List) Custom taints to be added to the node created from this configuration. (see below for nested schema)
            subnet_id: (String) Node subnet ID.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) GPU type.
            update: (String)
            value: (String) Value of a taint to be added to nodes created from this template.
            values: (List of String) Values of the node affinity selector.
            volume: (Block List) (see below for nested schema)
            zone: (String) Zone of the node.
        importStatements:
            - |-
              # Associate terraform resource "my_schedule" with a hibernation schedule named "workday".
              # Will use the default organization ID, that is associated with the API token.
              terraform import 'castai_hibernation_schedule.my_schedule' workday

              # Importing via direct schedule ID is also possible.
              # Will use the default organization ID, that is associated with the API token.
              terraform import 'castai_hibernation_schedule.my_schedule' e5ee784d-2c4b-4820-ab4e-16e4b81534a4

              # Import using organization ID and schedule name/ID in format <organization id>/<schedule id|schedule name>.
              terraform import 'castai_hibernation_schedule.my_schedule' 63895dfe-dc8b-49b6-959c-3f3545de525a/workday
    castai_node_configuration:
        subCategory: ""
        description: Create node configuration for given cluster. Node configuration reference https://docs.cast.ai/docs/node-configuration
        name: castai_node_configuration
        title: castai_node_configuration Resource - terraform-provider-castai
        examples:
            - name: default
              manifest: |-
                {
                  "cluster_id": "${castai_eks_cluster.test.id}",
                  "container_runtime": "dockerd",
                  "disk_cpu_ratio": 35,
                  "docker_config": "${jsonencode({\n    \"insecure-registries\"      = [\"registry.com:5000\"],\n    \"max-concurrent-downloads\" = 10\n  })}",
                  "eks": [
                    {
                      "dns_cluster_ip": "10.100.0.10",
                      "instance_profile_arn": "${aws_iam_instance_profile.test.arn}",
                      "security_groups": [
                        "${aws_security_group.test.id}"
                      ]
                    }
                  ],
                  "init_script": "${base64encode(var.init_script)}",
                  "kubelet_config": "${jsonencode({\n    \"registryBurst\" : 20,\n    \"registryPullQPS\" : 10\n  })}",
                  "min_disk_size": 133,
                  "name": "default",
                  "subnets": "${aws_subnet.test[*].id}",
                  "tags": {
                    "env": "development"
                  }
                }
              references:
                cluster_id: castai_eks_cluster.test.id
                eks.instance_profile_arn: aws_iam_instance_profile.test.arn
            - name: default
              manifest: '{}'
        argumentDocs:
            aks: '(Block List, Max: 1) (see below for nested schema)'
            aks_image_family: '(String) Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux,windows2019,windows2022)'
            application_security_groups: (List of String) Application security groups to be used for provisioned nodes
            arn: (String) AWS target group ARN for CAST provisioned nodes
            cache: '(String) Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite'
            cluster_id: (String) CAST AI cluster id
            container_runtime: '(String) Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: dockerd, containerd'
            create: (String)
            delete: (String)
            disk_cpu_ratio: (Number) Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
            disk_type: '(String) Type of boot disk attached to the node. (See disk types). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme'
            dns_cluster_ip: (String) IP address to use for DNS queries within the cluster
            docker_config: (String) Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. Available values
            drain_timeout_sec: (Number) Timeout in seconds for draining the node. Defaults to 0
            eks: '(Block List, Max: 1) (see below for nested schema)'
            eks_image_family: '(String) Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)'
            ephemeral_os_disk: '(Block List, Max: 1) Ephemeral OS disk configuration for CAST provisioned nodes (see below for nested schema)'
            gke: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            idle_timeout_in_minutes: (Number) Idle timeout in minutes for public IP
            image: (String) Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
            imds_hop_limit: (Number) Allow configure the IMDSv2 hop limit, the default is 2
            imds_v1: (Boolean) When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
            init_script: (String) Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
            instance_profile_arn: (String) Cluster's instance profile ARN used for CAST provisioned nodes
            ip_based_backend_pools: (Block List) IP based backend pools configuration for CAST provisioned nodes (see below for nested schema)
            ips_per_prefix: (Number) Number of IPs per prefix to be used for calculating max pods.
            key_pair_id: (String) AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
            kops: '(Block List, Max: 1) (see below for nested schema)'
            kubelet_config: (String) Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. Available values
            loadbalancers: (Block List) Load balancer configuration for CAST provisioned nodes (see below for nested schema)
            max_pods_per_node: (Number) Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
            max_pods_per_node_formula: '(String) Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .'
            min_disk_size: (Number) Minimal disk size in GiB. Defaults to 100, min 30, max 65536
            name: (String) Name of the node configuration. It must be unique within the cluster. In case of cluster is reonboarded to Terraform, when previously it was onboarded with CAST AI UI, and the name corresponds to previously created node configuration this resource will override existing configuration instead of creating new.
            network_security_group: (String) Network security group to be used for provisioned nodes, if not provided default security group from castpool will be used
            network_tags: (List of String) Network tags to be added on a VM. (See network tags)
            nic_based_backend_pools: (Block List) NIC based backend pools configuration for CAST provisioned nodes. (see below for nested schema)
            node_group_arn: (String) Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
            on_host_maintenance: (String) Maintenance behavior of the instances. If not set, the default value for spot nodes is terminate, and for non-spot nodes, it is migrate.
            os_disk_type: '(String) Type of managed os disk attached to the node. (See disk types). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)'
            placement: '(String) Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk'
            pod_subnet_id: (String) ID of pod subnet to be used for provisioned nodes.
            port: (Number) Port for AWS target group for CAST provisioned nodes
            public_ip: '(Block List, Max: 1) Public IP configuration for CAST AI provisioned nodes (see below for nested schema)'
            public_ip_prefix: (String) Public IP prefix to be used for provisioned nodes
            range_name: (String) Name of the secondary IP range
            read: (String)
            secondary_ip_range: '(Block List, Max: 1) Secondary IP range configuration for pods in GKE nodes (see below for nested schema)'
            security_groups: (List of String) Cluster's security groups configuration for CAST provisioned nodes
            ssh_public_key: (String) SSH public key to be used for provisioned nodes
            subnets: (List of String) Subnet ids to be used for provisioned nodes
            tags: (Map of String) Tags to be added on cloud instances for provisioned nodes
            target_backend_pools: (Block List) Target backend pools configuration for CAST provisioned nodes (see below for nested schema)
            target_group: (Block List) AWS target groups configuration for CAST provisioned nodes (see below for nested schema)
            threads_per_cpu: (Number) Number of threads per core.
            timeouts: (Block, Optional) (see below for nested schema)
            unmanaged_instance_groups: (Block List) Unmanaged instance groups configuration for CAST provisioned nodes (see below for nested schema)
            update: (String)
            use_ephemeral_storage_local_ssd: (Boolean) Use ephemeral storage local SSD. Defaults to false
            volume_iops: (Number) AWS EBS volume IOPS to be used for CAST provisioned nodes
            volume_kms_key_arn: (String) AWS KMS key ARN for encrypting EBS volume attached to the node
            volume_throughput: (Number) AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
            volume_type: '(String) AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2'
            zone: (String) Zone of the instance group
            zones: (List of String, Deprecated) List of preferred availability zones to choose from when provisioning new nodes.
        importStatements:
            - $ terraform import castai_node_configuration.default <cluster_id>/default
            - $ terraform import 'module.castai-eks-cluster.castai_node_configuration.this["default"]' <cluster_id>/default
    castai_node_configuration_default:
        subCategory: ""
        name: castai_node_configuration_default
        title: castai_node_configuration_default Resource - terraform-provider-castai
        examples:
            - name: test
              manifest: |-
                {
                  "cluster_id": "${castai_eks_cluster.test.id}",
                  "configuration_id": "${castai_node_configuration.test.id}"
                }
              references:
                cluster_id: castai_eks_cluster.test.id
                configuration_id: castai_node_configuration.test.id
        argumentDocs:
            cluster_id: (String) CAST AI cluster id
            configuration_id: (String) Id of the node configuration
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    castai_node_template:
        subCategory: ""
        description: CAST AI node template resource to manage node templates
        name: castai_node_template
        title: castai_node_template Resource - terraform-provider-castai
        examples:
            - name: default_by_castai
              manifest: |-
                {
                  "cluster_id": "${castai_eks_cluster.test.id}",
                  "configuration_id": "${castai_node_configuration.default.id}",
                  "constraints": [
                    {
                      "architectures": [
                        "amd64"
                      ],
                      "azs": [
                        "us-east-2a",
                        "us-east-2b"
                      ],
                      "burstable_instances": "disabled",
                      "compute_optimized_state": "disabled",
                      "custom_priority": [
                        {
                          "instance_families": [
                            "c5"
                          ],
                          "on_demand": true,
                          "spot": false
                        }
                      ],
                      "customer_specific": "disabled",
                      "fallback_restore_rate_seconds": 300,
                      "instance_families": [
                        {
                          "include": [
                            "c5"
                          ]
                        }
                      ],
                      "is_gpu_only": false,
                      "max_cpu": 8,
                      "max_memory": 16384,
                      "min_cpu": 2,
                      "min_memory": 4096,
                      "on_demand": true,
                      "spot": false,
                      "spot_interruption_predictions_enabled": true,
                      "spot_interruption_predictions_type": "aws-rebalance-recommendations",
                      "spot_reliability_enabled": true,
                      "spot_reliability_price_increase_limit_percent": 20,
                      "storage_optimized_state": "disabled",
                      "use_spot_fallbacks": true
                    }
                  ],
                  "custom_labels": {
                    "env": "production"
                  },
                  "custom_taints": [
                    {
                      "effect": "NoSchedule",
                      "key": "dedicated",
                      "value": "backend"
                    }
                  ],
                  "is_default": true,
                  "is_enabled": true,
                  "name": "default-by-castai",
                  "should_taint": true
                }
              references:
                cluster_id: castai_eks_cluster.test.id
                configuration_id: castai_node_configuration.default.id
        argumentDocs:
            affinity: (Block List) (see below for nested schema)
            architecture_priority: '(List of String) Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.'
            architectures: '(List of String) List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.'
            az_name: (String) Availability zone name.
            azs: (List of String) The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
            bare_metal: '(String) Bare metal constraint, will only pick bare metal nodes if set to true. Will only pick non-bare metal nodes if false. Defaults to unspecified. Allowed values: true, false, unspecified.'
            burstable_instances: '(String) Will include burstable instances when enabled otherwise they will be excluded. Supported values: enabled, disabled or ``.'
            clm_enabled: (Boolean) Marks whether CLM should be enabled for nodes created from this template.
            cluster_id: (String) CAST AI cluster id.
            compute_optimized: (Boolean) Compute optimized instance constraint (deprecated).
            compute_optimized_state: '(String) Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won''t have effect on instances filter. Supported values: enabled, disabled or empty string.'
            configuration_id: (String) CAST AI node configuration id to be used for node template.
            constraints: '(Block List, Max: 1) (see below for nested schema)'
            cpu_limit_enabled: (Boolean) Controls CPU limit enforcement for the node template.
            cpu_limit_max_cores: (Number) Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
            cpu_manufacturers: '(List of String) List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.'
            create: (String)
            custom_instances_enabled: (Boolean) Marks whether custom instances should be used when deciding which parts of inventory are available. Custom instances are only supported in GCP.
            custom_instances_with_extended_memory_enabled: (Boolean) Marks whether custom instances with extended memory should be used when deciding which parts of inventory are available. Custom instances are only supported in GCP.
            custom_labels: (Map of String) Custom labels to be added to nodes created from this template.
            custom_priority: (Block List) (see below for nested schema)
            custom_taints: (Block List) Custom taints to be added to the nodes created from this template. shouldTaint has to be true in order to create/update the node template with custom taints. If shouldTaint is true, but no custom taints are provided, the nodes will be tainted with the default node template taint. (see below for nested schema)
            customer_specific: '(String) Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: enabled, disabled or ``.'
            dedicated_node_affinity: |-
                (Block List) Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
                feature is only available for GCP clusters and sole tenancy nodes with local
                SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
                type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
                Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
                the sole tenancy or dedicated node (example: setting min CPU to 16). (see below for nested schema)
            default_shared_clients_per_gpu: (Number) Defines default number of shared clients per GPU.
            delete: (String)
            effect: '(String) Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.'
            enable_spot_diversity: (Boolean) Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
            enable_time_sharing: (Boolean) Enable/disable GPU time-sharing.
            exclude: (List of String) Instance families to exclude when filtering (includes all other families).
            exclude_names: (List of String) Names of the GPUs to exclude.
            fallback_restore_rate_seconds: '(Number) Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.'
            gpu: '(Block List, Max: 1) GPU configuration. (see below for nested schema)'
            gpu_name: (String) GPU name.
            id: (String) The ID of this resource.
            include: (List of String) Instance families to include when filtering (excludes all other families).
            include_names: (List of String) Instance families to include when filtering (excludes all other families).
            instance_families: '(Block List, Max: 1) (see below for nested schema)'
            instance_types: (List of String) Instance/node types in this node group.
            is_default: (Boolean) Flag whether the node template is default.
            is_enabled: (Boolean) Flag whether the node template is enabled and considered for autoscaling.
            is_gpu_only: (Boolean) GPU instance constraint - will only pick nodes with GPU if true
            key: (String) Key of the node affinity selector.
            manufacturers: (List of String) Manufacturers of the gpus to select - NVIDIA, AMD.
            max_count: (Number) Max GPU count for the instance type to have.
            max_cpu: (Number) Max CPU cores per node.
            max_memory: (Number) Max Memory (Mib) per node.
            min_count: (Number) Min GPU count for the instance type to have.
            min_cpu: (Number) Min CPU cores per node.
            min_memory: (Number) Min Memory (Mib) per node.
            name: (String) Name of the node template.
            on_demand: (Boolean) Should include on-demand instances in the considered pool.
            operator: '(String) Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.'
            os: '(List of String) List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.'
            read: (String)
            rebalancing_config_min_nodes: (Number) Minimum nodes that will be kept when rebalancing nodes using this node template.
            resource_limits: '(Block List, Max: 1) (see below for nested schema)'
            shared_clients_per_gpu: (Number) Defines number of shared clients for specific GPU device.
            sharing_configuration: (Block List) Defines GPU sharing configurations for GPU devices. (see below for nested schema)
            should_taint: (Boolean) Marks whether the templated nodes will have a taint.
            spot: (Boolean) Should include spot instances in the considered pool.
            spot_diversity_price_increase_limit_percent: (Number) Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
            spot_interruption_predictions_enabled: (Boolean) Enable/disable spot interruption predictions.
            spot_interruption_predictions_type: (String) Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
            spot_reliability_enabled: (Boolean) Enable/disable spot reliability. When enabled, autoscaler will create instances with highest reliability score within price increase threshold.
            spot_reliability_price_increase_limit_percent: (Number) Allowed node price increase when using spot reliability on ordering the instance types . E.g. if the value is 10%, then the overall price of instance types can be 10% higher than the price of the optimal configuration.
            storage_optimized: (Boolean) Storage optimized instance constraint (deprecated).
            storage_optimized_state: '(String) Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won''t pick if disabled. Empty value will have no effect. Supported values: enabled, disabled or empty string.'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            use_spot_fallbacks: (Boolean) Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
            value: (String) Value of a taint to be added to nodes created from this template.
            values: (List of String) Values of the node affinity selector.
        importStatements:
            - |-
              # Import node template by specifying cluster ID and node template name.
              terraform import castai_node_template.default_by_castai 105e6fa3-20b1-424e-v589-9a64d1eeabea/default-by-castai
    castai_organization_group:
        subCategory: ""
        description: CAST AI organization group resource to manage organization groups
        name: castai_organization_group
        title: castai_organization_group Resource - terraform-provider-castai
        examples:
            - name: first_group
              manifest: |-
                {
                  "description": "A description of the first group.",
                  "members": [
                    {
                      "member": [
                        {
                          "email": "first-user@cast.ai",
                          "id": "21c133e2-a899-4f51-b297-830bc62e51d6",
                          "kind": "user"
                        },
                        {
                          "email": "second-user@cast.ai",
                          "id": "21c133e2-a899-4f51-b297-830bc62e51d7",
                          "kind": "user"
                        },
                        {
                          "email": "service_account-2@cast.ai",
                          "id": "21c133e2-a899-4f51-b297-830bc62e51d9",
                          "kind": "service_account"
                        }
                      ]
                    }
                  ],
                  "name": "first-group",
                  "organization_id": "${data.castai_organization.test.id}"
                }
              references:
                organization_id: data.castai_organization.test.id
            - name: second_group
              manifest: |-
                {
                  "description": "A description of the second group.",
                  "members": [
                    {
                      "member": [
                        {
                          "email": "first-user@cast.ai",
                          "id": "21c133e2-a899-4f51-b297-830bc62e51d6",
                          "kind": "user"
                        }
                      ]
                    }
                  ],
                  "name": "second-group",
                  "organization_id": "${data.castai_organization.test.id}"
                }
              references:
                organization_id: data.castai_organization.test.id
        argumentDocs:
            create: (String)
            delete: (String)
            description: (String) Description of the group.
            email: (String)
            id: (String) The ID of this resource.
            kind: '(String) Kind of the member. Supported values include: user, service_account.'
            member: (Block List) (see below for nested schema)
            members: (Block List) (see below for nested schema)
            name: (String) Name of the group.
            organization_id: (String) CAST AI organization ID.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_organization_members:
        subCategory: ""
        description: CAST AI organization members resource to manage organization members
        name: castai_organization_members
        title: castai_organization_members Resource - terraform-provider-castai
        examples:
            - name: dev
              manifest: |-
                {
                  "members": [
                    "member@test.ai"
                  ],
                  "organization_id": "${data.castai_organization.dev.id}",
                  "owners": [
                    "owner@test.ai"
                  ],
                  "viewers": []
                }
              references:
                organization_id: data.castai_organization.dev.id
        argumentDocs:
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            members: (List of String, Deprecated) A list of email addresses corresponding to users who should be given member access to the organization.
            organization_id: (String) CAST AI organization ID.
            owners: (List of String, Deprecated) A list of email addresses corresponding to users who should be given owner access to the organization.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            viewers: (List of String, Deprecated) A list of email addresses corresponding to users who should be given viewer access to the organization.
        importStatements: []
    castai_rebalancing_job:
        subCategory: ""
        description: Job assigns a rebalancing schedule to a cluster.
        name: castai_rebalancing_job
        title: castai_rebalancing_job Resource - terraform-provider-castai
        examples:
            - name: spots
              manifest: |-
                {
                  "cluster_id": "${castai_eks_cluster.test.id}",
                  "enabled": true,
                  "rebalancing_schedule_id": "${castai_rebalancing_schedule.spots.id}"
                }
              references:
                cluster_id: castai_eks_cluster.test.id
                rebalancing_schedule_id: castai_rebalancing_schedule.spots.id
        argumentDocs:
            cluster_id: (String) CAST AI cluster id.
            create: (String)
            delete: (String)
            enabled: (Boolean) The job will only be executed if it's enabled.
            id: (String) The ID of this resource.
            read: (String)
            rebalancing_schedule_id: (String) Rebalancing schedule of this job.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - |-
              # Import jobs by specifying cluster ID and schedule name.
              # Schedule must be assigned to the cluster already for this command to succeed.
              terraform import 'castai_rebalancing_job.spots' 12345678-1762-45eb-bd4f-85cb172e6ad3/spots
    castai_rebalancing_schedule:
        subCategory: ""
        description: CAST AI rebalancing schedule resource to manage rebalancing schedules.
        name: castai_rebalancing_schedule
        title: castai_rebalancing_schedule Resource - terraform-provider-castai
        examples:
            - name: spots
              manifest: |-
                {
                  "launch_configuration": [
                    {
                      "execution_conditions": [
                        {
                          "achieved_savings_percentage": 10,
                          "enabled": true
                        }
                      ],
                      "keep_drain_timeout_nodes": false,
                      "node_ttl_seconds": 300,
                      "num_targeted_nodes": 3,
                      "rebalancing_min_nodes": 2,
                      "selector": "${jsonencode({\n      nodeSelectorTerms = [{\n        matchExpressions = [\n          {\n            key      = \"scheduling.cast.ai/spot\"\n            operator = \"Exists\"\n          }\n        ]\n      }]\n    })}"
                    }
                  ],
                  "name": "rebalance spots at every 30th minute",
                  "schedule": [
                    {
                      "cron": "*/30 * * * *"
                    }
                  ],
                  "trigger_conditions": [
                    {
                      "savings_percentage": 20
                    }
                  ]
                }
        argumentDocs:
            CRON_TZ: variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
            achieved_savings_percentage: (Number) The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
            aggressive_mode: (Boolean) When enabled rebalancing will also consider problematic pods (pods without controller, job pods, pods with removal-disabled annotation) as not-problematic.
            aggressive_mode_config: '(Block List, Max: 1) Advanced configuration for aggressive rebalancing mode. (see below for nested schema)'
            create: (String)
            cron: (String) Cron expression defining when the schedule should trigger.
            delete: (String)
            enabled: (Boolean) Enables or disables the execution conditions.
            execution_conditions: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_local_persistent_volumes: (Boolean) Rebalance workloads that use local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
            ignore_problem_job_pods: '(Boolean) Pods spawned by Jobs or CronJobs will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, pods spawned by Jobs or CronJobs will be terminated if the Rebalancer picks a node that runs them. As such, they are likely to lose their progress.'
            ignore_problem_pods_without_controller: '(Boolean) Pods that don''t have a controller (bare pods) will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods might not restart, since they have no controller to do it.'
            ignore_problem_removal_disabled_pods: '(Boolean) Pods that are marked with "removal disabled" will not prevent the Rebalancer from deleting a node on which they run. WARNING: When true, such pods will be evicted and disrupted.'
            ignore_savings: (Boolean) If true, the savings percentage will be ignored and the rebalancing will be triggered regardless of the savings percentage.
            keep_drain_timeout_nodes: (Boolean) Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
            launch_configuration: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            name: (String) Name of the schedule.
            node_ttl_seconds: (Number) Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
            num_targeted_nodes: (Number) Maximum number of nodes that will be selected for rebalancing.
            read: (String)
            rebalancing_min_nodes: (Number) Minimum number of nodes that should be kept in the cluster after rebalancing.
            savings_percentage: (Number) Defines the minimum percentage of savings expected.
            schedule: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            selector: (String) Node selector in JSON format.
            target_node_selection_algorithm: (String) Defines the algorithm used to select the target nodes for rebalancing.
            timeouts: (Block, Optional) (see below for nested schema)
            trigger_conditions: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            update: (String)
        importStatements:
            - |-
              # Associate terraform resource "spots" with a rebalancing schedule named "spots".
              terraform import 'castai_rebalancing_schedule.spots' spots

              # Importing via direct schedule ID is also possible.
              terraform import 'castai_rebalancing_schedule.spots' b4e69e0c-1762-45eb-bd4f-85cb172e6ad3
    castai_reservations:
        subCategory: ""
        description: Reservation represents cloud service provider reserved instances that can be used by CAST AI autoscaler.
        name: castai_reservations
        title: castai_reservations Resource - terraform-provider-castai
        examples:
            - name: test
              manifest: |-
                {
                  "reservations_csv": "${file(\"./reservations.csv\")}"
                }
        argumentDocs:
            count: (String) - amount of reserved instances
            create: (String)
            end_date: (String) - end date of reservation
            id: (String) The ID of this resource.
            instance_type: (String) - reserved instance type
            name: (String) - unique reservation name in region for specific instance type
            organization_id: (String) organization
            price: (String) - reservation price
            provider: (String) - reservation cloud provider (gcp, aws, azure)
            region: (String) - reservation region
            reservations: (List of Object) (see below for nested schema)
            reservations_csv: (String) csv file containing reservations
            start_date: (String) - start date of reservation
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            zone_id: (String) - reservation zone id
            zone_name: (String) - reservation zone name
        importStatements:
            - |-
              # Import reservations of an organization.
              terraform import 'castai_reservations.test' 5b046e29-e947-470f-9952-bfdf369ecca6
    castai_role_bindings:
        subCategory: ""
        description: CAST AI organization group resource to manage organization groups
        name: castai_role_bindings
        title: castai_role_bindings Resource - terraform-provider-castai
        examples:
            - name: owner_test
              manifest: |-
                {
                  "description": "Owner access for whole organization.",
                  "name": "Role binding owner",
                  "organization_id": "${data.castai_organization.test.id}",
                  "role_id": "3e1050c7-6593-4298-94bb-154637911d78",
                  "scopes": [
                    {
                      "kind": "organization",
                      "resource_id": "${data.castai_organization.test.id}"
                    }
                  ],
                  "subjects": [
                    {
                      "subject": [
                        {
                          "kind": "user",
                          "user_id": "21c133e2-a899-4f51-b297-830bc62e51d6"
                        },
                        {
                          "kind": "user",
                          "user_id": "0d1efe35-7ecb-4821-a52d-fd56c9710a64"
                        },
                        {
                          "group_id": "651734a7-0d0c-49f3-9654-dd92175febaa",
                          "kind": "group"
                        },
                        {
                          "kind": "service_account",
                          "service_account_id": "3bf49513-3e9c-4a12-962c-af3bb1a85074"
                        }
                      ]
                    }
                  ]
                }
              references:
                organization_id: data.castai_organization.test.id
                scopes.resource_id: data.castai_organization.test.id
            - name: viewer_test
              manifest: |-
                {
                  "description": "Viewer access for on of the clusters.",
                  "name": "Role binding viewer for cluster 7063d31c-897e-48ef-a322-bdfda6fdbcfb",
                  "organization_id": "${data.castai_organization.test.id}",
                  "role_id": "6fc95bd7-6049-4735-80b0-ce5ccde71cb1",
                  "scopes": [
                    {
                      "kind": "cluster",
                      "resource_id": "7063d31c-897e-48ef-a322-bdfda6fdbcfb"
                    },
                    {
                      "kind": "cluster",
                      "resource_id": "9872e54f-1122-33ef-b456-cdef98765432"
                    }
                  ],
                  "subjects": [
                    {
                      "subject": [
                        {
                          "kind": "user",
                          "user_id": "21c133e2-a899-4f51-b297-830bc62e51d6"
                        }
                      ]
                    }
                  ]
                }
              references:
                organization_id: data.castai_organization.test.id
        argumentDocs:
            create: (String)
            delete: (String)
            description: (String) Description of the role binding.
            group_id: (String) Optional, required only if kind is group.
            id: (String) The ID of this resource.
            kind: '(String) Kind of the subject. Supported values include: user, service_account, group.'
            name: (String) Name of role binding.
            organization_id: (String) CAST AI organization ID.
            resource_id: (String) ID of the scope resource.
            role_id: (String) ID of role from role binding.
            scopes: (Block List) Scopes of the role binding. (see below for nested schema)
            service_account_id: (String) Optional, required only if kind is service_account.
            subject: (Block List) (see below for nested schema)
            subjects: '(Block List, Min: 1) (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_id: (String) Optional, required only if kind is user.
        importStatements: []
    castai_security_runtime_rule Resource - terraform-provider-castai:
        subCategory: ""
        description: Manages a CAST AI security runtime rule.
        name: castai_security_runtime_rule Resource - terraform-provider-castai
        title: castai_security_runtime_rule Resource - terraform-provider-castai
        argumentDocs:
            anomalies_count: (Number) Number of anomalies detected using this rule.
            category: (String) Category of the rule.
            create: (String)
            delete: (String)
            enabled: (Boolean) Whether the rule is enabled.
            id: (String) The ID of this resource.
            is_built_in: (Boolean) Indicates whether the rule is a built-in rule.
            labels: (Map of String) Key-value labels attached to the rule.
            name: (String) Unique name of the runtime security rule. Name is used as resource identifier in Terraform.
            read: (String)
            resource_selector: (String) Optional CEL expression for resource selection.
            rule_engine_type: (String) The engine type used to evaluate the rule. Only RULE_ENGINE_TYPE_CEL is currently supported.
            rule_text: (String) CEL rule expression text.
            severity: (String) Severity of the rule. One of SEVERITY_CRITICAL, SEVERITY_HIGH, SEVERITY_MEDIUM, SEVERITY_LOW, SEVERITY_NONE.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the rule (internal value).
            used_custom_lists: (List of String) Custom lists used in this rule, if any.
        importStatements: []
    castai_service_account:
        subCategory: ""
        description: Service account resource allows managing CAST AI service accounts.
        name: castai_service_account
        title: castai_service_account Resource - terraform-provider-castai
        examples:
            - name: service_account
              manifest: |-
                {
                  "description": "service account description",
                  "name": "example-service-account",
                  "organization_id": "${organization.id}"
                }
              references:
                organization_id: organization.id
        argumentDocs:
            author: (List of Object) Author of the service account. (see below for nested schema)
            create: (String)
            delete: (String)
            description: (String) Description of the service account.
            email: (String) Email of the service account.
            id: (String) The ID of this resource.
            kind: (String)
            name: (String) Name of the service account.
            organization_id: (String) ID of the organization.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_service_account_key:
        subCategory: ""
        description: Service account key resource allows managing CAST AI service account keys.
        name: castai_service_account_key
        title: castai_service_account_key Resource - terraform-provider-castai
        examples:
            - name: service_account_key
              manifest: |-
                {
                  "active": true,
                  "expires_at": "2026-01-01T00:00:00Z",
                  "name": "example-key",
                  "organization_id": "${data.castai_organization.test.id}",
                  "service_account_id": "${castai_service_account.service_account.id}"
                }
              references:
                organization_id: data.castai_organization.test.id
                service_account_id: castai_service_account.service_account.id
        argumentDocs:
            active: (Boolean) Whether the service account key is active. Defaults to true.
            create: (String)
            delete: (String)
            expires_at: (String) The expiration time of the service account key in RFC3339 format. Defaults to an empty string.
            id: (String) The ID of this resource.
            last_used_at: (String) Last time the service account key was used.
            name: (String) Name of the service account key.
            organization_id: (String) ID of the organization.
            prefix: (String) Prefix of the service account key.
            read: (String)
            service_account_id: (String) ID of the service account.
            timeouts: (Block, Optional) (see below for nested schema)
            token: (String) The token of the service account key used for authentication.
            update: (String)
        importStatements: []
    castai_sso_connection:
        subCategory: ""
        description: SSO Connection resource allows creating SSO trust relationship with CAST AI.
        name: castai_sso_connection
        title: castai_sso_connection Resource - terraform-provider-castai
        examples:
            - name: sso
              manifest: |-
                {
                  "aad": [
                    {
                      "ad_domain": "${azuread_application.castai_sso.publisher_domain}",
                      "client_id": "${azuread_application.castai_sso.client_id}",
                      "client_secret": "${azuread_application_password.castai_sso.value}"
                    }
                  ],
                  "email_domain": "aad_connection@test.com",
                  "name": "aad_connection"
                }
              references:
                aad.ad_domain: azuread_application.castai_sso.publisher_domain
                aad.client_id: azuread_application.castai_sso.client_id
                aad.client_secret: azuread_application_password.castai_sso.value
        argumentDocs:
            aad: '(Block List, Max: 1) Azure AD connector (see below for nested schema)'
            ad_domain: (String) Azure AD domain
            additional_email_domains: (List of String) Additional email domains that will be allowed to sign in via the connection
            client_id: (String) Azure AD client ID
            client_secret: (String, Sensitive) Azure AD client secret
            create: (String)
            delete: (String)
            email_domain: (String) Email domain of the connection
            id: (String) The ID of this resource.
            name: (String) Connection name
            okta: '(Block List, Max: 1) Okta connector (see below for nested schema)'
            okta_domain: (String) Okta domain
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_workload_scaling_policy:
        subCategory: ""
        description: Manage workload scaling policy. Scaling policy reference https://docs.cast.ai/docs/woop-scaling-policies
        name: castai_workload_scaling_policy
        title: castai_workload_scaling_policy Resource - terraform-provider-castai
        examples:
            - name: services
              manifest: |-
                {
                  "anti_affinity": [
                    {
                      "consider_anti_affinity": false
                    }
                  ],
                  "apply_type": "IMMEDIATE",
                  "assignment_rules": [
                    {
                      "rules": [
                        {
                          "namespace": [
                            {
                              "names": [
                                "default",
                                "kube-system"
                              ]
                            }
                          ]
                        },
                        {
                          "workload": [
                            {
                              "gvk": [
                                "Deployment",
                                "StatefulSet"
                              ],
                              "labels_expressions": [
                                {
                                  "key": "region",
                                  "operator": "NotIn",
                                  "values": [
                                    "eu-west-1",
                                    "eu-west-2"
                                  ]
                                },
                                {
                                  "key": "helm.sh/chart",
                                  "operator": "Exists"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "cluster_id": "${castai_gke_cluster.dev.id}",
                  "confidence": [
                    {
                      "threshold": 0.9
                    }
                  ],
                  "cpu": [
                    {
                      "apply_threshold_strategy": [
                        {
                          "percentage": 0.1,
                          "type": "PERCENTAGE"
                        }
                      ],
                      "args": [
                        "0.9"
                      ],
                      "function": "QUANTILE",
                      "look_back_period_seconds": 172800,
                      "max": 1,
                      "min": 0.1,
                      "overhead": 0.15
                    }
                  ],
                  "downscaling": [
                    {
                      "apply_type": "DEFERRED"
                    }
                  ],
                  "management_option": "MANAGED",
                  "memory": [
                    {
                      "apply_threshold_strategy": [
                        {
                          "type": "DEFAULT_ADAPTIVE"
                        }
                      ],
                      "function": "MAX",
                      "limit": [
                        {
                          "multiplier": 1.5,
                          "type": "MULTIPLIER"
                        }
                      ],
                      "management_option": "READ_ONLY",
                      "overhead": 0.35
                    }
                  ],
                  "memory_event": [
                    {
                      "apply_type": "IMMEDIATE"
                    }
                  ],
                  "name": "services",
                  "predictive_scaling": [
                    {
                      "cpu": [
                        {
                          "enabled": true
                        }
                      ]
                    }
                  ],
                  "rollout_behavior": [
                    {
                      "type": "NO_DISRUPTION"
                    }
                  ],
                  "startup": [
                    {
                      "period_seconds": 240
                    }
                  ]
                }
              references:
                cluster_id: castai_gke_cluster.dev.id
            - name: services
              manifest: '{}'
        argumentDocs:
            anti_affinity: '(Block List, Max: 1) (see below for nested schema)'
            apply_threshold: (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
            apply_threshold_strategy: '(Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)'
            apply_type: (String) Recommendation apply type.
            args: (List of String) The arguments for the function - i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
            assignment_rules: (Block List) Allows defining conditions for automatically assigning workloads to this scaling policy. (see below for nested schema)
            cluster_id: (String) CAST AI cluster id
            confidence: '(Block List, Max: 1) Defines the confidence settings for applying recommendations. (see below for nested schema)'
            consider_anti_affinity: |-
                (Boolean) Defines if anti-affinity should be considered when scaling the workload.
                If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
            cpu: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            create: (String)
            delete: (String)
            denominator: (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
            downscaling: '(Block List, Max: 1) (see below for nested schema)'
            enabled: (Boolean) Defines if predictive scaling is enabled for resource.
            exponent: '(Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:'
            function: '(String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX'
            gvk: |-
                (List of String) Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                It can be either:
            id: (String) The ID of this resource.
            key: (String) The label key to match. Required for all operators except Regex and Contains. If not specified, it will search through all labels.
            labels_expressions: (Block List) Defines matching by label selector requirements. (see below for nested schema)
            limit: '(Block List, Max: 1) Resource limit settings (see below for nested schema)'
            look_back_period_seconds: (Number) The look back period in seconds for the recommendation.
            management_option: (String) Defines possible options for workload management.
            max: (Number) Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
            memory: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            memory_event: '(Block List, Max: 1) (see below for nested schema)'
            min: (Number) Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
            multiplier: (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
            name: (String) Scaling policy name
            names: (List of String) Defines matching by namespace names.
            namespace: '(Block List, Max: 1) Allows assigning a scaling policy based on the workload''s namespace. (see below for nested schema)'
            numerator: (Number) The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
            operator: (String) The operator to use for matching the label.
            overhead: (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
            percentage: (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
            period_seconds: |-
                (Number) Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                When set, recommendations will be adjusted to disregard resource spikes within this period.
                If not specified, the workload will receive standard recommendations without startup considerations.
            predictive_scaling: '(Block List, Max: 1) (see below for nested schema)'
            prefer_one_by_one: (Boolean) Defines if pods should be restarted one by one to avoid service disruption.
            read: (String)
            rollout_behavior: '(Block List, Max: 1) Defines the rollout behavior used when applying recommendations. Prerequisites:'
            rules: '(Block List, Min: 1) (see below for nested schema)'
            startup: '(Block List, Max: 1) (see below for nested schema)'
            threshold: (Number) Defines the confidence threshold for applying recommendations. The smaller number indicates that we require fewer metrics data points to apply recommendations - changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Defines apply theshold strategy type.
            update: (String)
            values: (List of String) A list of values to match against the label key. It is required for In, NotIn, Regex, and Contains operators.
            workload: '(Block List, Max: 1) Allows assigning a scaling policy based on the workload''s metadata. (see below for nested schema)'
        importStatements:
            - terraform plan -out=import.plan -var-file=tf.vars -generate-config-out=generated.tf
            - terraform apply "import.plan"
            - terraform plan -out=import.plan -var-file=tf.vars
            - terraform apply "import.plan"
            - $ terraform import castai_workload_scaling_policy.services <cluster_id>/services
            - $ terraform import 'module.castai-eks-cluster.castai_workload_scaling_policy.this["services"]' <cluster_id>/services
    castai_workload_scaling_policy_order:
        subCategory: ""
        name: castai_workload_scaling_policy_order
        title: castai_workload_scaling_policy_order Resource - terraform-provider-castai
        examples:
            - name: custom
              manifest: |-
                {
                  "cluster_id": "${castai_gke_cluster.cluster.id}",
                  "policy_ids": "${concat(local.ordered_policy_ids, sort(local.unordered_policy_ids))}"
                }
              references:
                cluster_id: castai_gke_cluster.cluster.id
        argumentDocs:
            cluster_id: (String) CAST AI cluster id
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            policy_ids: (List of String) List of scaling policy IDs in the order they should be applied.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform plan -out=import.plan -var-file=tf.vars -generate-config-out=generated.tf
            - terraform apply "import.plan"
