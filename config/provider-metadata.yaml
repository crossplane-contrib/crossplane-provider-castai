name: castai/castai
resources:
    castai_aks_cluster Resource - terraform-provider-castai:
        subCategory: ""
        description: AKS cluster resource allows connecting an existing AKS cluster to CAST AI.
        name: castai_aks_cluster Resource - terraform-provider-castai
        title: castai_aks_cluster Resource - terraform-provider-castai
        argumentDocs:
            client_id: (String) Azure AD application ID that is created and used by CAST AI.
            client_secret: (String, Sensitive) Azure AD application password that will be used by CAST AI.
            cluster_token: (String, Sensitive) CAST AI cluster token.
            create: (String)
            credentials_id: (String) CAST AI internal credentials ID
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST.AI on disconnect.
            id: (String) The ID of this resource.
            name: (String) AKS cluster name.
            node_resource_group: (String) Azure resource group in which nodes are and will be created.
            region: (String) AKS cluster region.
            subscription_id: (String) ID of the Azure subscription.
            tenant_id: (String) Azure AD tenant ID from the used subscription.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_autoscaler Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI autoscaler resource to manage autoscaler settings
        name: castai_autoscaler Resource - terraform-provider-castai
        title: castai_autoscaler Resource - terraform-provider-castai
        argumentDocs:
            autoscaler_policies: (String) computed value to store full policies configuration
            autoscaler_policies_json: (String) autoscaler policies JSON string to override current autoscaler settings
            cluster_id: (String) CAST AI cluster id
            create: (String)
            id: (String) The ID of this resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_eks_cluster Resource - terraform-provider-castai:
        subCategory: ""
        description: EKS cluster resource allows connecting an existing EKS cluster to CAST AI.
        name: castai_eks_cluster Resource - terraform-provider-castai
        title: castai_eks_cluster Resource - terraform-provider-castai
        argumentDocs:
            account_id: (String) ID of AWS account
            assume_role_arn: (String) AWS IAM role ARN that will be assumed by CAST AI user. This role should allow sts:AssumeRole action for CAST AI user that can be retrieved using castai_eks_user_arn data source
            cluster_token: (String, Sensitive) computed value to store cluster token
            create: (String)
            credentials_id: (String) CAST AI internal credentials ID
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST AI on disconnect
            id: (String) The ID of this resource.
            name: (String) name of your EKS cluster
            region: (String) AWS region where the cluster is placed
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_eks_clusterid Resource - terraform-provider-castai:
        subCategory: ""
        name: castai_eks_clusterid Resource - terraform-provider-castai
        title: castai_eks_clusterid Resource - terraform-provider-castai
        argumentDocs:
            account_id: (String)
            cluster_name: (String)
            id: (String) The ID of this resource.
            region: (String)
        importStatements: []
    castai_eks_user_arn Resource - terraform-provider-castai:
        subCategory: ""
        name: castai_eks_user_arn Resource - terraform-provider-castai
        title: castai_eks_user_arn Resource - terraform-provider-castai
        argumentDocs:
            arn: (String)
            cluster_id: (String)
            id: (String) The ID of this resource.
        importStatements: []
    castai_evictor_advanced_config Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI eviction config resource to manage evictor properties
        name: castai_evictor_advanced_config Resource - terraform-provider-castai
        title: castai_evictor_advanced_config Resource - terraform-provider-castai
        argumentDocs:
            aggressive: (Boolean)
            cluster_id: (String) CAST AI cluster id.
            create: (String)
            disposable: (Boolean)
            evictor_advanced_config: '(Block List, Min: 1) evictor advanced configuration to target specific node/pod (see below for nested schema)'
            id: (String) The ID of this resource.
            key: (String)
            kind: (String)
            match_expressions: (Block List) (see below for nested schema)
            match_labels: (Map of String)
            namespace: (String)
            node_selector: (Block List) node selector (see below for nested schema)
            operator: (String)
            pod_selector: (Block List) pod selector (see below for nested schema)
            removal_disabled: (Boolean)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            values: (List of String)
        importStatements: []
    castai_gke_cluster Resource - terraform-provider-castai:
        subCategory: ""
        description: GKE cluster resource allows connecting an existing GKE cluster to CAST AI.
        name: castai_gke_cluster Resource - terraform-provider-castai
        title: castai_gke_cluster Resource - terraform-provider-castai
        argumentDocs:
            cluster_token: (String, Sensitive) CAST.AI agent cluster token
            create: (String)
            credentials_id: (String) CAST AI credentials id for cluster
            credentials_json: (String, Sensitive) GCP credentials.json from ServiceAccount with credentials for CAST AI
            delete: (String)
            delete_nodes_on_disconnect: (Boolean) Should CAST AI remove nodes managed by CAST.AI on disconnect
            id: (String) The ID of this resource.
            location: (String) GCP cluster zone in case of zonal or region in case of regional cluster
            name: (String) GKE cluster name
            project_id: (String) GCP project id
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    castai_node_configuration Resource - terraform-provider-castai:
        subCategory: ""
        description: Create node configuration for given cluster. Node configuration reference https://docs.cast.ai/docs/node-configuration
        name: castai_node_configuration Resource - terraform-provider-castai
        title: castai_node_configuration Resource - terraform-provider-castai
        argumentDocs:
            aks: '(Block List, Max: 1) (see below for nested schema)'
            cluster_id: (String) CAST AI cluster id
            container_runtime: '(String) Optional container runtime to be used by kubelet. Applicable for EKS only.  Supported values include: dockerd, containerd'
            create: (String)
            delete: (String)
            disk_cpu_ratio: (Number) Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
            disk_type: '(String) Type of boot disk attached to the node. (See disk types). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme'
            dns_cluster_ip: (String) IP address to use for DNS queries within the cluster
            docker_config: (String) Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. Available values
            eks: '(Block List, Max: 1) (see below for nested schema)'
            gke: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            image: (String) Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on Kubernetes version if possible
            imds_hop_limit: (Number) Allow configure the IMDSv2 hop limit, the default is 2
            imds_v1: (Boolean) When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
            init_script: (String) Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
            instance_profile_arn: (String) Cluster's instance profile ARN used for CAST provisioned nodes
            key_pair_id: (String) AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
            kops: '(Block List, Max: 1) (see below for nested schema)'
            kubelet_config: (String) Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable for EKS only. Available values
            max_pods_per_node: (Number) Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
            min_disk_size: (Number) Minimal disk size in GiB. Defaults to 100, min 30, max 1000
            name: (String) Name of the node configuration
            network_tags: (List of String) Network tags to be added on a VM. (See network tags)
            read: (String)
            security_groups: (List of String) Cluster's security groups configuration for CAST provisioned nodes
            ssh_public_key: (String) SSH public key to be used for provisioned nodes
            subnets: (List of String) Subnet ids to be used for provisioned nodes
            tags: (Map of String) Tags to be added on cloud instances for provisioned nodes
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            volume_iops: (Number) AWS EBS volume IOPS to be used for CAST provisioned nodes
            volume_kms_key_arn: (String) AWS KMS key ARN for encrypting EBS volume attached to the node
            volume_throughput: (Number) AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
            volume_type: '(String) AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, io1, io2'
        importStatements:
            - $ terraform import castai_node_configuration.default <cluster_id>/default
            - $ terraform import 'module.castai-eks-cluster.castai_node_configuration.this["default"]' <cluster_id>/default
    castai_node_configuration_default Resource - terraform-provider-castai:
        subCategory: ""
        name: castai_node_configuration_default Resource - terraform-provider-castai
        title: castai_node_configuration_default Resource - terraform-provider-castai
        argumentDocs:
            cluster_id: (String) CAST AI cluster id
            configuration_id: (String) Id of the node configuration
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    castai_node_template Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI node template resource to manage node templates
        name: castai_node_template Resource - terraform-provider-castai
        title: castai_node_template Resource - terraform-provider-castai
        argumentDocs:
            architectures: '(List of String) List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.'
            cluster_id: (String) CAST AI cluster id.
            compute_optimized: (Boolean) Compute optimized instance constraint - will only pick compute optimized nodes if true.
            configuration_id: (String) CAST AI node configuration id to be used for node template.
            constraints: '(Block List, Max: 1) (see below for nested schema)'
            create: (String)
            custom_instances_enabled: (Boolean) Marks whether custom instances should be used when deciding which parts of inventory are available. Custom instances are only supported in GCP.
            custom_label: '(Block List, Max: 1, Deprecated) Custom label key/value to be added to nodes created from this template. (see below for nested schema)'
            custom_labels: (Map of String) Custom labels to be added to nodes created from this template. If the field custom_label is present, the value of custom_labels will be ignored.
            custom_taints: (Block List) Custom taints to be added to the nodes created from this template. shouldTaint has to be true in order to create/update the node template with custom taints. If shouldTaint is true, but no custom taints are provided, the nodes will be tainted with the default node template taint. (see below for nested schema)
            delete: (String)
            effect: '(String) Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.'
            enable_spot_diversity: (Boolean) Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
            exclude: (List of String) Instance families to include when filtering (excludes all other families).
            exclude_names: (List of String) Names of the GPUs to exclude.
            fallback_restore_rate_seconds: '(Number) Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.'
            gpu: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            include: (List of String) Instance families to exclude when filtering (includes all other families).
            include_names: (List of String) Instance families to include when filtering (excludes all other families).
            instance_families: '(Block List, Max: 1) (see below for nested schema)'
            is_default: (Boolean) Flag whether the node template is default.
            is_enabled: (Boolean) Flag whether the node template is enabled and considered for autoscaling.
            is_gpu_only: (Boolean) GPU instance constraint - will only pick nodes with GPU if true
            key: (String) Label key to be added to nodes created from this template.
            manufacturers: (List of String) Manufacturers of the gpus to select - NVIDIA, AMD.
            max_count: (Number) Max GPU count for the instance type to have.
            max_cpu: (Number) Max CPU cores per node.
            max_memory: (Number) Max Memory (Mib) per node.
            min_count: (Number) Min GPU count for the instance type to have.
            min_cpu: (Number) Min CPU cores per node.
            min_memory: (Number) Min Memory (Mib) per node.
            name: (String) Name of the node template.
            on_demand: (Boolean) Should include on-demand instances in the considered pool.
            os: '(List of String) List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.'
            read: (String)
            rebalancing_config_min_nodes: (Number) Minimum nodes that will be kept when rebalancing nodes using this node template.
            should_taint: (Boolean) Marks whether the templated nodes will have a taint.
            spot: (Boolean) Should include spot instances in the considered pool.
            spot_diversity_price_increase_limit_percent: (Number) Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
            spot_interruption_predictions_enabled: (Boolean) Enable/disable spot interruption predictions.
            spot_interruption_predictions_type: (String) Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
            storage_optimized: (Boolean) Storage optimized instance constraint - will only pick storage optimized nodes if true
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            use_spot_fallbacks: (Boolean) Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
            value: (String) Label value to be added to nodes created from this template.
        importStatements:
            - |-
              # Import node template by specifying cluster ID and node template name.
              terraform import castai_node_template.default_by_castai 105e6fa3-20b1-424e-v589-9a64d1eeabea/default-by-castai
    castai_organization_members Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI organization members resource to manage organization members
        name: castai_organization_members Resource - terraform-provider-castai
        title: castai_organization_members Resource - terraform-provider-castai
        argumentDocs:
            create: (String)
            delete: (String)
            id: (String) The ID of this resource.
            members: (List of String) A list of email addresses corresponding to users who should be given member access to the organization.
            organization_id: (String) CAST AI organization ID.
            owners: (List of String) A list of email addresses corresponding to users who should be given owner access to the organization.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            viewers: (List of String) A list of email addresses corresponding to users who should be given viewer access to the organization.
        importStatements: []
    castai_rebalancing_job Resource - terraform-provider-castai:
        subCategory: ""
        description: Job assigns a rebalancing schedule to a cluster.
        name: castai_rebalancing_job Resource - terraform-provider-castai
        title: castai_rebalancing_job Resource - terraform-provider-castai
        argumentDocs:
            cluster_id: (String) CAST AI cluster id.
            create: (String)
            delete: (String)
            enabled: (Boolean) The job will only be executed if it's enabled.
            id: (String) The ID of this resource.
            read: (String)
            rebalancing_schedule_id: (String) Rebalancing schedule of this job.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - |-
              # Import jobs by specifying cluster ID and schedule name.
              # Schedule must be assigned to the cluster already for this command to succeed.
              terraform import 'castai_rebalancing_job.spots' 12345678-1762-45eb-bd4f-85cb172e6ad3/spots
    castai_rebalancing_schedule Resource - terraform-provider-castai:
        subCategory: ""
        description: CAST AI rebalancing schedule resource to manage rebalancing schedules.
        name: castai_rebalancing_schedule Resource - terraform-provider-castai
        title: castai_rebalancing_schedule Resource - terraform-provider-castai
        argumentDocs:
            achieved_savings_percentage: (Number) The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
            create: (String)
            cron: (String) Cron expression defining when the schedule should trigger.
            delete: (String)
            enabled: (Boolean) Enables or disables the execution conditions.
            execution_conditions: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            keep_drain_timeout_nodes: (Boolean) Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
            launch_configuration: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            name: (String) Name of the schedule.
            node_ttl_seconds: (Number) Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
            num_targeted_nodes: (Number) Maximum number of nodes that will be selected for rebalancing.
            read: (String)
            rebalancing_min_nodes: (Number) Minimum number of nodes that should be kept in the cluster after rebalancing.
            savings_percentage: (Number) Defines the minimum percentage of savings expected.
            schedule: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            selector: (String) Node selector in JSON format.
            timeouts: (Block, Optional) (see below for nested schema)
            trigger_conditions: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            update: (String)
        importStatements:
            - |-
              # Associate terraform resource "spots" with a rebalancing schedule named "spots".
              terraform import 'castai_rebalancing_schedule.spots' spots

              # Importing via direct schedule ID is also possible.
              terraform import 'castai_rebalancing_schedule.spots' b4e69e0c-1762-45eb-bd4f-85cb172e6ad3
    castai_reservations Resource - terraform-provider-castai:
        subCategory: ""
        description: Reservation represents cloud service provider reserved instances that can be used by CAST AI autoscaler.
        name: castai_reservations Resource - terraform-provider-castai
        title: castai_reservations Resource - terraform-provider-castai
        argumentDocs:
            count: (String) - amount of reserved instances
            create: (String)
            end_date: (String) - end date of reservation
            id: (String) The ID of this resource.
            instance_type: (String) - reserved instance type
            name: (String) - unique reservation name in region for specific instance type
            organization_id: (String) organization
            price: (String) - reservation price
            provider: (String) - reservation cloud provider (gcp, aws, azure)
            region: (String) - reservation region
            reservations: (List of Object) (see below for nested schema)
            reservations_csv: (String) csv file containing reservations
            start_date: (String) - start date of reservation
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            zone_id: (String) - reservation zone id
            zone_name: (String) - reservation zone name
        importStatements:
            - |-
              # Import reservations of an organization.
              terraform import 'castai_reservations.test' 5b046e29-e947-470f-9952-bfdf369ecca6
    castai_sso_connection Resource - terraform-provider-castai:
        subCategory: ""
        description: SSO Connection resource allows creating SSO trust relationship with CAST AI.
        name: castai_sso_connection Resource - terraform-provider-castai
        title: castai_sso_connection Resource - terraform-provider-castai
        argumentDocs:
            aad: '(Block List, Max: 1) Azure AD connector (see below for nested schema)'
            ad_domain: (String) Azure AD domain
            client_id: (String) Azure AD client ID
            client_secret: (String, Sensitive) Azure AD client secret
            create: (String)
            delete: (String)
            email_domain: (String) Email domain of the connection
            id: (String) The ID of this resource.
            name: (String) Connection name
            okta: '(Block List, Max: 1) Okta connector (see below for nested schema)'
            okta_domain: (String) Okta domain
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
