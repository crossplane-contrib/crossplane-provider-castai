---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: autoscalers.castai.upbound.io
spec:
  group: castai.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - castai
    kind: AutoScaler
    listKind: AutoScalerList
    plural: autoscalers
    singular: autoscaler
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AutoScaler is the Schema for the AutoScalers API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AutoScalerSpec defines the desired state of AutoScaler
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoscalerPoliciesJson:
                    description: autoscaler policies JSON string to override current
                      autoscaler settings
                    type: string
                  autoscalerSettings:
                    description: autoscaler policy definitions to override current
                      autoscaler settings
                    items:
                      properties:
                        clusterLimits:
                          description: defines minimum and maximum amount of CPU the
                            cluster can have.
                          items:
                            properties:
                              cpu:
                                description: defines the minimum and maximum amount
                                  of CPUs for cluster's worker nodes.
                                items:
                                  properties:
                                    maxCores:
                                      description: defines the maximum allowed amount
                                        of vCPUs in the whole cluster.
                                      type: number
                                    minCores:
                                      description: defines the minimum allowed amount
                                        of CPUs in the whole cluster.
                                      type: number
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable cluster size limits policy.
                                type: boolean
                            type: object
                          type: array
                        enabled:
                          description: enable/disable autoscaler policies
                          type: boolean
                        isScopedMode:
                          description: run autoscaler in scoped mode. Only marked
                            pods and nodes will be considered.
                          type: boolean
                        nodeDownscaler:
                          description: node downscaler defines policies for removing
                            nodes based on the configured conditions.
                          items:
                            properties:
                              emptyNodes:
                                description: defines whether Node Downscaler should
                                  opt in for removing empty worker nodes when possible.
                                items:
                                  properties:
                                    delaySeconds:
                                      description: period (in seconds) to wait before
                                        removing the node. Might be useful to control
                                        the aggressiveness of the downscaler.
                                      type: number
                                    enabled:
                                      description: enable/disable the empty worker
                                        nodes policy.
                                      type: boolean
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable node downscaler policy.
                                type: boolean
                              evictor:
                                description: defines the CAST AI Evictor component
                                  settings. Evictor watches the pods running in your
                                  cluster and looks for ways to compact them into
                                  fewer nodes, making nodes empty, which will be removed
                                  by the empty worker nodes policy.
                                items:
                                  properties:
                                    aggressiveMode:
                                      description: enable/disable aggressive mode.
                                        By default, Evictor does not target nodes
                                        that are running unreplicated pods. This mode
                                        will make the Evictor start considering application
                                        with just a single replica.
                                      type: boolean
                                    cycleInterval:
                                      description: configure the interval duration
                                        between Evictor operations. This property
                                        can be used to lower or raise the frequency
                                        of the Evictor's find-and-drain operations.
                                      type: string
                                    dryRun:
                                      description: enable/disable dry-run. This property
                                        allows you to prevent the Evictor from carrying
                                        any operations out and preview the actions
                                        it would take.
                                      type: boolean
                                    enabled:
                                      description: enable/disable the Evictor policy.
                                        This will either install or uninstall the
                                        Evictor component in your cluster.
                                      type: boolean
                                    ignorePodDisruptionBudgets:
                                      description: if enabled then Evictor will attempt
                                        to evict pods that have pod disruption budgets
                                        configured.
                                      type: boolean
                                    nodeGracePeriodMinutes:
                                      description: configure the node grace period
                                        which controls the duration which must pass
                                        after a node has been created before Evictor
                                        starts considering that node.
                                      type: number
                                    podEvictionFailureBackOffInterval:
                                      description: configure the pod eviction failure
                                        back off interval. If pod eviction fails then
                                        Evictor will attempt to evict it again after
                                        the amount of time specified here.
                                      type: string
                                    scopedMode:
                                      description: enable/disable scoped mode. By
                                        default, Evictor targets all nodes in the
                                        cluster. This mode will constrain it to just
                                        the nodes which were created by CAST AI.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        nodeTemplatesPartialMatchingEnabled:
                          description: marks whether partial matching should be used
                            when deciding which custom node template to select.
                          type: boolean
                        spotInstances:
                          description: policy defining whether autoscaler can use
                            spot instances for provisioning additional workloads.
                          items:
                            properties:
                              enabled:
                                description: enable/disable spot instances policy.
                                type: boolean
                              maxReclaimRate:
                                description: max allowed reclaim rate when choosing
                                  spot instance type. E.g. if the value is 10%, instance
                                  types having 10% or higher reclaim rate will not
                                  be considered. Set to zero to use all instance types
                                  regardless of reclaim rate.
                                type: number
                              spotBackups:
                                description: policy defining whether autoscaler can
                                  use spot backups instead of spot instances when
                                  spot instances are not available.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot backups policy.
                                      type: boolean
                                    spotBackupRestoreRateSeconds:
                                      description: defines interval on how often spot
                                        backups restore to real spot should occur.
                                      type: number
                                  type: object
                                type: array
                              spotDiversityEnabled:
                                description: enable/disable spot diversity policy.
                                  When enabled, autoscaler will try to balance between
                                  diverse and cost optimal instance types.
                                type: boolean
                              spotDiversityPriceIncreaseLimit:
                                description: allowed node configuration price increase
                                  when diversifying instance types. E.g. if the value
                                  is 10%, then the overall price of diversified instance
                                  types can be 10% higher than the price of the optimal
                                  configuration.
                                type: number
                              spotInterruptionPredictions:
                                description: configure the handling of SPOT interruption
                                  predictions.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot interruption
                                        predictions.
                                      type: boolean
                                    spotInterruptionPredictionsType:
                                      description: define the type of the spot interruption
                                        prediction to handle. Allowed values are AWSRebalanceRecommendations,
                                        CASTAIInterruptionPredictions.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        unschedulablePods:
                          description: policy defining autoscaler's behavior when
                            unschedulable pods were detected.
                          items:
                            properties:
                              customInstancesEnabled:
                                description: enable/disable custom instances policy.
                                type: boolean
                              enabled:
                                description: enable/disable unschedulable pods detection
                                  policy.
                                type: boolean
                              headroom:
                                description: additional headroom based on cluster's
                                  total available capacity for on-demand nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              headroomSpot:
                                description: additional headroom based on cluster's
                                  total available capacity for spot nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom_spot policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              nodeConstraints:
                                description: defines the node constraints that will
                                  be applied when autoscaling with Unschedulable Pods
                                  policy.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable node constraints
                                        policy.
                                      type: boolean
                                    maxCpuCores:
                                      description: defines max CPU cores for the node
                                        to pick.
                                      type: number
                                    maxRamMib:
                                      description: defines max RAM in MiB for the
                                        node to pick.
                                      type: number
                                    minCpuCores:
                                      description: defines min CPU cores for the node
                                        to pick.
                                      type: number
                                    minRamMib:
                                      description: defines min RAM in MiB for the
                                        node to pick.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: CAST AI cluster id
                    type: string
                  clusterIdRef:
                    description: Reference to a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoscalerPoliciesJson:
                    description: autoscaler policies JSON string to override current
                      autoscaler settings
                    type: string
                  autoscalerSettings:
                    description: autoscaler policy definitions to override current
                      autoscaler settings
                    items:
                      properties:
                        clusterLimits:
                          description: defines minimum and maximum amount of CPU the
                            cluster can have.
                          items:
                            properties:
                              cpu:
                                description: defines the minimum and maximum amount
                                  of CPUs for cluster's worker nodes.
                                items:
                                  properties:
                                    maxCores:
                                      description: defines the maximum allowed amount
                                        of vCPUs in the whole cluster.
                                      type: number
                                    minCores:
                                      description: defines the minimum allowed amount
                                        of CPUs in the whole cluster.
                                      type: number
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable cluster size limits policy.
                                type: boolean
                            type: object
                          type: array
                        enabled:
                          description: enable/disable autoscaler policies
                          type: boolean
                        isScopedMode:
                          description: run autoscaler in scoped mode. Only marked
                            pods and nodes will be considered.
                          type: boolean
                        nodeDownscaler:
                          description: node downscaler defines policies for removing
                            nodes based on the configured conditions.
                          items:
                            properties:
                              emptyNodes:
                                description: defines whether Node Downscaler should
                                  opt in for removing empty worker nodes when possible.
                                items:
                                  properties:
                                    delaySeconds:
                                      description: period (in seconds) to wait before
                                        removing the node. Might be useful to control
                                        the aggressiveness of the downscaler.
                                      type: number
                                    enabled:
                                      description: enable/disable the empty worker
                                        nodes policy.
                                      type: boolean
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable node downscaler policy.
                                type: boolean
                              evictor:
                                description: defines the CAST AI Evictor component
                                  settings. Evictor watches the pods running in your
                                  cluster and looks for ways to compact them into
                                  fewer nodes, making nodes empty, which will be removed
                                  by the empty worker nodes policy.
                                items:
                                  properties:
                                    aggressiveMode:
                                      description: enable/disable aggressive mode.
                                        By default, Evictor does not target nodes
                                        that are running unreplicated pods. This mode
                                        will make the Evictor start considering application
                                        with just a single replica.
                                      type: boolean
                                    cycleInterval:
                                      description: configure the interval duration
                                        between Evictor operations. This property
                                        can be used to lower or raise the frequency
                                        of the Evictor's find-and-drain operations.
                                      type: string
                                    dryRun:
                                      description: enable/disable dry-run. This property
                                        allows you to prevent the Evictor from carrying
                                        any operations out and preview the actions
                                        it would take.
                                      type: boolean
                                    enabled:
                                      description: enable/disable the Evictor policy.
                                        This will either install or uninstall the
                                        Evictor component in your cluster.
                                      type: boolean
                                    ignorePodDisruptionBudgets:
                                      description: if enabled then Evictor will attempt
                                        to evict pods that have pod disruption budgets
                                        configured.
                                      type: boolean
                                    nodeGracePeriodMinutes:
                                      description: configure the node grace period
                                        which controls the duration which must pass
                                        after a node has been created before Evictor
                                        starts considering that node.
                                      type: number
                                    podEvictionFailureBackOffInterval:
                                      description: configure the pod eviction failure
                                        back off interval. If pod eviction fails then
                                        Evictor will attempt to evict it again after
                                        the amount of time specified here.
                                      type: string
                                    scopedMode:
                                      description: enable/disable scoped mode. By
                                        default, Evictor targets all nodes in the
                                        cluster. This mode will constrain it to just
                                        the nodes which were created by CAST AI.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        nodeTemplatesPartialMatchingEnabled:
                          description: marks whether partial matching should be used
                            when deciding which custom node template to select.
                          type: boolean
                        spotInstances:
                          description: policy defining whether autoscaler can use
                            spot instances for provisioning additional workloads.
                          items:
                            properties:
                              enabled:
                                description: enable/disable spot instances policy.
                                type: boolean
                              maxReclaimRate:
                                description: max allowed reclaim rate when choosing
                                  spot instance type. E.g. if the value is 10%, instance
                                  types having 10% or higher reclaim rate will not
                                  be considered. Set to zero to use all instance types
                                  regardless of reclaim rate.
                                type: number
                              spotBackups:
                                description: policy defining whether autoscaler can
                                  use spot backups instead of spot instances when
                                  spot instances are not available.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot backups policy.
                                      type: boolean
                                    spotBackupRestoreRateSeconds:
                                      description: defines interval on how often spot
                                        backups restore to real spot should occur.
                                      type: number
                                  type: object
                                type: array
                              spotDiversityEnabled:
                                description: enable/disable spot diversity policy.
                                  When enabled, autoscaler will try to balance between
                                  diverse and cost optimal instance types.
                                type: boolean
                              spotDiversityPriceIncreaseLimit:
                                description: allowed node configuration price increase
                                  when diversifying instance types. E.g. if the value
                                  is 10%, then the overall price of diversified instance
                                  types can be 10% higher than the price of the optimal
                                  configuration.
                                type: number
                              spotInterruptionPredictions:
                                description: configure the handling of SPOT interruption
                                  predictions.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot interruption
                                        predictions.
                                      type: boolean
                                    spotInterruptionPredictionsType:
                                      description: define the type of the spot interruption
                                        prediction to handle. Allowed values are AWSRebalanceRecommendations,
                                        CASTAIInterruptionPredictions.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        unschedulablePods:
                          description: policy defining autoscaler's behavior when
                            unschedulable pods were detected.
                          items:
                            properties:
                              customInstancesEnabled:
                                description: enable/disable custom instances policy.
                                type: boolean
                              enabled:
                                description: enable/disable unschedulable pods detection
                                  policy.
                                type: boolean
                              headroom:
                                description: additional headroom based on cluster's
                                  total available capacity for on-demand nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              headroomSpot:
                                description: additional headroom based on cluster's
                                  total available capacity for spot nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom_spot policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              nodeConstraints:
                                description: defines the node constraints that will
                                  be applied when autoscaling with Unschedulable Pods
                                  policy.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable node constraints
                                        policy.
                                      type: boolean
                                    maxCpuCores:
                                      description: defines max CPU cores for the node
                                        to pick.
                                      type: number
                                    maxRamMib:
                                      description: defines max RAM in MiB for the
                                        node to pick.
                                      type: number
                                    minCpuCores:
                                      description: defines min CPU cores for the node
                                        to pick.
                                      type: number
                                    minRamMib:
                                      description: defines min RAM in MiB for the
                                        node to pick.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: CAST AI cluster id
                    type: string
                  clusterIdRef:
                    description: Reference to a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AutoScalerStatus defines the observed state of AutoScaler.
            properties:
              atProvider:
                properties:
                  autoscalerPolicies:
                    description: computed value to store full policies configuration
                    type: string
                  autoscalerPoliciesJson:
                    description: autoscaler policies JSON string to override current
                      autoscaler settings
                    type: string
                  autoscalerSettings:
                    description: autoscaler policy definitions to override current
                      autoscaler settings
                    items:
                      properties:
                        clusterLimits:
                          description: defines minimum and maximum amount of CPU the
                            cluster can have.
                          items:
                            properties:
                              cpu:
                                description: defines the minimum and maximum amount
                                  of CPUs for cluster's worker nodes.
                                items:
                                  properties:
                                    maxCores:
                                      description: defines the maximum allowed amount
                                        of vCPUs in the whole cluster.
                                      type: number
                                    minCores:
                                      description: defines the minimum allowed amount
                                        of CPUs in the whole cluster.
                                      type: number
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable cluster size limits policy.
                                type: boolean
                            type: object
                          type: array
                        enabled:
                          description: enable/disable autoscaler policies
                          type: boolean
                        isScopedMode:
                          description: run autoscaler in scoped mode. Only marked
                            pods and nodes will be considered.
                          type: boolean
                        nodeDownscaler:
                          description: node downscaler defines policies for removing
                            nodes based on the configured conditions.
                          items:
                            properties:
                              emptyNodes:
                                description: defines whether Node Downscaler should
                                  opt in for removing empty worker nodes when possible.
                                items:
                                  properties:
                                    delaySeconds:
                                      description: period (in seconds) to wait before
                                        removing the node. Might be useful to control
                                        the aggressiveness of the downscaler.
                                      type: number
                                    enabled:
                                      description: enable/disable the empty worker
                                        nodes policy.
                                      type: boolean
                                  type: object
                                type: array
                              enabled:
                                description: enable/disable node downscaler policy.
                                type: boolean
                              evictor:
                                description: defines the CAST AI Evictor component
                                  settings. Evictor watches the pods running in your
                                  cluster and looks for ways to compact them into
                                  fewer nodes, making nodes empty, which will be removed
                                  by the empty worker nodes policy.
                                items:
                                  properties:
                                    aggressiveMode:
                                      description: enable/disable aggressive mode.
                                        By default, Evictor does not target nodes
                                        that are running unreplicated pods. This mode
                                        will make the Evictor start considering application
                                        with just a single replica.
                                      type: boolean
                                    cycleInterval:
                                      description: configure the interval duration
                                        between Evictor operations. This property
                                        can be used to lower or raise the frequency
                                        of the Evictor's find-and-drain operations.
                                      type: string
                                    dryRun:
                                      description: enable/disable dry-run. This property
                                        allows you to prevent the Evictor from carrying
                                        any operations out and preview the actions
                                        it would take.
                                      type: boolean
                                    enabled:
                                      description: enable/disable the Evictor policy.
                                        This will either install or uninstall the
                                        Evictor component in your cluster.
                                      type: boolean
                                    ignorePodDisruptionBudgets:
                                      description: if enabled then Evictor will attempt
                                        to evict pods that have pod disruption budgets
                                        configured.
                                      type: boolean
                                    nodeGracePeriodMinutes:
                                      description: configure the node grace period
                                        which controls the duration which must pass
                                        after a node has been created before Evictor
                                        starts considering that node.
                                      type: number
                                    podEvictionFailureBackOffInterval:
                                      description: configure the pod eviction failure
                                        back off interval. If pod eviction fails then
                                        Evictor will attempt to evict it again after
                                        the amount of time specified here.
                                      type: string
                                    scopedMode:
                                      description: enable/disable scoped mode. By
                                        default, Evictor targets all nodes in the
                                        cluster. This mode will constrain it to just
                                        the nodes which were created by CAST AI.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        nodeTemplatesPartialMatchingEnabled:
                          description: marks whether partial matching should be used
                            when deciding which custom node template to select.
                          type: boolean
                        spotInstances:
                          description: policy defining whether autoscaler can use
                            spot instances for provisioning additional workloads.
                          items:
                            properties:
                              enabled:
                                description: enable/disable spot instances policy.
                                type: boolean
                              maxReclaimRate:
                                description: max allowed reclaim rate when choosing
                                  spot instance type. E.g. if the value is 10%, instance
                                  types having 10% or higher reclaim rate will not
                                  be considered. Set to zero to use all instance types
                                  regardless of reclaim rate.
                                type: number
                              spotBackups:
                                description: policy defining whether autoscaler can
                                  use spot backups instead of spot instances when
                                  spot instances are not available.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot backups policy.
                                      type: boolean
                                    spotBackupRestoreRateSeconds:
                                      description: defines interval on how often spot
                                        backups restore to real spot should occur.
                                      type: number
                                  type: object
                                type: array
                              spotDiversityEnabled:
                                description: enable/disable spot diversity policy.
                                  When enabled, autoscaler will try to balance between
                                  diverse and cost optimal instance types.
                                type: boolean
                              spotDiversityPriceIncreaseLimit:
                                description: allowed node configuration price increase
                                  when diversifying instance types. E.g. if the value
                                  is 10%, then the overall price of diversified instance
                                  types can be 10% higher than the price of the optimal
                                  configuration.
                                type: number
                              spotInterruptionPredictions:
                                description: configure the handling of SPOT interruption
                                  predictions.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable spot interruption
                                        predictions.
                                      type: boolean
                                    spotInterruptionPredictionsType:
                                      description: define the type of the spot interruption
                                        prediction to handle. Allowed values are AWSRebalanceRecommendations,
                                        CASTAIInterruptionPredictions.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        unschedulablePods:
                          description: policy defining autoscaler's behavior when
                            unschedulable pods were detected.
                          items:
                            properties:
                              customInstancesEnabled:
                                description: enable/disable custom instances policy.
                                type: boolean
                              enabled:
                                description: enable/disable unschedulable pods detection
                                  policy.
                                type: boolean
                              headroom:
                                description: additional headroom based on cluster's
                                  total available capacity for on-demand nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              headroomSpot:
                                description: additional headroom based on cluster's
                                  total available capacity for spot nodes.
                                items:
                                  properties:
                                    cpuPercentage:
                                      description: defines percentage of additional
                                        CPU capacity to be added.
                                      type: number
                                    enabled:
                                      description: enable/disable headroom_spot policy.
                                      type: boolean
                                    memoryPercentage:
                                      description: defines percentage of additional
                                        memory capacity to be added.
                                      type: number
                                  type: object
                                type: array
                              nodeConstraints:
                                description: defines the node constraints that will
                                  be applied when autoscaling with Unschedulable Pods
                                  policy.
                                items:
                                  properties:
                                    enabled:
                                      description: enable/disable node constraints
                                        policy.
                                      type: boolean
                                    maxCpuCores:
                                      description: defines max CPU cores for the node
                                        to pick.
                                      type: number
                                    maxRamMib:
                                      description: defines max RAM in MiB for the
                                        node to pick.
                                      type: number
                                    minCpuCores:
                                      description: defines min CPU cores for the node
                                        to pick.
                                      type: number
                                    minRamMib:
                                      description: defines min RAM in MiB for the
                                        node to pick.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: CAST AI cluster id
                    type: string
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
