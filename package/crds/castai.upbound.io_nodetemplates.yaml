---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: nodetemplates.castai.upbound.io
spec:
  group: castai.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - castai
    kind: NodeTemplate
    listKind: NodeTemplateList
    plural: nodetemplates
    singular: nodetemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeTemplate is the Schema for the NodeTemplates API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodeTemplateSpec defines the desired state of NodeTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterId:
                    description: CAST AI cluster id.
                    type: string
                  clusterIdRef:
                    description: Reference to a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  configurationId:
                    description: CAST AI node configuration id to be used for node
                      template.
                    type: string
                  configurationIdRef:
                    description: Reference to a NodeConfiguration in castai to populate
                      configurationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  configurationIdSelector:
                    description: Selector for a NodeConfiguration in castai to populate
                      configurationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  constraints:
                    items:
                      properties:
                        architectures:
                          description: 'List of acceptable instance CPU architectures,
                            the default is amd64. Allowed values: amd64, arm64.'
                          items:
                            type: string
                          type: array
                        azs:
                          description: The list of AZ names to consider for the node
                            template, if empty or not set all AZs are considered.
                          items:
                            type: string
                          type: array
                        computeOptimized:
                          description: Compute optimized instance constraint - will
                            only pick compute optimized nodes if true.
                          type: boolean
                        customPriority:
                          items:
                            properties:
                              instanceFamilies:
                                description: Instance families to prioritize in this
                                  tier.
                                items:
                                  type: string
                                type: array
                              onDemand:
                                description: If true, this tier will apply to on-demand
                                  instances.
                                type: boolean
                              spot:
                                description: If true, this tier will apply to spot
                                  instances.
                                type: boolean
                            type: object
                          type: array
                        dedicatedNodeAffinity:
                          description: |-
                            Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
                            feature is only available for GCP clusters and sole tenancy nodes with local
                            SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
                            type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
                            Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
                            the sole tenancy or dedicated node (example: setting min CPU to 16).
                          items:
                            properties:
                              affinity:
                                items:
                                  properties:
                                    key:
                                      description: Key of the node affinity selector.
                                      type: string
                                    operator:
                                      description: 'Operator of the node affinity
                                        selector. Allowed values: In, NotIn, Exists,
                                        DoesNotExist, Gt, Lt.'
                                      type: string
                                    values:
                                      description: Values of the node affinity selector.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              azName:
                                description: Availability zone name.
                                type: string
                              instanceTypes:
                                description: Instance/node types in this node group.
                                items:
                                  type: string
                                type: array
                              name:
                                description: Name of node group.
                                type: string
                            type: object
                          type: array
                        enableSpotDiversity:
                          description: Enable/disable spot diversity policy. When
                            enabled, autoscaler will try to balance between diverse
                            and cost optimal instance types.
                          type: boolean
                        fallbackRestoreRateSeconds:
                          description: 'Fallback restore rate in seconds: defines
                            how much time should pass before spot fallback should
                            be attempted to be restored to real spot.'
                          type: number
                        gpu:
                          items:
                            properties:
                              excludeNames:
                                description: Names of the GPUs to exclude.
                                items:
                                  type: string
                                type: array
                              includeNames:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              manufacturers:
                                description: Manufacturers of the gpus to select -
                                  NVIDIA, AMD.
                                items:
                                  type: string
                                type: array
                              maxCount:
                                description: Max GPU count for the instance type to
                                  have.
                                type: number
                              minCount:
                                description: Min GPU count for the instance type to
                                  have.
                                type: number
                            type: object
                          type: array
                        instanceFamilies:
                          items:
                            properties:
                              exclude:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              include:
                                description: Instance families to exclude when filtering
                                  (includes all other families).
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        isGpuOnly:
                          description: GPU instance constraint - will only pick nodes
                            with GPU if true
                          type: boolean
                        maxCpu:
                          description: Max CPU cores per node.
                          type: number
                        maxMemory:
                          description: Max Memory (Mib) per node.
                          type: number
                        minCpu:
                          description: Min CPU cores per node.
                          type: number
                        minMemory:
                          description: Min Memory (Mib) per node.
                          type: number
                        onDemand:
                          description: Should include on-demand instances in the considered
                            pool.
                          type: boolean
                        os:
                          description: 'List of acceptable instance Operating Systems,
                            the default is linux. Allowed values: linux, windows.'
                          items:
                            type: string
                          type: array
                        spot:
                          description: Should include spot instances in the considered
                            pool.
                          type: boolean
                        spotDiversityPriceIncreaseLimitPercent:
                          description: Allowed node configuration price increase when
                            diversifying instance types. E.g. if the value is 10%,
                            then the overall price of diversified instance types can
                            be 10% higher than the price of the optimal configuration.
                          type: number
                        spotInterruptionPredictionsEnabled:
                          description: Enable/disable spot interruption predictions.
                          type: boolean
                        spotInterruptionPredictionsType:
                          description: Spot interruption predictions type. Can be
                            either "aws-rebalance-recommendations" or "interruption-predictions".
                          type: string
                        storageOptimized:
                          description: Storage optimized instance constraint - will
                            only pick storage optimized nodes if true
                          type: boolean
                        useSpotFallbacks:
                          description: Spot instance fallback constraint - when true,
                            on-demand instances will be created, when spots are unavailable.
                          type: boolean
                      type: object
                    type: array
                  customInstancesEnabled:
                    description: Marks whether custom instances should be used when
                      deciding which parts of inventory are available. Custom instances
                      are only supported in GCP.
                    type: boolean
                  customInstancesWithExtendedMemoryEnabled:
                    description: Marks whether custom instances with extended memory
                      should be used when deciding which parts of inventory are available.
                      Custom instances are only supported in GCP.
                    type: boolean
                  customLabels:
                    additionalProperties:
                      type: string
                    description: Custom labels to be added to nodes created from this
                      template.
                    type: object
                    x-kubernetes-map-type: granular
                  customTaints:
                    description: Custom taints to be added to the nodes created from
                      this template. `shouldTaint` has to be `true` in order to create/update
                      the node template with custom taints. If `shouldTaint` is `true`,
                      but no custom taints are provided, the nodes will be tainted
                      with the default node template taint.
                    items:
                      properties:
                        effect:
                          description: 'Effect of a taint to be added to nodes created
                            from this template, the default is NoSchedule. Allowed
                            values: NoSchedule, NoExecute.'
                          type: string
                        key:
                          description: Key of a taint to be added to nodes created
                            from this template.
                          type: string
                        value:
                          description: Value of a taint to be added to nodes created
                            from this template.
                          type: string
                      type: object
                    type: array
                  isDefault:
                    description: Flag whether the node template is default.
                    type: boolean
                  isEnabled:
                    description: Flag whether the node template is enabled and considered
                      for autoscaling.
                    type: boolean
                  name:
                    description: Name of the node template.
                    type: string
                  rebalancingConfigMinNodes:
                    description: Minimum nodes that will be kept when rebalancing
                      nodes using this node template.
                    type: number
                  shouldTaint:
                    description: Marks whether the templated nodes will have a taint.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  clusterId:
                    description: CAST AI cluster id.
                    type: string
                  clusterIdRef:
                    description: Reference to a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a EksClusterId in castai to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  configurationId:
                    description: CAST AI node configuration id to be used for node
                      template.
                    type: string
                  configurationIdRef:
                    description: Reference to a NodeConfiguration in castai to populate
                      configurationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  configurationIdSelector:
                    description: Selector for a NodeConfiguration in castai to populate
                      configurationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  constraints:
                    items:
                      properties:
                        architectures:
                          description: 'List of acceptable instance CPU architectures,
                            the default is amd64. Allowed values: amd64, arm64.'
                          items:
                            type: string
                          type: array
                        azs:
                          description: The list of AZ names to consider for the node
                            template, if empty or not set all AZs are considered.
                          items:
                            type: string
                          type: array
                        computeOptimized:
                          description: Compute optimized instance constraint - will
                            only pick compute optimized nodes if true.
                          type: boolean
                        customPriority:
                          items:
                            properties:
                              instanceFamilies:
                                description: Instance families to prioritize in this
                                  tier.
                                items:
                                  type: string
                                type: array
                              onDemand:
                                description: If true, this tier will apply to on-demand
                                  instances.
                                type: boolean
                              spot:
                                description: If true, this tier will apply to spot
                                  instances.
                                type: boolean
                            type: object
                          type: array
                        dedicatedNodeAffinity:
                          description: |-
                            Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
                            feature is only available for GCP clusters and sole tenancy nodes with local
                            SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
                            type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
                            Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
                            the sole tenancy or dedicated node (example: setting min CPU to 16).
                          items:
                            properties:
                              affinity:
                                items:
                                  properties:
                                    key:
                                      description: Key of the node affinity selector.
                                      type: string
                                    operator:
                                      description: 'Operator of the node affinity
                                        selector. Allowed values: In, NotIn, Exists,
                                        DoesNotExist, Gt, Lt.'
                                      type: string
                                    values:
                                      description: Values of the node affinity selector.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              azName:
                                description: Availability zone name.
                                type: string
                              instanceTypes:
                                description: Instance/node types in this node group.
                                items:
                                  type: string
                                type: array
                              name:
                                description: Name of node group.
                                type: string
                            type: object
                          type: array
                        enableSpotDiversity:
                          description: Enable/disable spot diversity policy. When
                            enabled, autoscaler will try to balance between diverse
                            and cost optimal instance types.
                          type: boolean
                        fallbackRestoreRateSeconds:
                          description: 'Fallback restore rate in seconds: defines
                            how much time should pass before spot fallback should
                            be attempted to be restored to real spot.'
                          type: number
                        gpu:
                          items:
                            properties:
                              excludeNames:
                                description: Names of the GPUs to exclude.
                                items:
                                  type: string
                                type: array
                              includeNames:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              manufacturers:
                                description: Manufacturers of the gpus to select -
                                  NVIDIA, AMD.
                                items:
                                  type: string
                                type: array
                              maxCount:
                                description: Max GPU count for the instance type to
                                  have.
                                type: number
                              minCount:
                                description: Min GPU count for the instance type to
                                  have.
                                type: number
                            type: object
                          type: array
                        instanceFamilies:
                          items:
                            properties:
                              exclude:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              include:
                                description: Instance families to exclude when filtering
                                  (includes all other families).
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        isGpuOnly:
                          description: GPU instance constraint - will only pick nodes
                            with GPU if true
                          type: boolean
                        maxCpu:
                          description: Max CPU cores per node.
                          type: number
                        maxMemory:
                          description: Max Memory (Mib) per node.
                          type: number
                        minCpu:
                          description: Min CPU cores per node.
                          type: number
                        minMemory:
                          description: Min Memory (Mib) per node.
                          type: number
                        onDemand:
                          description: Should include on-demand instances in the considered
                            pool.
                          type: boolean
                        os:
                          description: 'List of acceptable instance Operating Systems,
                            the default is linux. Allowed values: linux, windows.'
                          items:
                            type: string
                          type: array
                        spot:
                          description: Should include spot instances in the considered
                            pool.
                          type: boolean
                        spotDiversityPriceIncreaseLimitPercent:
                          description: Allowed node configuration price increase when
                            diversifying instance types. E.g. if the value is 10%,
                            then the overall price of diversified instance types can
                            be 10% higher than the price of the optimal configuration.
                          type: number
                        spotInterruptionPredictionsEnabled:
                          description: Enable/disable spot interruption predictions.
                          type: boolean
                        spotInterruptionPredictionsType:
                          description: Spot interruption predictions type. Can be
                            either "aws-rebalance-recommendations" or "interruption-predictions".
                          type: string
                        storageOptimized:
                          description: Storage optimized instance constraint - will
                            only pick storage optimized nodes if true
                          type: boolean
                        useSpotFallbacks:
                          description: Spot instance fallback constraint - when true,
                            on-demand instances will be created, when spots are unavailable.
                          type: boolean
                      type: object
                    type: array
                  customInstancesEnabled:
                    description: Marks whether custom instances should be used when
                      deciding which parts of inventory are available. Custom instances
                      are only supported in GCP.
                    type: boolean
                  customInstancesWithExtendedMemoryEnabled:
                    description: Marks whether custom instances with extended memory
                      should be used when deciding which parts of inventory are available.
                      Custom instances are only supported in GCP.
                    type: boolean
                  customLabels:
                    additionalProperties:
                      type: string
                    description: Custom labels to be added to nodes created from this
                      template.
                    type: object
                    x-kubernetes-map-type: granular
                  customTaints:
                    description: Custom taints to be added to the nodes created from
                      this template. `shouldTaint` has to be `true` in order to create/update
                      the node template with custom taints. If `shouldTaint` is `true`,
                      but no custom taints are provided, the nodes will be tainted
                      with the default node template taint.
                    items:
                      properties:
                        effect:
                          description: 'Effect of a taint to be added to nodes created
                            from this template, the default is NoSchedule. Allowed
                            values: NoSchedule, NoExecute.'
                          type: string
                        key:
                          description: Key of a taint to be added to nodes created
                            from this template.
                          type: string
                        value:
                          description: Value of a taint to be added to nodes created
                            from this template.
                          type: string
                      type: object
                    type: array
                  isDefault:
                    description: Flag whether the node template is default.
                    type: boolean
                  isEnabled:
                    description: Flag whether the node template is enabled and considered
                      for autoscaling.
                    type: boolean
                  name:
                    description: Name of the node template.
                    type: string
                  rebalancingConfigMinNodes:
                    description: Minimum nodes that will be kept when rebalancing
                      nodes using this node template.
                    type: number
                  shouldTaint:
                    description: Marks whether the templated nodes will have a taint.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: NodeTemplateStatus defines the observed state of NodeTemplate.
            properties:
              atProvider:
                properties:
                  clusterId:
                    description: CAST AI cluster id.
                    type: string
                  configurationId:
                    description: CAST AI node configuration id to be used for node
                      template.
                    type: string
                  constraints:
                    items:
                      properties:
                        architectures:
                          description: 'List of acceptable instance CPU architectures,
                            the default is amd64. Allowed values: amd64, arm64.'
                          items:
                            type: string
                          type: array
                        azs:
                          description: The list of AZ names to consider for the node
                            template, if empty or not set all AZs are considered.
                          items:
                            type: string
                          type: array
                        computeOptimized:
                          description: Compute optimized instance constraint - will
                            only pick compute optimized nodes if true.
                          type: boolean
                        customPriority:
                          items:
                            properties:
                              instanceFamilies:
                                description: Instance families to prioritize in this
                                  tier.
                                items:
                                  type: string
                                type: array
                              onDemand:
                                description: If true, this tier will apply to on-demand
                                  instances.
                                type: boolean
                              spot:
                                description: If true, this tier will apply to spot
                                  instances.
                                type: boolean
                            type: object
                          type: array
                        dedicatedNodeAffinity:
                          description: |-
                            Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
                            feature is only available for GCP clusters and sole tenancy nodes with local
                            SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
                            type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
                            Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
                            the sole tenancy or dedicated node (example: setting min CPU to 16).
                          items:
                            properties:
                              affinity:
                                items:
                                  properties:
                                    key:
                                      description: Key of the node affinity selector.
                                      type: string
                                    operator:
                                      description: 'Operator of the node affinity
                                        selector. Allowed values: In, NotIn, Exists,
                                        DoesNotExist, Gt, Lt.'
                                      type: string
                                    values:
                                      description: Values of the node affinity selector.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              azName:
                                description: Availability zone name.
                                type: string
                              instanceTypes:
                                description: Instance/node types in this node group.
                                items:
                                  type: string
                                type: array
                              name:
                                description: Name of node group.
                                type: string
                            type: object
                          type: array
                        enableSpotDiversity:
                          description: Enable/disable spot diversity policy. When
                            enabled, autoscaler will try to balance between diverse
                            and cost optimal instance types.
                          type: boolean
                        fallbackRestoreRateSeconds:
                          description: 'Fallback restore rate in seconds: defines
                            how much time should pass before spot fallback should
                            be attempted to be restored to real spot.'
                          type: number
                        gpu:
                          items:
                            properties:
                              excludeNames:
                                description: Names of the GPUs to exclude.
                                items:
                                  type: string
                                type: array
                              includeNames:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              manufacturers:
                                description: Manufacturers of the gpus to select -
                                  NVIDIA, AMD.
                                items:
                                  type: string
                                type: array
                              maxCount:
                                description: Max GPU count for the instance type to
                                  have.
                                type: number
                              minCount:
                                description: Min GPU count for the instance type to
                                  have.
                                type: number
                            type: object
                          type: array
                        instanceFamilies:
                          items:
                            properties:
                              exclude:
                                description: Instance families to include when filtering
                                  (excludes all other families).
                                items:
                                  type: string
                                type: array
                              include:
                                description: Instance families to exclude when filtering
                                  (includes all other families).
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        isGpuOnly:
                          description: GPU instance constraint - will only pick nodes
                            with GPU if true
                          type: boolean
                        maxCpu:
                          description: Max CPU cores per node.
                          type: number
                        maxMemory:
                          description: Max Memory (Mib) per node.
                          type: number
                        minCpu:
                          description: Min CPU cores per node.
                          type: number
                        minMemory:
                          description: Min Memory (Mib) per node.
                          type: number
                        onDemand:
                          description: Should include on-demand instances in the considered
                            pool.
                          type: boolean
                        os:
                          description: 'List of acceptable instance Operating Systems,
                            the default is linux. Allowed values: linux, windows.'
                          items:
                            type: string
                          type: array
                        spot:
                          description: Should include spot instances in the considered
                            pool.
                          type: boolean
                        spotDiversityPriceIncreaseLimitPercent:
                          description: Allowed node configuration price increase when
                            diversifying instance types. E.g. if the value is 10%,
                            then the overall price of diversified instance types can
                            be 10% higher than the price of the optimal configuration.
                          type: number
                        spotInterruptionPredictionsEnabled:
                          description: Enable/disable spot interruption predictions.
                          type: boolean
                        spotInterruptionPredictionsType:
                          description: Spot interruption predictions type. Can be
                            either "aws-rebalance-recommendations" or "interruption-predictions".
                          type: string
                        storageOptimized:
                          description: Storage optimized instance constraint - will
                            only pick storage optimized nodes if true
                          type: boolean
                        useSpotFallbacks:
                          description: Spot instance fallback constraint - when true,
                            on-demand instances will be created, when spots are unavailable.
                          type: boolean
                      type: object
                    type: array
                  customInstancesEnabled:
                    description: Marks whether custom instances should be used when
                      deciding which parts of inventory are available. Custom instances
                      are only supported in GCP.
                    type: boolean
                  customInstancesWithExtendedMemoryEnabled:
                    description: Marks whether custom instances with extended memory
                      should be used when deciding which parts of inventory are available.
                      Custom instances are only supported in GCP.
                    type: boolean
                  customLabels:
                    additionalProperties:
                      type: string
                    description: Custom labels to be added to nodes created from this
                      template.
                    type: object
                    x-kubernetes-map-type: granular
                  customTaints:
                    description: Custom taints to be added to the nodes created from
                      this template. `shouldTaint` has to be `true` in order to create/update
                      the node template with custom taints. If `shouldTaint` is `true`,
                      but no custom taints are provided, the nodes will be tainted
                      with the default node template taint.
                    items:
                      properties:
                        effect:
                          description: 'Effect of a taint to be added to nodes created
                            from this template, the default is NoSchedule. Allowed
                            values: NoSchedule, NoExecute.'
                          type: string
                        key:
                          description: Key of a taint to be added to nodes created
                            from this template.
                          type: string
                        value:
                          description: Value of a taint to be added to nodes created
                            from this template.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  isDefault:
                    description: Flag whether the node template is default.
                    type: boolean
                  isEnabled:
                    description: Flag whether the node template is enabled and considered
                      for autoscaling.
                    type: boolean
                  name:
                    description: Name of the node template.
                    type: string
                  rebalancingConfigMinNodes:
                    description: Minimum nodes that will be kept when rebalancing
                      nodes using this node template.
                    type: number
                  shouldTaint:
                    description: Marks whether the templated nodes will have a taint.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
