---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: scalingpolicies.castai.upbound.io
spec:
  group: castai.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - castai
    kind: ScalingPolicy
    listKind: ScalingPolicyList
    plural: scalingpolicies
    singular: scalingpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScalingPolicy is the Schema for the ScalingPolicys API. Manage
          workload scaling policy. Scaling policy reference https://docs.cast.ai/docs/woop-scaling-policies
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScalingPolicySpec defines the desired state of ScalingPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  antiAffinity:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        considerAntiAffinity:
                          description: |-
                            affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                            Defines if anti-affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                          type: boolean
                      type: object
                    type: array
                  applyType:
                    description: |-
                      (String) Recommendation apply type.
                      Recommendation apply type.
                      - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                      - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                    type: string
                  assignmentRules:
                    description: |-
                      (Block List) Allows defining conditions for automatically assigning workloads to this scaling policy. (see below for nested schema)
                      Allows defining conditions for automatically assigning workloads to this scaling policy.
                    items:
                      properties:
                        rules:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              namespace:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's namespace. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's namespace.
                                items:
                                  properties:
                                    names:
                                      description: |-
                                        (List of String) Defines matching by namespace names.
                                        Defines matching by namespace names.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              workload:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's metadata. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's metadata.
                                items:
                                  properties:
                                    gvk:
                                      description: |-
                                        (List of String) Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        - only kind, e.g. "Deployment"
                                        - group and kind: e.g."Deployment.apps"
                                        - group, version and kind: e.g."Deployment.v1.apps"
                                      items:
                                        type: string
                                      type: array
                                    labelsExpressions:
                                      description: |-
                                        (Block List) Defines matching by label selector requirements. (see below for nested schema)
                                        Defines matching by label selector requirements.
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The label key to match. Required for all operators except Regex and Contains. If not specified, it will search through all labels.
                                              The label key to match. Required for all operators except `Regex` and `Contains`. If not specified, it will search through all labels.
                                            type: string
                                          operator:
                                            description: |-
                                              (String) The operator to use for matching the label.
                                              The operator to use for matching the label.
                                            type: string
                                          values:
                                            description: |-
                                              (List of String) A list of values to match against the label key. It is required for In, NotIn, Regex, and Contains operators.
                                              A list of values to match against the label key. It is required for `In`, `NotIn`, `Regex`, and `Contains` operators.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: |-
                      (String) CAST AI cluster id
                      CAST AI cluster id
                    type: string
                  confidence:
                    description: |-
                      (Block List, Max: 1) Defines the confidence settings for applying recommendations. (see below for nested schema)
                      Defines the confidence settings for applying recommendations.
                    items:
                      properties:
                        threshold:
                          description: |-
                            changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                            Defines the confidence threshold for applying recommendations. The smaller number indicates that we require fewer metrics data points to apply recommendations - changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                          type: number
                      type: object
                    type: array
                  cpu:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  downscaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when downscaling.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  managementOption:
                    description: |-
                      (String) Defines possible options for workload management.
                      Defines possible options for workload management.
                      - READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
                      - MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
                    type: string
                  memory:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  memoryEvent:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when applying recommendation for memory related event.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Scaling policy name
                      Scaling policy name
                    type: string
                  predictiveScaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        cpu:
                          description: |-
                            (Block List, Min: 1, Max: 1) (see below for nested schema)
                            Defines predictive scaling resource configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Defines if predictive scaling is enabled for resource.
                                  Defines if predictive scaling is enabled for resource.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  rolloutBehavior:
                    description: |-
                      (Block List, Max: 1) Defines the rollout behavior used when applying recommendations. Prerequisites:
                      Defines the rollout behavior used when applying recommendations. Prerequisites:
                      - Applicable to Deployment resources that support running as multi-replica.
                      - Deployment is running with single replica (replica count = 1).
                      - Deployment's rollout strategy allows for downtime.
                      - Recommendation apply type is "immediate".
                      - Cluster has workload-autoscaler component version v0.35.3 or higher.
                    items:
                      properties:
                        type:
                          description: |-
                            (String) Defines apply theshold strategy type.
                            Defines the rollout type to be used when applying recommendations.
                            - NO_DISRUPTION - pods are restarted without causing service disruption.
                          type: string
                      type: object
                    type: array
                  startup:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        periodSeconds:
                          description: |-
                            (Number) Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                            Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                          type: number
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  antiAffinity:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        considerAntiAffinity:
                          description: |-
                            affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                            Defines if anti-affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                          type: boolean
                      type: object
                    type: array
                  applyType:
                    description: |-
                      (String) Recommendation apply type.
                      Recommendation apply type.
                      - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                      - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                    type: string
                  assignmentRules:
                    description: |-
                      (Block List) Allows defining conditions for automatically assigning workloads to this scaling policy. (see below for nested schema)
                      Allows defining conditions for automatically assigning workloads to this scaling policy.
                    items:
                      properties:
                        rules:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              namespace:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's namespace. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's namespace.
                                items:
                                  properties:
                                    names:
                                      description: |-
                                        (List of String) Defines matching by namespace names.
                                        Defines matching by namespace names.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              workload:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's metadata. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's metadata.
                                items:
                                  properties:
                                    gvk:
                                      description: |-
                                        (List of String) Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        - only kind, e.g. "Deployment"
                                        - group and kind: e.g."Deployment.apps"
                                        - group, version and kind: e.g."Deployment.v1.apps"
                                      items:
                                        type: string
                                      type: array
                                    labelsExpressions:
                                      description: |-
                                        (Block List) Defines matching by label selector requirements. (see below for nested schema)
                                        Defines matching by label selector requirements.
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The label key to match. Required for all operators except Regex and Contains. If not specified, it will search through all labels.
                                              The label key to match. Required for all operators except `Regex` and `Contains`. If not specified, it will search through all labels.
                                            type: string
                                          operator:
                                            description: |-
                                              (String) The operator to use for matching the label.
                                              The operator to use for matching the label.
                                            type: string
                                          values:
                                            description: |-
                                              (List of String) A list of values to match against the label key. It is required for In, NotIn, Regex, and Contains operators.
                                              A list of values to match against the label key. It is required for `In`, `NotIn`, `Regex`, and `Contains` operators.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: |-
                      (String) CAST AI cluster id
                      CAST AI cluster id
                    type: string
                  confidence:
                    description: |-
                      (Block List, Max: 1) Defines the confidence settings for applying recommendations. (see below for nested schema)
                      Defines the confidence settings for applying recommendations.
                    items:
                      properties:
                        threshold:
                          description: |-
                            changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                            Defines the confidence threshold for applying recommendations. The smaller number indicates that we require fewer metrics data points to apply recommendations - changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                          type: number
                      type: object
                    type: array
                  cpu:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  downscaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when downscaling.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  managementOption:
                    description: |-
                      (String) Defines possible options for workload management.
                      Defines possible options for workload management.
                      - READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
                      - MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
                    type: string
                  memory:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  memoryEvent:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when applying recommendation for memory related event.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Scaling policy name
                      Scaling policy name
                    type: string
                  predictiveScaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        cpu:
                          description: |-
                            (Block List, Min: 1, Max: 1) (see below for nested schema)
                            Defines predictive scaling resource configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Defines if predictive scaling is enabled for resource.
                                  Defines if predictive scaling is enabled for resource.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  rolloutBehavior:
                    description: |-
                      (Block List, Max: 1) Defines the rollout behavior used when applying recommendations. Prerequisites:
                      Defines the rollout behavior used when applying recommendations. Prerequisites:
                      - Applicable to Deployment resources that support running as multi-replica.
                      - Deployment is running with single replica (replica count = 1).
                      - Deployment's rollout strategy allows for downtime.
                      - Recommendation apply type is "immediate".
                      - Cluster has workload-autoscaler component version v0.35.3 or higher.
                    items:
                      properties:
                        type:
                          description: |-
                            (String) Defines apply theshold strategy type.
                            Defines the rollout type to be used when applying recommendations.
                            - NO_DISRUPTION - pods are restarted without causing service disruption.
                          type: string
                      type: object
                    type: array
                  startup:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        periodSeconds:
                          description: |-
                            (Number) Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                            Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.applyType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.applyType)
                || (has(self.initProvider) && has(self.initProvider.applyType))'
            - message: spec.forProvider.clusterId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterId)
                || (has(self.initProvider) && has(self.initProvider.clusterId))'
            - message: spec.forProvider.cpu is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cpu)
                || (has(self.initProvider) && has(self.initProvider.cpu))'
            - message: spec.forProvider.managementOption is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.managementOption)
                || (has(self.initProvider) && has(self.initProvider.managementOption))'
            - message: spec.forProvider.memory is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.memory)
                || (has(self.initProvider) && has(self.initProvider.memory))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ScalingPolicyStatus defines the observed state of ScalingPolicy.
            properties:
              atProvider:
                properties:
                  antiAffinity:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        considerAntiAffinity:
                          description: |-
                            affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                            Defines if anti-affinity should be considered when scaling the workload.
                            If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
                          type: boolean
                      type: object
                    type: array
                  applyType:
                    description: |-
                      (String) Recommendation apply type.
                      Recommendation apply type.
                      - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                      - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                    type: string
                  assignmentRules:
                    description: |-
                      (Block List) Allows defining conditions for automatically assigning workloads to this scaling policy. (see below for nested schema)
                      Allows defining conditions for automatically assigning workloads to this scaling policy.
                    items:
                      properties:
                        rules:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              namespace:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's namespace. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's namespace.
                                items:
                                  properties:
                                    names:
                                      description: |-
                                        (List of String) Defines matching by namespace names.
                                        Defines matching by namespace names.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              workload:
                                description: |-
                                  (Block List, Max: 1) Allows assigning a scaling policy based on the workload's metadata. (see below for nested schema)
                                  Allows assigning a scaling policy based on the workload's metadata.
                                items:
                                  properties:
                                    gvk:
                                      description: |-
                                        (List of String) Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        Group, version, and kind for Kubernetes resources. Format: kind[.version][.group].
                                        It can be either:
                                        - only kind, e.g. "Deployment"
                                        - group and kind: e.g."Deployment.apps"
                                        - group, version and kind: e.g."Deployment.v1.apps"
                                      items:
                                        type: string
                                      type: array
                                    labelsExpressions:
                                      description: |-
                                        (Block List) Defines matching by label selector requirements. (see below for nested schema)
                                        Defines matching by label selector requirements.
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The label key to match. Required for all operators except Regex and Contains. If not specified, it will search through all labels.
                                              The label key to match. Required for all operators except `Regex` and `Contains`. If not specified, it will search through all labels.
                                            type: string
                                          operator:
                                            description: |-
                                              (String) The operator to use for matching the label.
                                              The operator to use for matching the label.
                                            type: string
                                          values:
                                            description: |-
                                              (List of String) A list of values to match against the label key. It is required for In, NotIn, Regex, and Contains operators.
                                              A list of values to match against the label key. It is required for `In`, `NotIn`, `Regex`, and `Contains` operators.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterId:
                    description: |-
                      (String) CAST AI cluster id
                      CAST AI cluster id
                    type: string
                  confidence:
                    description: |-
                      (Block List, Max: 1) Defines the confidence settings for applying recommendations. (see below for nested schema)
                      Defines the confidence settings for applying recommendations.
                    items:
                      properties:
                        threshold:
                          description: |-
                            changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                            Defines the confidence threshold for applying recommendations. The smaller number indicates that we require fewer metrics data points to apply recommendations - changing this value can cause applying less precise recommendations. Do not change the default unless you want to optimize with fewer data points (e.g., short-lived workloads).
                          type: number
                      type: object
                    type: array
                  cpu:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  downscaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when downscaling.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  managementOption:
                    description: |-
                      (String) Defines possible options for workload management.
                      Defines possible options for workload management.
                      - READ_ONLY - workload watched (metrics collected), but no actions performed by CAST AI.
                      - MANAGED - workload watched (metrics collected), CAST AI may perform actions on the workload.
                    type: string
                  memory:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        applyThreshold:
                          description: |-
                            (Number, Deprecated) The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                            The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
                          type: number
                        applyThresholdStrategy:
                          description: |-
                            (Block List, Max: 1) Resource apply threshold strategy settings. The default strategy is PERCENTAGE with percentage value set to 0.1. (see below for nested schema)
                            Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
                          items:
                            properties:
                              denominator:
                                description: |-
                                  (String) If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: string
                              exponent:
                                description: |-
                                  (Number) The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
                                  - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
                                  - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
                                  It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              numerator:
                                description: |-
                                  smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                  The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
                                type: number
                              percentage:
                                description: |-
                                  (Number) Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                  Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines apply theshold strategy type.
                                  - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
                                  - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
                                  - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
                                type: string
                            type: object
                          type: array
                        args:
                          description: |-
                            i.e. for QUANTILE this should be a [0, 1] float. MAX doesn't accept any args
                            The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
                          items:
                            type: string
                          type: array
                        function:
                          description: |-
                            (String) The function used to calculate the resource recommendation. Supported values: QUANTILE, MAX
                            The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
                          type: string
                        limit:
                          description: |-
                            (Block List, Max: 1) Resource limit settings (see below for nested schema)
                            Resource limit settings
                          items:
                            properties:
                              multiplier:
                                description: |-
                                  (Number) Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                  Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
                                type: number
                              type:
                                description: |-
                                  (String) Defines apply theshold strategy type.
                                  Defines limit strategy type.
                                  - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
                                  - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
                                type: string
                            type: object
                          type: array
                        lookBackPeriodSeconds:
                          description: |-
                            (Number) The look back period in seconds for the recommendation.
                            The look back period in seconds for the recommendation.
                          type: number
                        managementOption:
                          description: |-
                            (String) Defines possible options for workload management.
                            Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
                          type: string
                        max:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        min:
                          description: |-
                            this is in MiB, for CPU - this is in cores.
                            Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
                          type: number
                        overhead:
                          description: |-
                            (Number) Overhead for the recommendation, e.g. 0.1 will result in 10% higher recommendation
                            Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
                          type: number
                      type: object
                    type: array
                  memoryEvent:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        applyType:
                          description: |-
                            (String) Recommendation apply type.
                            Defines the apply type to be used when applying recommendation for memory related event.
                            - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
                            - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) Scaling policy name
                      Scaling policy name
                    type: string
                  predictiveScaling:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        cpu:
                          description: |-
                            (Block List, Min: 1, Max: 1) (see below for nested schema)
                            Defines predictive scaling resource configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Defines if predictive scaling is enabled for resource.
                                  Defines if predictive scaling is enabled for resource.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  rolloutBehavior:
                    description: |-
                      (Block List, Max: 1) Defines the rollout behavior used when applying recommendations. Prerequisites:
                      Defines the rollout behavior used when applying recommendations. Prerequisites:
                      - Applicable to Deployment resources that support running as multi-replica.
                      - Deployment is running with single replica (replica count = 1).
                      - Deployment's rollout strategy allows for downtime.
                      - Recommendation apply type is "immediate".
                      - Cluster has workload-autoscaler component version v0.35.3 or higher.
                    items:
                      properties:
                        type:
                          description: |-
                            (String) Defines apply theshold strategy type.
                            Defines the rollout type to be used when applying recommendations.
                            - NO_DISRUPTION - pods are restarted without causing service disruption.
                          type: string
                      type: object
                    type: array
                  startup:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        periodSeconds:
                          description: |-
                            (Number) Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                            Defines the duration (in seconds) during which elevated resource usage is expected at startup.
                            When set, recommendations will be adjusted to disregard resource spikes within this period.
                            If not specified, the workload will receive standard recommendations without startup considerations.
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
